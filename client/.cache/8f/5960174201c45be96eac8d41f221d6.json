{"id":"node_modules/@colyseus/schema/build/umd/index.js","dependencies":[{"name":"E:\\ZVSH\\client\\package.json","includedInParent":true,"mtime":1668938582389},{"name":"E:\\ZVSH\\client\\node_modules\\@colyseus\\schema\\package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"var define;\nvar global = arguments[3];\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.schema = {}));\n})(this, (function (exports) { 'use strict';\n\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    }\n\n    // export const SWITCH_TO_STRUCTURE = 193; (easily collides with DELETE_AND_ADD + fieldIndex = 2)\n    var SWITCH_TO_STRUCTURE = 255; // (decoding collides with DELETE_AND_ADD + fieldIndex = 63)\n    var TYPE_ID = 213;\n    /**\n     * Encoding Schema field operations.\n     */\n    exports.OPERATION = void 0;\n    (function (OPERATION) {\n        // add new structure/primitive\n        OPERATION[OPERATION[\"ADD\"] = 128] = \"ADD\";\n        // replace structure/primitive\n        OPERATION[OPERATION[\"REPLACE\"] = 0] = \"REPLACE\";\n        // delete field\n        OPERATION[OPERATION[\"DELETE\"] = 64] = \"DELETE\";\n        // DELETE field, followed by an ADD\n        OPERATION[OPERATION[\"DELETE_AND_ADD\"] = 192] = \"DELETE_AND_ADD\";\n        // TOUCH is used to determine hierarchy of nested Schema structures during serialization.\n        // touches are NOT encoded.\n        OPERATION[OPERATION[\"TOUCH\"] = 1] = \"TOUCH\";\n        // MapSchema Operations\n        OPERATION[OPERATION[\"CLEAR\"] = 10] = \"CLEAR\";\n    })(exports.OPERATION || (exports.OPERATION = {}));\n    // export enum OPERATION {\n    //     // add new structure/primitive\n    //     // (128)\n    //     ADD = 128, // 10000000,\n    //     // replace structure/primitive\n    //     REPLACE = 1,// 00000001\n    //     // delete field\n    //     DELETE = 192, // 11000000\n    //     // DELETE field, followed by an ADD\n    //     DELETE_AND_ADD = 224, // 11100000\n    //     // TOUCH is used to determine hierarchy of nested Schema structures during serialization.\n    //     // touches are NOT encoded.\n    //     TOUCH = 0, // 00000000\n    //     // MapSchema Operations\n    //     CLEAR = 10,\n    // }\n\n    //\n    // Root holds all schema references by unique id\n    //\n    var Root = /** @class */ (function () {\n        function Root() {\n            //\n            // Relation of refId => Schema structure\n            // For direct access of structures during decoding time.\n            //\n            this.refs = new Map();\n            this.refCounts = {};\n            this.deletedRefs = new Set();\n            this.nextUniqueId = 0;\n        }\n        Root.prototype.getNextUniqueId = function () {\n            return this.nextUniqueId++;\n        };\n        // for decoding\n        Root.prototype.addRef = function (refId, ref, incrementCount) {\n            if (incrementCount === void 0) { incrementCount = true; }\n            this.refs.set(refId, ref);\n            if (incrementCount) {\n                this.refCounts[refId] = (this.refCounts[refId] || 0) + 1;\n            }\n        };\n        // for decoding\n        Root.prototype.removeRef = function (refId) {\n            this.refCounts[refId] = this.refCounts[refId] - 1;\n            this.deletedRefs.add(refId);\n        };\n        Root.prototype.clearRefs = function () {\n            this.refs.clear();\n            this.deletedRefs.clear();\n            this.refCounts = {};\n        };\n        // for decoding\n        Root.prototype.garbageCollectDeletedRefs = function () {\n            var _this = this;\n            this.deletedRefs.forEach(function (refId) {\n                if (_this.refCounts[refId] <= 0) {\n                    var ref = _this.refs.get(refId);\n                    //\n                    // Ensure child schema instances have their references removed as well.\n                    //\n                    if (ref instanceof Schema) {\n                        for (var fieldName in ref['_definition'].schema) {\n                            if (typeof (ref['_definition'].schema[fieldName]) !== \"string\" &&\n                                ref[fieldName] &&\n                                ref[fieldName]['$changes']) {\n                                _this.removeRef(ref[fieldName]['$changes'].refId);\n                            }\n                        }\n                    }\n                    else {\n                        var definition = ref['$changes'].parent._definition;\n                        var type = definition.schema[definition.fieldsByIndex[ref['$changes'].parentIndex]];\n                        if (typeof (Object.values(type)[0]) === \"function\") {\n                            Array.from(ref.values())\n                                .forEach(function (child) { return _this.removeRef(child['$changes'].refId); });\n                        }\n                    }\n                    _this.refs.delete(refId);\n                    delete _this.refCounts[refId];\n                }\n            });\n            // clear deleted refs.\n            this.deletedRefs.clear();\n        };\n        return Root;\n    }());\n    var ChangeTree = /** @class */ (function () {\n        function ChangeTree(ref, parent, root) {\n            this.changed = false;\n            this.changes = new Map();\n            this.allChanges = new Set();\n            // cached indexes for filtering\n            this.caches = {};\n            this.currentCustomOperation = 0;\n            this.ref = ref;\n            this.setParent(parent, root);\n        }\n        ChangeTree.prototype.setParent = function (parent, root, parentIndex) {\n            var _this = this;\n            if (!this.indexes) {\n                this.indexes = (this.ref instanceof Schema)\n                    ? this.ref['_definition'].indexes\n                    : {};\n            }\n            this.parent = parent;\n            this.parentIndex = parentIndex;\n            // avoid setting parents with empty `root`\n            if (!root) {\n                return;\n            }\n            this.root = root;\n            //\n            // assign same parent on child structures\n            //\n            if (this.ref instanceof Schema) {\n                var definition = this.ref['_definition'];\n                for (var field in definition.schema) {\n                    var value = this.ref[field];\n                    if (value && value['$changes']) {\n                        var parentIndex_1 = definition.indexes[field];\n                        value['$changes'].setParent(this.ref, root, parentIndex_1);\n                    }\n                }\n            }\n            else if (typeof (this.ref) === \"object\") {\n                this.ref.forEach(function (value, key) {\n                    if (value instanceof Schema) {\n                        var changeTreee = value['$changes'];\n                        var parentIndex_2 = _this.ref['$changes'].indexes[key];\n                        changeTreee.setParent(_this.ref, _this.root, parentIndex_2);\n                    }\n                });\n            }\n        };\n        ChangeTree.prototype.operation = function (op) {\n            this.changes.set(--this.currentCustomOperation, op);\n        };\n        ChangeTree.prototype.change = function (fieldName, operation) {\n            if (operation === void 0) { operation = exports.OPERATION.ADD; }\n            var index = (typeof (fieldName) === \"number\")\n                ? fieldName\n                : this.indexes[fieldName];\n            this.assertValidIndex(index, fieldName);\n            var previousChange = this.changes.get(index);\n            if (!previousChange ||\n                previousChange.op === exports.OPERATION.DELETE ||\n                previousChange.op === exports.OPERATION.TOUCH // (mazmorra.io's BattleAction issue)\n            ) {\n                this.changes.set(index, {\n                    op: (!previousChange)\n                        ? operation\n                        : (previousChange.op === exports.OPERATION.DELETE)\n                            ? exports.OPERATION.DELETE_AND_ADD\n                            : operation,\n                    // : OPERATION.REPLACE,\n                    index: index\n                });\n            }\n            this.allChanges.add(index);\n            this.changed = true;\n            this.touchParents();\n        };\n        ChangeTree.prototype.touch = function (fieldName) {\n            var index = (typeof (fieldName) === \"number\")\n                ? fieldName\n                : this.indexes[fieldName];\n            this.assertValidIndex(index, fieldName);\n            if (!this.changes.has(index)) {\n                this.changes.set(index, { op: exports.OPERATION.TOUCH, index: index });\n            }\n            this.allChanges.add(index);\n            // ensure touch is placed until the $root is found.\n            this.touchParents();\n        };\n        ChangeTree.prototype.touchParents = function () {\n            if (this.parent) {\n                this.parent['$changes'].touch(this.parentIndex);\n            }\n        };\n        ChangeTree.prototype.getType = function (index) {\n            if (this.ref['_definition']) {\n                var definition = this.ref['_definition'];\n                return definition.schema[definition.fieldsByIndex[index]];\n            }\n            else {\n                var definition = this.parent['_definition'];\n                var parentType = definition.schema[definition.fieldsByIndex[this.parentIndex]];\n                //\n                // Get the child type from parent structure.\n                // - [\"string\"] => \"string\"\n                // - { map: \"string\" } => \"string\"\n                // - { set: \"string\" } => \"string\"\n                //\n                return Object.values(parentType)[0];\n            }\n        };\n        ChangeTree.prototype.getChildrenFilter = function () {\n            var childFilters = this.parent['_definition'].childFilters;\n            return childFilters && childFilters[this.parentIndex];\n        };\n        //\n        // used during `.encode()`\n        //\n        ChangeTree.prototype.getValue = function (index) {\n            return this.ref['getByIndex'](index);\n        };\n        ChangeTree.prototype.delete = function (fieldName) {\n            var index = (typeof (fieldName) === \"number\")\n                ? fieldName\n                : this.indexes[fieldName];\n            if (index === undefined) {\n                console.warn(\"@colyseus/schema \".concat(this.ref.constructor.name, \": trying to delete non-existing index: \").concat(fieldName, \" (\").concat(index, \")\"));\n                return;\n            }\n            var previousValue = this.getValue(index);\n            // console.log(\"$changes.delete =>\", { fieldName, index, previousValue });\n            this.changes.set(index, { op: exports.OPERATION.DELETE, index: index });\n            this.allChanges.delete(index);\n            // delete cache\n            delete this.caches[index];\n            // remove `root` reference\n            if (previousValue && previousValue['$changes']) {\n                previousValue['$changes'].parent = undefined;\n            }\n            this.changed = true;\n            this.touchParents();\n        };\n        ChangeTree.prototype.discard = function (changed, discardAll) {\n            var _this = this;\n            if (changed === void 0) { changed = false; }\n            if (discardAll === void 0) { discardAll = false; }\n            //\n            // Map, Array, etc:\n            // Remove cached key to ensure ADD operations is unsed instead of\n            // REPLACE in case same key is used on next patches.\n            //\n            // TODO: refactor this. this is not relevant for Collection and Set.\n            //\n            if (!(this.ref instanceof Schema)) {\n                this.changes.forEach(function (change) {\n                    if (change.op === exports.OPERATION.DELETE) {\n                        var index = _this.ref['getIndex'](change.index);\n                        delete _this.indexes[index];\n                    }\n                });\n            }\n            this.changes.clear();\n            this.changed = changed;\n            if (discardAll) {\n                this.allChanges.clear();\n            }\n            // re-set `currentCustomOperation`\n            this.currentCustomOperation = 0;\n        };\n        /**\n         * Recursively discard all changes from this, and child structures.\n         */\n        ChangeTree.prototype.discardAll = function () {\n            var _this = this;\n            this.changes.forEach(function (change) {\n                var value = _this.getValue(change.index);\n                if (value && value['$changes']) {\n                    value['$changes'].discardAll();\n                }\n            });\n            this.discard();\n        };\n        // cache(field: number, beginIndex: number, endIndex: number) {\n        ChangeTree.prototype.cache = function (field, cachedBytes) {\n            this.caches[field] = cachedBytes;\n        };\n        ChangeTree.prototype.clone = function () {\n            return new ChangeTree(this.ref, this.parent, this.root);\n        };\n        ChangeTree.prototype.ensureRefId = function () {\n            // skip if refId is already set.\n            if (this.refId !== undefined) {\n                return;\n            }\n            this.refId = this.root.getNextUniqueId();\n        };\n        ChangeTree.prototype.assertValidIndex = function (index, fieldName) {\n            if (index === undefined) {\n                throw new Error(\"ChangeTree: missing index for field \\\"\".concat(fieldName, \"\\\"\"));\n            }\n        };\n        return ChangeTree;\n    }());\n\n    //\n    // Notes:\n    // -----\n    //\n    // - The tsconfig.json of @colyseus/schema uses ES2018.\n    // - ES2019 introduces `flatMap` / `flat`, which is not currently relevant, and caused other issues.\n    //\n    var DEFAULT_SORT = function (a, b) {\n        var A = a.toString();\n        var B = b.toString();\n        if (A < B)\n            return -1;\n        else if (A > B)\n            return 1;\n        else\n            return 0;\n    };\n    function getArrayProxy(value) {\n        value['$proxy'] = true;\n        //\n        // compatibility with @colyseus/schema 0.5.x\n        // - allow `map[\"key\"]`\n        // - allow `map[\"key\"] = \"xxx\"`\n        // - allow `delete map[\"key\"]`\n        //\n        value = new Proxy(value, {\n            get: function (obj, prop) {\n                if (typeof (prop) !== \"symbol\" &&\n                    !isNaN(prop) // https://stackoverflow.com/a/175787/892698\n                ) {\n                    return obj.at(prop);\n                }\n                else {\n                    return obj[prop];\n                }\n            },\n            set: function (obj, prop, setValue) {\n                if (typeof (prop) !== \"symbol\" &&\n                    !isNaN(prop)) {\n                    var indexes = Array.from(obj['$items'].keys());\n                    var key = parseInt(indexes[prop] || prop);\n                    if (setValue === undefined || setValue === null) {\n                        obj.deleteAt(key);\n                    }\n                    else {\n                        obj.setAt(key, setValue);\n                    }\n                }\n                else {\n                    obj[prop] = setValue;\n                }\n                return true;\n            },\n            deleteProperty: function (obj, prop) {\n                if (typeof (prop) === \"number\") {\n                    obj.deleteAt(prop);\n                }\n                else {\n                    delete obj[prop];\n                }\n                return true;\n            },\n        });\n        return value;\n    }\n    var ArraySchema = /** @class */ (function () {\n        function ArraySchema() {\n            var items = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                items[_i] = arguments[_i];\n            }\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            this.push.apply(this, items);\n        }\n        ArraySchema.is = function (type) {\n            return (\n            // type format: [\"string\"]\n            Array.isArray(type) ||\n                // type format: { array: \"string\" }\n                (type['array'] !== undefined));\n        };\n        Object.defineProperty(ArraySchema.prototype, \"length\", {\n            get: function () {\n                return this.$items.size;\n            },\n            set: function (value) {\n                if (value === 0) {\n                    this.clear();\n                }\n                else {\n                    this.splice(value, this.length - value);\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ArraySchema.prototype.push = function () {\n            var _this = this;\n            var values = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                values[_i] = arguments[_i];\n            }\n            var lastIndex;\n            values.forEach(function (value) {\n                // set \"index\" for reference.\n                lastIndex = _this.$refId++;\n                _this.setAt(lastIndex, value);\n            });\n            return lastIndex;\n        };\n        /**\n         * Removes the last element from an array and returns it.\n         */\n        ArraySchema.prototype.pop = function () {\n            var key = Array.from(this.$indexes.values()).pop();\n            if (key === undefined) {\n                return undefined;\n            }\n            this.$changes.delete(key);\n            this.$indexes.delete(key);\n            var value = this.$items.get(key);\n            this.$items.delete(key);\n            return value;\n        };\n        ArraySchema.prototype.at = function (index) {\n            //\n            // FIXME: this should be O(1)\n            //\n            var key = Array.from(this.$items.keys())[index];\n            return this.$items.get(key);\n        };\n        ArraySchema.prototype.setAt = function (index, value) {\n            var _a, _b;\n            if (value['$changes'] !== undefined) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            var operation = (_b = (_a = this.$changes.indexes[index]) === null || _a === void 0 ? void 0 : _a.op) !== null && _b !== void 0 ? _b : exports.OPERATION.ADD;\n            this.$changes.indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this.$changes.change(index, operation);\n        };\n        ArraySchema.prototype.deleteAt = function (index) {\n            var key = Array.from(this.$items.keys())[index];\n            if (key === undefined) {\n                return false;\n            }\n            return this.$deleteAt(key);\n        };\n        ArraySchema.prototype.$deleteAt = function (index) {\n            // delete at internal index\n            this.$changes.delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        };\n        ArraySchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        /**\n         * Combines two or more arrays.\n         * @param items Additional items to add to the end of array1.\n         */\n        ArraySchema.prototype.concat = function () {\n            var _a;\n            var items = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                items[_i] = arguments[_i];\n            }\n            return new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], (_a = Array.from(this.$items.values())).concat.apply(_a, items), false)))();\n        };\n        /**\n         * Adds all the elements of an array separated by the specified separator string.\n         * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n         */\n        ArraySchema.prototype.join = function (separator) {\n            return Array.from(this.$items.values()).join(separator);\n        };\n        /**\n         * Reverses the elements in an Array.\n         */\n        ArraySchema.prototype.reverse = function () {\n            var _this = this;\n            var indexes = Array.from(this.$items.keys());\n            var reversedItems = Array.from(this.$items.values()).reverse();\n            reversedItems.forEach(function (item, i) {\n                _this.setAt(indexes[i], item);\n            });\n            return this;\n        };\n        /**\n         * Removes the first element from an array and returns it.\n         */\n        ArraySchema.prototype.shift = function () {\n            var indexes = Array.from(this.$items.keys());\n            var shiftAt = indexes.shift();\n            if (shiftAt === undefined) {\n                return undefined;\n            }\n            var value = this.$items.get(shiftAt);\n            this.$deleteAt(shiftAt);\n            return value;\n        };\n        /**\n         * Returns a section of an array.\n         * @param start The beginning of the specified portion of the array.\n         * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n         */\n        ArraySchema.prototype.slice = function (start, end) {\n            return new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], Array.from(this.$items.values()).slice(start, end), false)))();\n        };\n        /**\n         * Sorts an array.\n         * @param compareFn Function used to determine the order of the elements. It is expected to return\n         * a negative value if first argument is less than second argument, zero if they're equal and a positive\n         * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n         * ```ts\n         * [11,2,22,1].sort((a, b) => a - b)\n         * ```\n         */\n        ArraySchema.prototype.sort = function (compareFn) {\n            var _this = this;\n            if (compareFn === void 0) { compareFn = DEFAULT_SORT; }\n            var indexes = Array.from(this.$items.keys());\n            var sortedItems = Array.from(this.$items.values()).sort(compareFn);\n            sortedItems.forEach(function (item, i) {\n                _this.setAt(indexes[i], item);\n            });\n            return this;\n        };\n        /**\n         * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n         * @param start The zero-based location in the array from which to start removing elements.\n         * @param deleteCount The number of elements to remove.\n         * @param items Elements to insert into the array in place of the deleted elements.\n         */\n        ArraySchema.prototype.splice = function (start, deleteCount) {\n            if (deleteCount === void 0) { deleteCount = this.length - start; }\n            var indexes = Array.from(this.$items.keys());\n            var removedItems = [];\n            for (var i = start; i < start + deleteCount; i++) {\n                removedItems.push(this.$items.get(indexes[i]));\n                this.$deleteAt(indexes[i]);\n            }\n            return removedItems;\n        };\n        /**\n         * Inserts new elements at the start of an array.\n         * @param items  Elements to insert at the start of the Array.\n         */\n        ArraySchema.prototype.unshift = function () {\n            var _this = this;\n            var items = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                items[_i] = arguments[_i];\n            }\n            var length = this.length;\n            var addedLength = items.length;\n            // const indexes = Array.from(this.$items.keys());\n            var previousValues = Array.from(this.$items.values());\n            items.forEach(function (item, i) {\n                _this.setAt(i, item);\n            });\n            previousValues.forEach(function (previousValue, i) {\n                _this.setAt(addedLength + i, previousValue);\n            });\n            return length + addedLength;\n        };\n        /**\n         * Returns the index of the first occurrence of a value in an array.\n         * @param searchElement The value to locate in the array.\n         * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n         */\n        ArraySchema.prototype.indexOf = function (searchElement, fromIndex) {\n            return Array.from(this.$items.values()).indexOf(searchElement, fromIndex);\n        };\n        /**\n         * Returns the index of the last occurrence of a specified value in an array.\n         * @param searchElement The value to locate in the array.\n         * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n         */\n        ArraySchema.prototype.lastIndexOf = function (searchElement, fromIndex) {\n            if (fromIndex === void 0) { fromIndex = this.length - 1; }\n            return Array.from(this.$items.values()).lastIndexOf(searchElement, fromIndex);\n        };\n        /**\n         * Determines whether all the members of an array satisfy the specified test.\n         * @param callbackfn A function that accepts up to three arguments. The every method calls\n         * the callbackfn function for each element in the array until the callbackfn returns a value\n         * which is coercible to the Boolean value false, or until the end of the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n         * If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.every = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).every(callbackfn, thisArg);\n        };\n        /**\n         * Determines whether the specified callback function returns true for any element of an array.\n         * @param callbackfn A function that accepts up to three arguments. The some method calls\n         * the callbackfn function for each element in the array until the callbackfn returns a value\n         * which is coercible to the Boolean value true, or until the end of the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n         * If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.some = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).some(callbackfn, thisArg);\n        };\n        /**\n         * Performs the specified action for each element in an array.\n         * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n         * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.forEach = function (callbackfn, thisArg) {\n            Array.from(this.$items.values()).forEach(callbackfn, thisArg);\n        };\n        /**\n         * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n         * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.map = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).map(callbackfn, thisArg);\n        };\n        ArraySchema.prototype.filter = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).filter(callbackfn, thisArg);\n        };\n        /**\n         * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n         */\n        ArraySchema.prototype.reduce = function (callbackfn, initialValue) {\n            return Array.prototype.reduce.apply(Array.from(this.$items.values()), arguments);\n        };\n        /**\n         * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n         */\n        ArraySchema.prototype.reduceRight = function (callbackfn, initialValue) {\n            return Array.prototype.reduceRight.apply(Array.from(this.$items.values()), arguments);\n        };\n        /**\n         * Returns the value of the first element in the array where predicate is true, and undefined\n         * otherwise.\n         * @param predicate find calls predicate once for each element of the array, in ascending\n         * order, until it finds one where predicate returns true. If such an element is found, find\n         * immediately returns that element value. Otherwise, find returns undefined.\n         * @param thisArg If provided, it will be used as the this value for each invocation of\n         * predicate. If it is not provided, undefined is used instead.\n         */\n        ArraySchema.prototype.find = function (predicate, thisArg) {\n            return Array.from(this.$items.values()).find(predicate, thisArg);\n        };\n        /**\n         * Returns the index of the first element in the array where predicate is true, and -1\n         * otherwise.\n         * @param predicate find calls predicate once for each element of the array, in ascending\n         * order, until it finds one where predicate returns true. If such an element is found,\n         * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n         * @param thisArg If provided, it will be used as the this value for each invocation of\n         * predicate. If it is not provided, undefined is used instead.\n         */\n        ArraySchema.prototype.findIndex = function (predicate, thisArg) {\n            return Array.from(this.$items.values()).findIndex(predicate, thisArg);\n        };\n        /**\n         * Returns the this object after filling the section identified by start and end with value\n         * @param value value to fill array section with\n         * @param start index to start filling the array at. If start is negative, it is treated as\n         * length+start where length is the length of the array.\n         * @param end index to stop filling the array at. If end is negative, it is treated as\n         * length+end.\n         */\n        ArraySchema.prototype.fill = function (value, start, end) {\n            //\n            // TODO\n            //\n            throw new Error(\"ArraySchema#fill() not implemented\");\n        };\n        /**\n         * Returns the this object after copying a section of the array identified by start and end\n         * to the same array starting at position target\n         * @param target If target is negative, it is treated as length+target where length is the\n         * length of the array.\n         * @param start If start is negative, it is treated as length+start. If end is negative, it\n         * is treated as length+end.\n         * @param end If not specified, length of the this object is used as its default value.\n         */\n        ArraySchema.prototype.copyWithin = function (target, start, end) {\n            //\n            // TODO\n            //\n            throw new Error(\"ArraySchema#copyWithin() not implemented\");\n        };\n        /**\n         * Returns a string representation of an array.\n         */\n        ArraySchema.prototype.toString = function () { return this.$items.toString(); };\n        /**\n         * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\n         */\n        ArraySchema.prototype.toLocaleString = function () { return this.$items.toLocaleString(); };\n        /** Iterator */\n        ArraySchema.prototype[Symbol.iterator] = function () {\n            return Array.from(this.$items.values())[Symbol.iterator]();\n        };\n        ArraySchema.prototype[Symbol.unscopables] = function () {\n            return this.$items[Symbol.unscopables]();\n        };\n        /**\n         * Returns an iterable of key, value pairs for every entry in the array\n         */\n        ArraySchema.prototype.entries = function () { return this.$items.entries(); };\n        /**\n         * Returns an iterable of keys in the array\n         */\n        ArraySchema.prototype.keys = function () { return this.$items.keys(); };\n        /**\n         * Returns an iterable of values in the array\n         */\n        ArraySchema.prototype.values = function () { return this.$items.values(); };\n        /**\n         * Determines whether an array includes a certain element, returning true or false as appropriate.\n         * @param searchElement The element to search for.\n         * @param fromIndex The position in this array at which to begin searching for searchElement.\n         */\n        ArraySchema.prototype.includes = function (searchElement, fromIndex) {\n            return Array.from(this.$items.values()).includes(searchElement, fromIndex);\n        };\n        /**\n         * Calls a defined callback function on each element of an array. Then, flattens the result into\n         * a new array.\n         * This is identical to a map followed by flat with depth 1.\n         *\n         * @param callback A function that accepts up to three arguments. The flatMap method calls the\n         * callback function one time for each element in the array.\n         * @param thisArg An object to which the this keyword can refer in the callback function. If\n         * thisArg is omitted, undefined is used as the this value.\n         */\n        // @ts-ignore\n        ArraySchema.prototype.flatMap = function (callback, thisArg) {\n            // @ts-ignore\n            throw new Error(\"ArraySchema#flatMap() is not supported.\");\n        };\n        /**\n         * Returns a new array with all sub-array elements concatenated into it recursively up to the\n         * specified depth.\n         *\n         * @param depth The maximum recursion depth\n         */\n        // @ts-ignore\n        ArraySchema.prototype.flat = function (depth) {\n            // @ts-ignore\n            throw new Error(\"ArraySchema#flat() is not supported.\");\n        };\n        // get size () {\n        //     return this.$items.size;\n        // }\n        ArraySchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        ArraySchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        ArraySchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        ArraySchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        ArraySchema.prototype.toArray = function () {\n            return Array.from(this.$items.values());\n        };\n        ArraySchema.prototype.toJSON = function () {\n            return this.toArray().map(function (value) {\n                return (typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value;\n            });\n        };\n        //\n        // Decoding utilities\n        //\n        ArraySchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                cloned = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], Array.from(this.$items.values()), false)))();\n            }\n            else {\n                cloned = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], this.map(function (item) { return ((item['$changes'])\n                    ? item.clone()\n                    : item); }), false)))();\n            }\n            return cloned;\n        };\n        ArraySchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return ArraySchema;\n    }());\n\n    function getMapProxy(value) {\n        value['$proxy'] = true;\n        value = new Proxy(value, {\n            get: function (obj, prop) {\n                if (typeof (prop) !== \"symbol\" && // accessing properties\n                    typeof (obj[prop]) === \"undefined\") {\n                    return obj.get(prop);\n                }\n                else {\n                    return obj[prop];\n                }\n            },\n            set: function (obj, prop, setValue) {\n                if (typeof (prop) !== \"symbol\" &&\n                    (prop.indexOf(\"$\") === -1 &&\n                        prop !== \"onAdd\" &&\n                        prop !== \"onRemove\" &&\n                        prop !== \"onChange\")) {\n                    obj.set(prop, setValue);\n                }\n                else {\n                    obj[prop] = setValue;\n                }\n                return true;\n            },\n            deleteProperty: function (obj, prop) {\n                obj.delete(prop);\n                return true;\n            },\n        });\n        return value;\n    }\n    var MapSchema = /** @class */ (function () {\n        function MapSchema(initialValues) {\n            var _this = this;\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            if (initialValues) {\n                if (initialValues instanceof Map ||\n                    initialValues instanceof MapSchema) {\n                    initialValues.forEach(function (v, k) { return _this.set(k, v); });\n                }\n                else {\n                    for (var k in initialValues) {\n                        this.set(k, initialValues[k]);\n                    }\n                }\n            }\n        }\n        MapSchema.is = function (type) {\n            return type['map'] !== undefined;\n        };\n        /** Iterator */\n        MapSchema.prototype[Symbol.iterator] = function () { return this.$items[Symbol.iterator](); };\n        Object.defineProperty(MapSchema.prototype, Symbol.toStringTag, {\n            get: function () { return this.$items[Symbol.toStringTag]; },\n            enumerable: false,\n            configurable: true\n        });\n        MapSchema.prototype.set = function (key, value) {\n            if (value === undefined || value === null) {\n                throw new Error(\"MapSchema#set('\".concat(key, \"', \").concat(value, \"): trying to set \").concat(value, \" value on '\").concat(key, \"'.\"));\n            }\n            // get \"index\" for this value.\n            var hasIndex = typeof (this.$changes.indexes[key]) !== \"undefined\";\n            var index = (hasIndex)\n                ? this.$changes.indexes[key]\n                : this.$refId++;\n            var operation = (hasIndex)\n                ? exports.OPERATION.REPLACE\n                : exports.OPERATION.ADD;\n            var isRef = (value['$changes']) !== undefined;\n            if (isRef) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            //\n            // (encoding)\n            // set a unique id to relate directly with this key/value.\n            //\n            if (!hasIndex) {\n                this.$changes.indexes[key] = index;\n                this.$indexes.set(index, key);\n            }\n            else if (isRef && // if is schema, force ADD operation if value differ from previous one.\n                this.$items.get(key) !== value) {\n                operation = exports.OPERATION.ADD;\n            }\n            this.$items.set(key, value);\n            this.$changes.change(key, operation);\n            return this;\n        };\n        MapSchema.prototype.get = function (key) {\n            return this.$items.get(key);\n        };\n        MapSchema.prototype.delete = function (key) {\n            //\n            // TODO: add a \"purge\" method after .encode() runs, to cleanup removed `$indexes`\n            //\n            // We don't remove $indexes to allow setting the same key in the same patch\n            // (See \"should allow to remove and set an item in the same place\" test)\n            //\n            // // const index = this.$changes.indexes[key];\n            // // this.$indexes.delete(index);\n            this.$changes.delete(key);\n            return this.$items.delete(key);\n        };\n        MapSchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        MapSchema.prototype.has = function (key) {\n            return this.$items.has(key);\n        };\n        MapSchema.prototype.forEach = function (callbackfn) {\n            this.$items.forEach(callbackfn);\n        };\n        MapSchema.prototype.entries = function () {\n            return this.$items.entries();\n        };\n        MapSchema.prototype.keys = function () {\n            return this.$items.keys();\n        };\n        MapSchema.prototype.values = function () {\n            return this.$items.values();\n        };\n        Object.defineProperty(MapSchema.prototype, \"size\", {\n            get: function () {\n                return this.$items.size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapSchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        MapSchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        MapSchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        MapSchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        MapSchema.prototype.toJSON = function () {\n            var map = {};\n            this.forEach(function (value, key) {\n                map[key] = (typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value;\n            });\n            return map;\n        };\n        //\n        // Decoding utilities\n        //\n        MapSchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new MapSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new MapSchema();\n                this.forEach(function (value, key) {\n                    if (value['$changes']) {\n                        cloned.set(key, value['clone']());\n                    }\n                    else {\n                        cloned.set(key, value);\n                    }\n                });\n            }\n            return cloned;\n        };\n        MapSchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return MapSchema;\n    }());\n\n    var registeredTypes = {};\n    function registerType(identifier, definition) {\n        registeredTypes[identifier] = definition;\n    }\n    function getType(identifier) {\n        return registeredTypes[identifier];\n    }\n\n    var SchemaDefinition = /** @class */ (function () {\n        function SchemaDefinition() {\n            //\n            // TODO: use a \"field\" structure combining all these properties per-field.\n            //\n            this.indexes = {};\n            this.fieldsByIndex = {};\n            this.deprecated = {};\n            this.descriptors = {};\n        }\n        SchemaDefinition.create = function (parent) {\n            var definition = new SchemaDefinition();\n            // support inheritance\n            definition.schema = Object.assign({}, parent && parent.schema || {});\n            definition.indexes = Object.assign({}, parent && parent.indexes || {});\n            definition.fieldsByIndex = Object.assign({}, parent && parent.fieldsByIndex || {});\n            definition.descriptors = Object.assign({}, parent && parent.descriptors || {});\n            definition.deprecated = Object.assign({}, parent && parent.deprecated || {});\n            return definition;\n        };\n        SchemaDefinition.prototype.addField = function (field, type) {\n            var index = this.getNextFieldIndex();\n            this.fieldsByIndex[index] = field;\n            this.indexes[field] = index;\n            this.schema[field] = (Array.isArray(type))\n                ? { array: type[0] }\n                : type;\n        };\n        SchemaDefinition.prototype.addFilter = function (field, cb) {\n            if (!this.filters) {\n                this.filters = {};\n                this.indexesWithFilters = [];\n            }\n            this.filters[this.indexes[field]] = cb;\n            this.indexesWithFilters.push(this.indexes[field]);\n            return true;\n        };\n        SchemaDefinition.prototype.addChildrenFilter = function (field, cb) {\n            var index = this.indexes[field];\n            var type = this.schema[field];\n            if (getType(Object.keys(type)[0])) {\n                if (!this.childFilters) {\n                    this.childFilters = {};\n                }\n                this.childFilters[index] = cb;\n                return true;\n            }\n            else {\n                console.warn(\"@filterChildren: field '\".concat(field, \"' can't have children. Ignoring filter.\"));\n            }\n        };\n        SchemaDefinition.prototype.getChildrenFilter = function (field) {\n            return this.childFilters && this.childFilters[this.indexes[field]];\n        };\n        SchemaDefinition.prototype.getNextFieldIndex = function () {\n            return Object.keys(this.schema || {}).length;\n        };\n        return SchemaDefinition;\n    }());\n    function hasFilter(klass) {\n        return klass._context && klass._context.useFilters;\n    }\n    var Context = /** @class */ (function () {\n        function Context() {\n            this.types = {};\n            this.schemas = new Map();\n            this.useFilters = false;\n        }\n        Context.prototype.has = function (schema) {\n            return this.schemas.has(schema);\n        };\n        Context.prototype.get = function (typeid) {\n            return this.types[typeid];\n        };\n        Context.prototype.add = function (schema, typeid) {\n            if (typeid === void 0) { typeid = this.schemas.size; }\n            // FIXME: move this to somewhere else?\n            // support inheritance\n            schema._definition = SchemaDefinition.create(schema._definition);\n            schema._typeid = typeid;\n            this.types[typeid] = schema;\n            this.schemas.set(schema, typeid);\n        };\n        Context.create = function (context) {\n            if (context === void 0) { context = new Context; }\n            return function (definition) {\n                return type(definition, context);\n            };\n        };\n        return Context;\n    }());\n    var globalContext = new Context();\n    /**\n     * `@type()` decorator for proxies\n     */\n    function type(type, context) {\n        if (context === void 0) { context = globalContext; }\n        return function (target, field) {\n            if (!type) {\n                throw new Error(\"Type not found. Ensure your `@type` annotations are correct and that you don't have any circular dependencies.\");\n            }\n            var constructor = target.constructor;\n            constructor._context = context;\n            /*\n             * static schema\n             */\n            if (!context.has(constructor)) {\n                context.add(constructor);\n            }\n            var definition = constructor._definition;\n            definition.addField(field, type);\n            /**\n             * skip if descriptor already exists for this field (`@deprecated()`)\n             */\n            if (definition.descriptors[field]) {\n                if (definition.deprecated[field]) {\n                    // do not create accessors for deprecated properties.\n                    return;\n                }\n                else {\n                    // trying to define same property multiple times across inheritance.\n                    // https://github.com/colyseus/colyseus-unity3d/issues/131#issuecomment-814308572\n                    try {\n                        throw new Error(\"@colyseus/schema: Duplicate '\".concat(field, \"' definition on '\").concat(constructor.name, \"'.\\nCheck @type() annotation\"));\n                    }\n                    catch (e) {\n                        var definitionAtLine = e.stack.split(\"\\n\")[4].trim();\n                        throw new Error(\"\".concat(e.message, \" \").concat(definitionAtLine));\n                    }\n                }\n            }\n            var isArray = ArraySchema.is(type);\n            var isMap = !isArray && MapSchema.is(type);\n            // TODO: refactor me.\n            // Allow abstract intermediary classes with no fields to be serialized\n            // (See \"should support an inheritance with a Schema type without fields\" test)\n            if (typeof (type) !== \"string\" && !Schema.is(type)) {\n                var childType = Object.values(type)[0];\n                if (typeof (childType) !== \"string\" && !context.has(childType)) {\n                    context.add(childType);\n                }\n            }\n            var fieldCached = \"_\".concat(field);\n            definition.descriptors[fieldCached] = {\n                enumerable: false,\n                configurable: false,\n                writable: true,\n            };\n            definition.descriptors[field] = {\n                get: function () {\n                    return this[fieldCached];\n                },\n                set: function (value) {\n                    /**\n                     * Create Proxy for array or map items\n                     */\n                    // skip if value is the same as cached.\n                    if (value === this[fieldCached]) {\n                        return;\n                    }\n                    if (value !== undefined &&\n                        value !== null) {\n                        // automaticallty transform Array into ArraySchema\n                        if (isArray && !(value instanceof ArraySchema)) {\n                            value = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], value, false)))();\n                        }\n                        // automaticallty transform Map into MapSchema\n                        if (isMap && !(value instanceof MapSchema)) {\n                            value = new MapSchema(value);\n                        }\n                        // try to turn provided structure into a Proxy\n                        if (value['$proxy'] === undefined) {\n                            if (isMap) {\n                                value = getMapProxy(value);\n                            }\n                            else if (isArray) {\n                                value = getArrayProxy(value);\n                            }\n                        }\n                        // flag the change for encoding.\n                        this.$changes.change(field);\n                        //\n                        // call setParent() recursively for this and its child\n                        // structures.\n                        //\n                        if (value['$changes']) {\n                            value['$changes'].setParent(this, this.$changes.root, this._definition.indexes[field]);\n                        }\n                    }\n                    else if (this[fieldCached]) {\n                        //\n                        // Setting a field to `null` or `undefined` will delete it.\n                        //\n                        this.$changes.delete(field);\n                    }\n                    this[fieldCached] = value;\n                },\n                enumerable: true,\n                configurable: true\n            };\n        };\n    }\n    /**\n     * `@filter()` decorator for defining data filters per client\n     */\n    function filter(cb) {\n        return function (target, field) {\n            var constructor = target.constructor;\n            var definition = constructor._definition;\n            if (definition.addFilter(field, cb)) {\n                constructor._context.useFilters = true;\n            }\n        };\n    }\n    function filterChildren(cb) {\n        return function (target, field) {\n            var constructor = target.constructor;\n            var definition = constructor._definition;\n            if (definition.addChildrenFilter(field, cb)) {\n                constructor._context.useFilters = true;\n            }\n        };\n    }\n    /**\n     * `@deprecated()` flag a field as deprecated.\n     * The previous `@type()` annotation should remain along with this one.\n     */\n    function deprecated(throws, context) {\n        if (throws === void 0) { throws = true; }\n        return function (target, field) {\n            var constructor = target.constructor;\n            var definition = constructor._definition;\n            definition.deprecated[field] = true;\n            if (throws) {\n                definition.descriptors[field] = {\n                    get: function () { throw new Error(\"\".concat(field, \" is deprecated.\")); },\n                    set: function (value) { },\n                    enumerable: false,\n                    configurable: true\n                };\n            }\n        };\n    }\n    function defineTypes(target, fields, context) {\n        if (context === void 0) { context = target._context || globalContext; }\n        for (var field in fields) {\n            type(fields[field], context)(target.prototype, field);\n        }\n        return target;\n    }\n\n    /**\n     * Copyright (c) 2018 Endel Dreyer\n     * Copyright (c) 2014 Ion Drive Software Ltd.\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE\n     */\n    /**\n     * msgpack implementation highly based on notepack.io\n     * https://github.com/darrachequesne/notepack\n     */\n    function utf8Length(str) {\n        var c = 0, length = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                length += 1;\n            }\n            else if (c < 0x800) {\n                length += 2;\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                length += 3;\n            }\n            else {\n                i++;\n                length += 4;\n            }\n        }\n        return length;\n    }\n    function utf8Write(view, offset, str) {\n        var c = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                view[offset++] = c;\n            }\n            else if (c < 0x800) {\n                view[offset++] = 0xc0 | (c >> 6);\n                view[offset++] = 0x80 | (c & 0x3f);\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                view[offset++] = 0xe0 | (c >> 12);\n                view[offset++] = 0x80 | (c >> 6 & 0x3f);\n                view[offset++] = 0x80 | (c & 0x3f);\n            }\n            else {\n                i++;\n                c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n                view[offset++] = 0xf0 | (c >> 18);\n                view[offset++] = 0x80 | (c >> 12 & 0x3f);\n                view[offset++] = 0x80 | (c >> 6 & 0x3f);\n                view[offset++] = 0x80 | (c & 0x3f);\n            }\n        }\n    }\n    function int8$1(bytes, value) {\n        bytes.push(value & 255);\n    }\n    function uint8$1(bytes, value) {\n        bytes.push(value & 255);\n    }\n    function int16$1(bytes, value) {\n        bytes.push(value & 255);\n        bytes.push((value >> 8) & 255);\n    }\n    function uint16$1(bytes, value) {\n        bytes.push(value & 255);\n        bytes.push((value >> 8) & 255);\n    }\n    function int32$1(bytes, value) {\n        bytes.push(value & 255);\n        bytes.push((value >> 8) & 255);\n        bytes.push((value >> 16) & 255);\n        bytes.push((value >> 24) & 255);\n    }\n    function uint32$1(bytes, value) {\n        var b4 = value >> 24;\n        var b3 = value >> 16;\n        var b2 = value >> 8;\n        var b1 = value;\n        bytes.push(b1 & 255);\n        bytes.push(b2 & 255);\n        bytes.push(b3 & 255);\n        bytes.push(b4 & 255);\n    }\n    function int64$1(bytes, value) {\n        var high = Math.floor(value / Math.pow(2, 32));\n        var low = value >>> 0;\n        uint32$1(bytes, low);\n        uint32$1(bytes, high);\n    }\n    function uint64$1(bytes, value) {\n        var high = (value / Math.pow(2, 32)) >> 0;\n        var low = value >>> 0;\n        uint32$1(bytes, low);\n        uint32$1(bytes, high);\n    }\n    function float32$1(bytes, value) {\n        writeFloat32(bytes, value);\n    }\n    function float64$1(bytes, value) {\n        writeFloat64(bytes, value);\n    }\n    var _int32$1 = new Int32Array(2);\n    var _float32$1 = new Float32Array(_int32$1.buffer);\n    var _float64$1 = new Float64Array(_int32$1.buffer);\n    function writeFloat32(bytes, value) {\n        _float32$1[0] = value;\n        int32$1(bytes, _int32$1[0]);\n    }\n    function writeFloat64(bytes, value) {\n        _float64$1[0] = value;\n        int32$1(bytes, _int32$1[0 ]);\n        int32$1(bytes, _int32$1[1 ]);\n    }\n    function boolean$1(bytes, value) {\n        return uint8$1(bytes, value ? 1 : 0);\n    }\n    function string$1(bytes, value) {\n        // encode `null` strings as empty.\n        if (!value) {\n            value = \"\";\n        }\n        var length = utf8Length(value);\n        var size = 0;\n        // fixstr\n        if (length < 0x20) {\n            bytes.push(length | 0xa0);\n            size = 1;\n        }\n        // str 8\n        else if (length < 0x100) {\n            bytes.push(0xd9);\n            uint8$1(bytes, length);\n            size = 2;\n        }\n        // str 16\n        else if (length < 0x10000) {\n            bytes.push(0xda);\n            uint16$1(bytes, length);\n            size = 3;\n        }\n        // str 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdb);\n            uint32$1(bytes, length);\n            size = 5;\n        }\n        else {\n            throw new Error('String too long');\n        }\n        utf8Write(bytes, bytes.length, value);\n        return size + length;\n    }\n    function number$1(bytes, value) {\n        if (isNaN(value)) {\n            return number$1(bytes, 0);\n        }\n        else if (!isFinite(value)) {\n            return number$1(bytes, (value > 0) ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER);\n        }\n        else if (value !== (value | 0)) {\n            bytes.push(0xcb);\n            writeFloat64(bytes, value);\n            return 9;\n            // TODO: encode float 32?\n            // is it possible to differentiate between float32 / float64 here?\n            // // float 32\n            // bytes.push(0xca);\n            // writeFloat32(bytes, value);\n            // return 5;\n        }\n        if (value >= 0) {\n            // positive fixnum\n            if (value < 0x80) {\n                uint8$1(bytes, value);\n                return 1;\n            }\n            // uint 8\n            if (value < 0x100) {\n                bytes.push(0xcc);\n                uint8$1(bytes, value);\n                return 2;\n            }\n            // uint 16\n            if (value < 0x10000) {\n                bytes.push(0xcd);\n                uint16$1(bytes, value);\n                return 3;\n            }\n            // uint 32\n            if (value < 0x100000000) {\n                bytes.push(0xce);\n                uint32$1(bytes, value);\n                return 5;\n            }\n            // uint 64\n            bytes.push(0xcf);\n            uint64$1(bytes, value);\n            return 9;\n        }\n        else {\n            // negative fixnum\n            if (value >= -0x20) {\n                bytes.push(0xe0 | (value + 0x20));\n                return 1;\n            }\n            // int 8\n            if (value >= -0x80) {\n                bytes.push(0xd0);\n                int8$1(bytes, value);\n                return 2;\n            }\n            // int 16\n            if (value >= -0x8000) {\n                bytes.push(0xd1);\n                int16$1(bytes, value);\n                return 3;\n            }\n            // int 32\n            if (value >= -0x80000000) {\n                bytes.push(0xd2);\n                int32$1(bytes, value);\n                return 5;\n            }\n            // int 64\n            bytes.push(0xd3);\n            int64$1(bytes, value);\n            return 9;\n        }\n    }\n\n    var encode = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        utf8Write: utf8Write,\n        int8: int8$1,\n        uint8: uint8$1,\n        int16: int16$1,\n        uint16: uint16$1,\n        int32: int32$1,\n        uint32: uint32$1,\n        int64: int64$1,\n        uint64: uint64$1,\n        float32: float32$1,\n        float64: float64$1,\n        writeFloat32: writeFloat32,\n        writeFloat64: writeFloat64,\n        boolean: boolean$1,\n        string: string$1,\n        number: number$1\n    });\n\n    /**\n     * Copyright (c) 2018 Endel Dreyer\n     * Copyright (c) 2014 Ion Drive Software Ltd.\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE\n     */\n    function utf8Read(bytes, offset, length) {\n        var string = '', chr = 0;\n        for (var i = offset, end = offset + length; i < end; i++) {\n            var byte = bytes[i];\n            if ((byte & 0x80) === 0x00) {\n                string += String.fromCharCode(byte);\n                continue;\n            }\n            if ((byte & 0xe0) === 0xc0) {\n                string += String.fromCharCode(((byte & 0x1f) << 6) |\n                    (bytes[++i] & 0x3f));\n                continue;\n            }\n            if ((byte & 0xf0) === 0xe0) {\n                string += String.fromCharCode(((byte & 0x0f) << 12) |\n                    ((bytes[++i] & 0x3f) << 6) |\n                    ((bytes[++i] & 0x3f) << 0));\n                continue;\n            }\n            if ((byte & 0xf8) === 0xf0) {\n                chr = ((byte & 0x07) << 18) |\n                    ((bytes[++i] & 0x3f) << 12) |\n                    ((bytes[++i] & 0x3f) << 6) |\n                    ((bytes[++i] & 0x3f) << 0);\n                if (chr >= 0x010000) { // surrogate pair\n                    chr -= 0x010000;\n                    string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n                }\n                else {\n                    string += String.fromCharCode(chr);\n                }\n                continue;\n            }\n            console.error('Invalid byte ' + byte.toString(16));\n            // (do not throw error to avoid server/client from crashing due to hack attemps)\n            // throw new Error('Invalid byte ' + byte.toString(16));\n        }\n        return string;\n    }\n    function int8(bytes, it) {\n        return uint8(bytes, it) << 24 >> 24;\n    }\n    function uint8(bytes, it) {\n        return bytes[it.offset++];\n    }\n    function int16(bytes, it) {\n        return uint16(bytes, it) << 16 >> 16;\n    }\n    function uint16(bytes, it) {\n        return bytes[it.offset++] | bytes[it.offset++] << 8;\n    }\n    function int32(bytes, it) {\n        return bytes[it.offset++] | bytes[it.offset++] << 8 | bytes[it.offset++] << 16 | bytes[it.offset++] << 24;\n    }\n    function uint32(bytes, it) {\n        return int32(bytes, it) >>> 0;\n    }\n    function float32(bytes, it) {\n        return readFloat32(bytes, it);\n    }\n    function float64(bytes, it) {\n        return readFloat64(bytes, it);\n    }\n    function int64(bytes, it) {\n        var low = uint32(bytes, it);\n        var high = int32(bytes, it) * Math.pow(2, 32);\n        return high + low;\n    }\n    function uint64(bytes, it) {\n        var low = uint32(bytes, it);\n        var high = uint32(bytes, it) * Math.pow(2, 32);\n        return high + low;\n    }\n    var _int32 = new Int32Array(2);\n    var _float32 = new Float32Array(_int32.buffer);\n    var _float64 = new Float64Array(_int32.buffer);\n    function readFloat32(bytes, it) {\n        _int32[0] = int32(bytes, it);\n        return _float32[0];\n    }\n    function readFloat64(bytes, it) {\n        _int32[0 ] = int32(bytes, it);\n        _int32[1 ] = int32(bytes, it);\n        return _float64[0];\n    }\n    function boolean(bytes, it) {\n        return uint8(bytes, it) > 0;\n    }\n    function string(bytes, it) {\n        var prefix = bytes[it.offset++];\n        var length;\n        if (prefix < 0xc0) {\n            // fixstr\n            length = prefix & 0x1f;\n        }\n        else if (prefix === 0xd9) {\n            length = uint8(bytes, it);\n        }\n        else if (prefix === 0xda) {\n            length = uint16(bytes, it);\n        }\n        else if (prefix === 0xdb) {\n            length = uint32(bytes, it);\n        }\n        var value = utf8Read(bytes, it.offset, length);\n        it.offset += length;\n        return value;\n    }\n    function stringCheck(bytes, it) {\n        var prefix = bytes[it.offset];\n        return (\n        // fixstr\n        (prefix < 0xc0 && prefix > 0xa0) ||\n            // str 8\n            prefix === 0xd9 ||\n            // str 16\n            prefix === 0xda ||\n            // str 32\n            prefix === 0xdb);\n    }\n    function number(bytes, it) {\n        var prefix = bytes[it.offset++];\n        if (prefix < 0x80) {\n            // positive fixint\n            return prefix;\n        }\n        else if (prefix === 0xca) {\n            // float 32\n            return readFloat32(bytes, it);\n        }\n        else if (prefix === 0xcb) {\n            // float 64\n            return readFloat64(bytes, it);\n        }\n        else if (prefix === 0xcc) {\n            // uint 8\n            return uint8(bytes, it);\n        }\n        else if (prefix === 0xcd) {\n            // uint 16\n            return uint16(bytes, it);\n        }\n        else if (prefix === 0xce) {\n            // uint 32\n            return uint32(bytes, it);\n        }\n        else if (prefix === 0xcf) {\n            // uint 64\n            return uint64(bytes, it);\n        }\n        else if (prefix === 0xd0) {\n            // int 8\n            return int8(bytes, it);\n        }\n        else if (prefix === 0xd1) {\n            // int 16\n            return int16(bytes, it);\n        }\n        else if (prefix === 0xd2) {\n            // int 32\n            return int32(bytes, it);\n        }\n        else if (prefix === 0xd3) {\n            // int 64\n            return int64(bytes, it);\n        }\n        else if (prefix > 0xdf) {\n            // negative fixint\n            return (0xff - prefix + 1) * -1;\n        }\n    }\n    function numberCheck(bytes, it) {\n        var prefix = bytes[it.offset];\n        // positive fixint - 0x00 - 0x7f\n        // float 32        - 0xca\n        // float 64        - 0xcb\n        // uint 8          - 0xcc\n        // uint 16         - 0xcd\n        // uint 32         - 0xce\n        // uint 64         - 0xcf\n        // int 8           - 0xd0\n        // int 16          - 0xd1\n        // int 32          - 0xd2\n        // int 64          - 0xd3\n        return (prefix < 0x80 ||\n            (prefix >= 0xca && prefix <= 0xd3));\n    }\n    function arrayCheck(bytes, it) {\n        return bytes[it.offset] < 0xa0;\n        // const prefix = bytes[it.offset] ;\n        // if (prefix < 0xa0) {\n        //   return prefix;\n        // // array\n        // } else if (prefix === 0xdc) {\n        //   it.offset += 2;\n        // } else if (0xdd) {\n        //   it.offset += 4;\n        // }\n        // return prefix;\n    }\n    function switchStructureCheck(bytes, it) {\n        return (\n        // previous byte should be `SWITCH_TO_STRUCTURE`\n        bytes[it.offset - 1] === SWITCH_TO_STRUCTURE &&\n            // next byte should be a number\n            (bytes[it.offset] < 0x80 || (bytes[it.offset] >= 0xca && bytes[it.offset] <= 0xd3)));\n    }\n\n    var decode = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        int8: int8,\n        uint8: uint8,\n        int16: int16,\n        uint16: uint16,\n        int32: int32,\n        uint32: uint32,\n        float32: float32,\n        float64: float64,\n        int64: int64,\n        uint64: uint64,\n        readFloat32: readFloat32,\n        readFloat64: readFloat64,\n        boolean: boolean,\n        string: string,\n        stringCheck: stringCheck,\n        number: number,\n        numberCheck: numberCheck,\n        arrayCheck: arrayCheck,\n        switchStructureCheck: switchStructureCheck\n    });\n\n    var CollectionSchema = /** @class */ (function () {\n        function CollectionSchema(initialValues) {\n            var _this = this;\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            if (initialValues) {\n                initialValues.forEach(function (v) { return _this.add(v); });\n            }\n        }\n        CollectionSchema.is = function (type) {\n            return type['collection'] !== undefined;\n        };\n        CollectionSchema.prototype.add = function (value) {\n            // set \"index\" for reference.\n            var index = this.$refId++;\n            var isRef = (value['$changes']) !== undefined;\n            if (isRef) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            this.$changes.indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this.$changes.change(index);\n            return index;\n        };\n        CollectionSchema.prototype.at = function (index) {\n            var key = Array.from(this.$items.keys())[index];\n            return this.$items.get(key);\n        };\n        CollectionSchema.prototype.entries = function () {\n            return this.$items.entries();\n        };\n        CollectionSchema.prototype.delete = function (item) {\n            var entries = this.$items.entries();\n            var index;\n            var entry;\n            while (entry = entries.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (item === entry.value[1]) {\n                    index = entry.value[0];\n                    break;\n                }\n            }\n            if (index === undefined) {\n                return false;\n            }\n            this.$changes.delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        };\n        CollectionSchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        CollectionSchema.prototype.has = function (value) {\n            return Array.from(this.$items.values()).some(function (v) { return v === value; });\n        };\n        CollectionSchema.prototype.forEach = function (callbackfn) {\n            var _this = this;\n            this.$items.forEach(function (value, key, _) { return callbackfn(value, key, _this); });\n        };\n        CollectionSchema.prototype.values = function () {\n            return this.$items.values();\n        };\n        Object.defineProperty(CollectionSchema.prototype, \"size\", {\n            get: function () {\n                return this.$items.size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CollectionSchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        CollectionSchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        CollectionSchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        CollectionSchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        CollectionSchema.prototype.toArray = function () {\n            return Array.from(this.$items.values());\n        };\n        CollectionSchema.prototype.toJSON = function () {\n            var values = [];\n            this.forEach(function (value, key) {\n                values.push((typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value);\n            });\n            return values;\n        };\n        //\n        // Decoding utilities\n        //\n        CollectionSchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new CollectionSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new CollectionSchema();\n                this.forEach(function (value) {\n                    if (value['$changes']) {\n                        cloned.add(value['clone']());\n                    }\n                    else {\n                        cloned.add(value);\n                    }\n                });\n            }\n            return cloned;\n        };\n        CollectionSchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return CollectionSchema;\n    }());\n\n    var SetSchema = /** @class */ (function () {\n        function SetSchema(initialValues) {\n            var _this = this;\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            if (initialValues) {\n                initialValues.forEach(function (v) { return _this.add(v); });\n            }\n        }\n        SetSchema.is = function (type) {\n            return type['set'] !== undefined;\n        };\n        SetSchema.prototype.add = function (value) {\n            var _a, _b;\n            // immediatelly return false if value already added.\n            if (this.has(value)) {\n                return false;\n            }\n            // set \"index\" for reference.\n            var index = this.$refId++;\n            if ((value['$changes']) !== undefined) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            var operation = (_b = (_a = this.$changes.indexes[index]) === null || _a === void 0 ? void 0 : _a.op) !== null && _b !== void 0 ? _b : exports.OPERATION.ADD;\n            this.$changes.indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this.$changes.change(index, operation);\n            return index;\n        };\n        SetSchema.prototype.entries = function () {\n            return this.$items.entries();\n        };\n        SetSchema.prototype.delete = function (item) {\n            var entries = this.$items.entries();\n            var index;\n            var entry;\n            while (entry = entries.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (item === entry.value[1]) {\n                    index = entry.value[0];\n                    break;\n                }\n            }\n            if (index === undefined) {\n                return false;\n            }\n            this.$changes.delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        };\n        SetSchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        SetSchema.prototype.has = function (value) {\n            var values = this.$items.values();\n            var has = false;\n            var entry;\n            while (entry = values.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (value === entry.value) {\n                    has = true;\n                    break;\n                }\n            }\n            return has;\n        };\n        SetSchema.prototype.forEach = function (callbackfn) {\n            var _this = this;\n            this.$items.forEach(function (value, key, _) { return callbackfn(value, key, _this); });\n        };\n        SetSchema.prototype.values = function () {\n            return this.$items.values();\n        };\n        Object.defineProperty(SetSchema.prototype, \"size\", {\n            get: function () {\n                return this.$items.size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        SetSchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        SetSchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        SetSchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        SetSchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        SetSchema.prototype.toArray = function () {\n            return Array.from(this.$items.values());\n        };\n        SetSchema.prototype.toJSON = function () {\n            var values = [];\n            this.forEach(function (value, key) {\n                values.push((typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value);\n            });\n            return values;\n        };\n        //\n        // Decoding utilities\n        //\n        SetSchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new SetSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new SetSchema();\n                this.forEach(function (value) {\n                    if (value['$changes']) {\n                        cloned.add(value['clone']());\n                    }\n                    else {\n                        cloned.add(value);\n                    }\n                });\n            }\n            return cloned;\n        };\n        SetSchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return SetSchema;\n    }());\n\n    /**\n     * Extracted from https://www.npmjs.com/package/strong-events\n     */\n    var EventEmitter_ = /** @class */ (function () {\n        function EventEmitter_() {\n            this.handlers = [];\n        }\n        EventEmitter_.prototype.register = function (cb, once) {\n            this.handlers.push(cb);\n            return this;\n        };\n        EventEmitter_.prototype.invoke = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            this.handlers.forEach(function (handler) { return handler.apply(void 0, args); });\n        };\n        EventEmitter_.prototype.invokeAsync = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return Promise.all(this.handlers.map(function (handler) { return handler.apply(void 0, args); }));\n        };\n        EventEmitter_.prototype.remove = function (cb) {\n            var index = this.handlers.indexOf(cb);\n            this.handlers[index] = this.handlers[this.handlers.length - 1];\n            this.handlers.pop();\n        };\n        EventEmitter_.prototype.clear = function () {\n            this.handlers = [];\n        };\n        return EventEmitter_;\n    }());\n\n    var ClientState = /** @class */ (function () {\n        function ClientState() {\n            this.refIds = new WeakSet();\n            this.containerIndexes = new WeakMap();\n        }\n        // containerIndexes = new Map<ChangeTree, Set<number>>();\n        ClientState.prototype.addRefId = function (changeTree) {\n            if (!this.refIds.has(changeTree)) {\n                this.refIds.add(changeTree);\n                this.containerIndexes.set(changeTree, new Set());\n            }\n        };\n        ClientState.get = function (client) {\n            if (client.$filterState === undefined) {\n                client.$filterState = new ClientState();\n            }\n            return client.$filterState;\n        };\n        return ClientState;\n    }());\n\n    var EncodeSchemaError = /** @class */ (function (_super) {\n        __extends(EncodeSchemaError, _super);\n        function EncodeSchemaError() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EncodeSchemaError;\n    }(Error));\n    function assertType(value, type, klass, field) {\n        var typeofTarget;\n        var allowNull = false;\n        switch (type) {\n            case \"number\":\n            case \"int8\":\n            case \"uint8\":\n            case \"int16\":\n            case \"uint16\":\n            case \"int32\":\n            case \"uint32\":\n            case \"int64\":\n            case \"uint64\":\n            case \"float32\":\n            case \"float64\":\n                typeofTarget = \"number\";\n                if (isNaN(value)) {\n                    console.log(\"trying to encode \\\"NaN\\\" in \".concat(klass.constructor.name, \"#\").concat(field));\n                }\n                break;\n            case \"string\":\n                typeofTarget = \"string\";\n                allowNull = true;\n                break;\n            case \"boolean\":\n                // boolean is always encoded as true/false based on truthiness\n                return;\n        }\n        if (typeof (value) !== typeofTarget && (!allowNull || (allowNull && value !== null))) {\n            var foundValue = \"'\".concat(JSON.stringify(value), \"'\").concat((value && value.constructor && \" (\".concat(value.constructor.name, \")\")) || '');\n            throw new EncodeSchemaError(\"a '\".concat(typeofTarget, \"' was expected, but \").concat(foundValue, \" was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n        }\n    }\n    function assertInstanceType(value, type, klass, field) {\n        if (!(value instanceof type)) {\n            throw new EncodeSchemaError(\"a '\".concat(type.name, \"' was expected, but '\").concat(value.constructor.name, \"' was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n        }\n    }\n    function encodePrimitiveType(type, bytes, value, klass, field) {\n        assertType(value, type, klass, field);\n        var encodeFunc = encode[type];\n        if (encodeFunc) {\n            encodeFunc(bytes, value);\n        }\n        else {\n            throw new EncodeSchemaError(\"a '\".concat(type, \"' was expected, but \").concat(value, \" was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n        }\n    }\n    function decodePrimitiveType(type, bytes, it) {\n        return decode[type](bytes, it);\n    }\n    /**\n     * Schema encoder / decoder\n     */\n    var Schema = /** @class */ (function () {\n        // allow inherited classes to have a constructor\n        function Schema() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // fix enumerability of fields for end-user\n            Object.defineProperties(this, {\n                $changes: {\n                    value: new ChangeTree(this, undefined, new Root()),\n                    enumerable: false,\n                    writable: true\n                },\n                $listeners: {\n                    value: {},\n                    enumerable: false,\n                    writable: true\n                },\n            });\n            var descriptors = this._definition.descriptors;\n            if (descriptors) {\n                Object.defineProperties(this, descriptors);\n            }\n            //\n            // Assign initial values\n            //\n            if (args[0]) {\n                this.assign(args[0]);\n            }\n        }\n        Schema.onError = function (e) {\n            console.error(e);\n        };\n        Schema.is = function (type) {\n            return (type['_definition'] &&\n                type['_definition'].schema !== undefined);\n        };\n        Schema.prototype.assign = function (props) {\n            Object.assign(this, props);\n            return this;\n        };\n        Object.defineProperty(Schema.prototype, \"_definition\", {\n            get: function () { return this.constructor._definition; },\n            enumerable: false,\n            configurable: true\n        });\n        Schema.prototype.listen = function (attr, callback) {\n            var _this = this;\n            if (!this.$listeners[attr]) {\n                this.$listeners[attr] = new EventEmitter_();\n            }\n            this.$listeners[attr].register(callback);\n            // return un-register callback.\n            return function () {\n                return _this.$listeners[attr].remove(callback);\n            };\n        };\n        Schema.prototype.decode = function (bytes, it, ref, allChanges) {\n            if (it === void 0) { it = { offset: 0 }; }\n            if (ref === void 0) { ref = this; }\n            if (allChanges === void 0) { allChanges = new Map(); }\n            var $root = this.$changes.root;\n            var totalBytes = bytes.length;\n            var refId = 0;\n            var changes = [];\n            $root.refs.set(refId, this);\n            allChanges.set(refId, changes);\n            while (it.offset < totalBytes) {\n                var byte = bytes[it.offset++];\n                if (byte == SWITCH_TO_STRUCTURE) {\n                    refId = number(bytes, it);\n                    var nextRef = $root.refs.get(refId);\n                    //\n                    // Trying to access a reference that haven't been decoded yet.\n                    //\n                    if (!nextRef) {\n                        throw new Error(\"\\\"refId\\\" not found: \".concat(refId));\n                    }\n                    ref = nextRef;\n                    // create empty list of changes for this refId.\n                    changes = [];\n                    allChanges.set(refId, changes);\n                    continue;\n                }\n                var changeTree = ref['$changes'];\n                var isSchema = (ref['_definition'] !== undefined);\n                var operation = (isSchema)\n                    ? (byte >> 6) << 6 // \"compressed\" index + operation\n                    : byte; // \"uncompressed\" index + operation (array/map items)\n                if (operation === exports.OPERATION.CLEAR) {\n                    //\n                    // TODO: refactor me!\n                    // The `.clear()` method is calling `$root.removeRef(refId)` for\n                    // each item inside this collection\n                    //\n                    ref.clear(true);\n                    continue;\n                }\n                var fieldIndex = (isSchema)\n                    ? byte % (operation || 255) // if \"REPLACE\" operation (0), use 255\n                    : number(bytes, it);\n                var fieldName = (isSchema)\n                    ? (ref['_definition'].fieldsByIndex[fieldIndex])\n                    : \"\";\n                var type = changeTree.getType(fieldIndex);\n                var value = void 0;\n                var previousValue = void 0;\n                var dynamicIndex = void 0;\n                if (!isSchema) {\n                    previousValue = ref['getByIndex'](fieldIndex);\n                    if ((operation & exports.OPERATION.ADD) === exports.OPERATION.ADD) { // ADD or DELETE_AND_ADD\n                        dynamicIndex = (ref instanceof MapSchema)\n                            ? string(bytes, it)\n                            : fieldIndex;\n                        ref['setIndex'](fieldIndex, dynamicIndex);\n                    }\n                    else {\n                        // here\n                        dynamicIndex = ref['getIndex'](fieldIndex);\n                    }\n                }\n                else {\n                    previousValue = ref[\"_\".concat(fieldName)];\n                }\n                //\n                // Delete operations\n                //\n                if ((operation & exports.OPERATION.DELETE) === exports.OPERATION.DELETE) {\n                    if (operation !== exports.OPERATION.DELETE_AND_ADD) {\n                        ref['deleteByIndex'](fieldIndex);\n                    }\n                    // Flag `refId` for garbage collection.\n                    if (previousValue && previousValue['$changes']) {\n                        $root.removeRef(previousValue['$changes'].refId);\n                    }\n                    value = null;\n                }\n                if (fieldName === undefined) {\n                    console.warn(\"@colyseus/schema: definition mismatch\");\n                    //\n                    // keep skipping next bytes until reaches a known structure\n                    // by local decoder.\n                    //\n                    var nextIterator = { offset: it.offset };\n                    while (it.offset < totalBytes) {\n                        if (switchStructureCheck(bytes, it)) {\n                            nextIterator.offset = it.offset + 1;\n                            if ($root.refs.has(number(bytes, nextIterator))) {\n                                break;\n                            }\n                        }\n                        it.offset++;\n                    }\n                    continue;\n                }\n                else if (operation === exports.OPERATION.DELETE) ;\n                else if (Schema.is(type)) {\n                    var refId_1 = number(bytes, it);\n                    value = $root.refs.get(refId_1);\n                    if (operation !== exports.OPERATION.REPLACE) {\n                        var childType = this.getSchemaType(bytes, it, type);\n                        if (!value) {\n                            value = this.createTypeInstance(childType);\n                            value.$changes.refId = refId_1;\n                            if (previousValue) {\n                                value.onChange = previousValue.onChange;\n                                value.onRemove = previousValue.onRemove;\n                                value.$listeners = previousValue.$listeners;\n                                if (previousValue['$changes'].refId &&\n                                    refId_1 !== previousValue['$changes'].refId) {\n                                    $root.removeRef(previousValue['$changes'].refId);\n                                }\n                            }\n                        }\n                        $root.addRef(refId_1, value, (value !== previousValue));\n                    }\n                }\n                else if (typeof (type) === \"string\") {\n                    //\n                    // primitive value (number, string, boolean, etc)\n                    //\n                    value = decodePrimitiveType(type, bytes, it);\n                }\n                else {\n                    var typeDef = getType(Object.keys(type)[0]);\n                    var refId_2 = number(bytes, it);\n                    var valueRef = ($root.refs.has(refId_2))\n                        ? previousValue || $root.refs.get(refId_2)\n                        : new typeDef.constructor();\n                    value = valueRef.clone(true);\n                    value.$changes.refId = refId_2;\n                    // preserve schema callbacks\n                    if (previousValue) {\n                        value.onAdd = previousValue.onAdd;\n                        value.onRemove = previousValue.onRemove;\n                        value.onChange = previousValue.onChange;\n                        if (previousValue['$changes'].refId &&\n                            refId_2 !== previousValue['$changes'].refId) {\n                            $root.removeRef(previousValue['$changes'].refId);\n                            //\n                            // Trigger onRemove if structure has been replaced.\n                            //\n                            var deletes = [];\n                            var entries = previousValue.entries();\n                            var iter = void 0;\n                            while ((iter = entries.next()) && !iter.done) {\n                                var _a = iter.value, key = _a[0], value_1 = _a[1];\n                                deletes.push({\n                                    op: exports.OPERATION.DELETE,\n                                    field: key,\n                                    value: undefined,\n                                    previousValue: value_1,\n                                });\n                            }\n                            allChanges.set(previousValue['$changes'].refId, deletes);\n                        }\n                    }\n                    $root.addRef(refId_2, value, (valueRef !== previousValue));\n                    //\n                    // TODO: deprecate proxies on next version.\n                    // get proxy to target value.\n                    //\n                    if (typeDef.getProxy) {\n                        value = typeDef.getProxy(value);\n                    }\n                }\n                var hasChange = (previousValue !== value);\n                if (value !== null &&\n                    value !== undefined) {\n                    if (value['$changes']) {\n                        value['$changes'].setParent(changeTree.ref, changeTree.root, fieldIndex);\n                    }\n                    if (ref instanceof Schema) {\n                        ref[fieldName] = value;\n                        //\n                        // FIXME: use `_field` instead of `field`.\n                        //\n                        // `field` is going to use the setter of the PropertyDescriptor\n                        // and create a proxy for array/map. This is only useful for\n                        // backwards-compatibility with @colyseus/schema@0.5.x\n                        //\n                        // // ref[_field] = value;\n                    }\n                    else if (ref instanceof MapSchema) {\n                        // const key = ref['$indexes'].get(field);\n                        var key = dynamicIndex;\n                        // ref.set(key, value);\n                        ref['$items'].set(key, value);\n                        ref['$changes'].allChanges.add(fieldIndex);\n                    }\n                    else if (ref instanceof ArraySchema) {\n                        // const key = ref['$indexes'][field];\n                        // console.log(\"SETTING FOR ArraySchema =>\", { field, key, value });\n                        // ref[key] = value;\n                        ref.setAt(fieldIndex, value);\n                    }\n                    else if (ref instanceof CollectionSchema) {\n                        var index = ref.add(value);\n                        ref['setIndex'](fieldIndex, index);\n                    }\n                    else if (ref instanceof SetSchema) {\n                        var index = ref.add(value);\n                        if (index !== false) {\n                            ref['setIndex'](fieldIndex, index);\n                        }\n                    }\n                }\n                if (hasChange\n                // &&\n                // (\n                //     this.onChange || ref.$listeners[field]\n                // )\n                ) {\n                    changes.push({\n                        op: operation,\n                        field: fieldName,\n                        dynamicIndex: dynamicIndex,\n                        value: value,\n                        previousValue: previousValue,\n                    });\n                }\n            }\n            this._triggerChanges(allChanges);\n            // drop references of unused schemas\n            $root.garbageCollectDeletedRefs();\n            return allChanges;\n        };\n        Schema.prototype.encode = function (encodeAll, bytes, useFilters) {\n            if (encodeAll === void 0) { encodeAll = false; }\n            if (bytes === void 0) { bytes = []; }\n            if (useFilters === void 0) { useFilters = false; }\n            var rootChangeTree = this.$changes;\n            var refIdsVisited = new WeakSet();\n            var changeTrees = [rootChangeTree];\n            var numChangeTrees = 1;\n            for (var i = 0; i < numChangeTrees; i++) {\n                var changeTree = changeTrees[i];\n                var ref = changeTree.ref;\n                var isSchema = (ref instanceof Schema);\n                // Generate unique refId for the ChangeTree.\n                changeTree.ensureRefId();\n                // mark this ChangeTree as visited.\n                refIdsVisited.add(changeTree);\n                // root `refId` is skipped.\n                if (changeTree !== rootChangeTree &&\n                    (changeTree.changed || encodeAll)) {\n                    uint8$1(bytes, SWITCH_TO_STRUCTURE);\n                    number$1(bytes, changeTree.refId);\n                }\n                var changes = (encodeAll)\n                    ? Array.from(changeTree.allChanges)\n                    : Array.from(changeTree.changes.values());\n                for (var j = 0, cl = changes.length; j < cl; j++) {\n                    var operation = (encodeAll)\n                        ? { op: exports.OPERATION.ADD, index: changes[j] }\n                        : changes[j];\n                    var fieldIndex = operation.index;\n                    var field = (isSchema)\n                        ? ref['_definition'].fieldsByIndex && ref['_definition'].fieldsByIndex[fieldIndex]\n                        : fieldIndex;\n                    // cache begin index if `useFilters`\n                    var beginIndex = bytes.length;\n                    // encode field index + operation\n                    if (operation.op !== exports.OPERATION.TOUCH) {\n                        if (isSchema) {\n                            //\n                            // Compress `fieldIndex` + `operation` into a single byte.\n                            // This adds a limitaion of 64 fields per Schema structure\n                            //\n                            uint8$1(bytes, (fieldIndex | operation.op));\n                        }\n                        else {\n                            uint8$1(bytes, operation.op);\n                            // custom operations\n                            if (operation.op === exports.OPERATION.CLEAR) {\n                                continue;\n                            }\n                            // indexed operations\n                            number$1(bytes, fieldIndex);\n                        }\n                    }\n                    //\n                    // encode \"alias\" for dynamic fields (maps)\n                    //\n                    if (!isSchema &&\n                        (operation.op & exports.OPERATION.ADD) == exports.OPERATION.ADD // ADD or DELETE_AND_ADD\n                    ) {\n                        if (ref instanceof MapSchema) {\n                            //\n                            // MapSchema dynamic key\n                            //\n                            var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                            string$1(bytes, dynamicIndex);\n                        }\n                    }\n                    if (operation.op === exports.OPERATION.DELETE) {\n                        //\n                        // TODO: delete from filter cache data.\n                        //\n                        // if (useFilters) {\n                        //     delete changeTree.caches[fieldIndex];\n                        // }\n                        continue;\n                    }\n                    // const type = changeTree.childType || ref._schema[field];\n                    var type = changeTree.getType(fieldIndex);\n                    // const type = changeTree.getType(fieldIndex);\n                    var value = changeTree.getValue(fieldIndex);\n                    // Enqueue ChangeTree to be visited\n                    if (value &&\n                        value['$changes'] &&\n                        !refIdsVisited.has(value['$changes'])) {\n                        changeTrees.push(value['$changes']);\n                        value['$changes'].ensureRefId();\n                        numChangeTrees++;\n                    }\n                    if (operation.op === exports.OPERATION.TOUCH) {\n                        continue;\n                    }\n                    if (Schema.is(type)) {\n                        assertInstanceType(value, type, ref, field);\n                        //\n                        // Encode refId for this instance.\n                        // The actual instance is going to be encoded on next `changeTree` iteration.\n                        //\n                        number$1(bytes, value.$changes.refId);\n                        // Try to encode inherited TYPE_ID if it's an ADD operation.\n                        if ((operation.op & exports.OPERATION.ADD) === exports.OPERATION.ADD) {\n                            this.tryEncodeTypeId(bytes, type, value.constructor);\n                        }\n                    }\n                    else if (typeof (type) === \"string\") {\n                        //\n                        // Primitive values\n                        //\n                        encodePrimitiveType(type, bytes, value, ref, field);\n                    }\n                    else {\n                        //\n                        // Custom type (MapSchema, ArraySchema, etc)\n                        //\n                        var definition = getType(Object.keys(type)[0]);\n                        //\n                        // ensure a ArraySchema has been provided\n                        //\n                        assertInstanceType(ref[\"_\".concat(field)], definition.constructor, ref, field);\n                        //\n                        // Encode refId for this instance.\n                        // The actual instance is going to be encoded on next `changeTree` iteration.\n                        //\n                        number$1(bytes, value.$changes.refId);\n                    }\n                    if (useFilters) {\n                        // cache begin / end index\n                        changeTree.cache(fieldIndex, bytes.slice(beginIndex));\n                    }\n                }\n                if (!encodeAll && !useFilters) {\n                    changeTree.discard();\n                }\n            }\n            return bytes;\n        };\n        Schema.prototype.encodeAll = function (useFilters) {\n            return this.encode(true, [], useFilters);\n        };\n        Schema.prototype.applyFilters = function (client, encodeAll) {\n            var _a, _b;\n            if (encodeAll === void 0) { encodeAll = false; }\n            var root = this;\n            var refIdsDissallowed = new Set();\n            var $filterState = ClientState.get(client);\n            var changeTrees = [this.$changes];\n            var numChangeTrees = 1;\n            var filteredBytes = [];\n            var _loop_1 = function (i) {\n                var changeTree = changeTrees[i];\n                if (refIdsDissallowed.has(changeTree.refId)) {\n                    return \"continue\";\n                }\n                var ref = changeTree.ref;\n                var isSchema = ref instanceof Schema;\n                uint8$1(filteredBytes, SWITCH_TO_STRUCTURE);\n                number$1(filteredBytes, changeTree.refId);\n                var clientHasRefId = $filterState.refIds.has(changeTree);\n                var isEncodeAll = (encodeAll || !clientHasRefId);\n                // console.log(\"REF:\", ref.constructor.name);\n                // console.log(\"Encode all?\", isEncodeAll);\n                //\n                // include `changeTree` on list of known refIds by this client.\n                //\n                $filterState.addRefId(changeTree);\n                var containerIndexes = $filterState.containerIndexes.get(changeTree);\n                var changes = (isEncodeAll)\n                    ? Array.from(changeTree.allChanges)\n                    : Array.from(changeTree.changes.values());\n                //\n                // WORKAROUND: tries to re-evaluate previously not included @filter() attributes\n                // - see \"DELETE a field of Schema\" test case.\n                //\n                if (!encodeAll &&\n                    isSchema &&\n                    ref._definition.indexesWithFilters) {\n                    var indexesWithFilters = ref._definition.indexesWithFilters;\n                    indexesWithFilters.forEach(function (indexWithFilter) {\n                        if (!containerIndexes.has(indexWithFilter) &&\n                            changeTree.allChanges.has(indexWithFilter)) {\n                            if (isEncodeAll) {\n                                changes.push(indexWithFilter);\n                            }\n                            else {\n                                changes.push({ op: exports.OPERATION.ADD, index: indexWithFilter, });\n                            }\n                        }\n                    });\n                }\n                for (var j = 0, cl = changes.length; j < cl; j++) {\n                    var change = (isEncodeAll)\n                        ? { op: exports.OPERATION.ADD, index: changes[j] }\n                        : changes[j];\n                    // custom operations\n                    if (change.op === exports.OPERATION.CLEAR) {\n                        uint8$1(filteredBytes, change.op);\n                        continue;\n                    }\n                    var fieldIndex = change.index;\n                    //\n                    // Deleting fields: encode the operation + field index\n                    //\n                    if (change.op === exports.OPERATION.DELETE) {\n                        //\n                        // DELETE operations also need to go through filtering.\n                        //\n                        // TODO: cache the previous value so we can access the value (primitive or `refId`)\n                        // (check against `$filterState.refIds`)\n                        //\n                        if (isSchema) {\n                            uint8$1(filteredBytes, change.op | fieldIndex);\n                        }\n                        else {\n                            uint8$1(filteredBytes, change.op);\n                            number$1(filteredBytes, fieldIndex);\n                        }\n                        continue;\n                    }\n                    // indexed operation\n                    var value = changeTree.getValue(fieldIndex);\n                    var type = changeTree.getType(fieldIndex);\n                    if (isSchema) {\n                        // Is a Schema!\n                        var filter = (ref._definition.filters &&\n                            ref._definition.filters[fieldIndex]);\n                        if (filter && !filter.call(ref, client, value, root)) {\n                            if (value && value['$changes']) {\n                                refIdsDissallowed.add(value['$changes'].refId);\n                            }\n                            continue;\n                        }\n                    }\n                    else {\n                        // Is a collection! (map, array, etc.)\n                        var parent = changeTree.parent;\n                        var filter = changeTree.getChildrenFilter();\n                        if (filter && !filter.call(parent, client, ref['$indexes'].get(fieldIndex), value, root)) {\n                            if (value && value['$changes']) {\n                                refIdsDissallowed.add(value['$changes'].refId);\n                            }\n                            continue;\n                        }\n                    }\n                    // visit child ChangeTree on further iteration.\n                    if (value['$changes']) {\n                        changeTrees.push(value['$changes']);\n                        numChangeTrees++;\n                    }\n                    //\n                    // Copy cached bytes\n                    //\n                    if (change.op !== exports.OPERATION.TOUCH) {\n                        //\n                        // TODO: refactor me!\n                        //\n                        if (change.op === exports.OPERATION.ADD || isSchema) {\n                            //\n                            // use cached bytes directly if is from Schema type.\n                            //\n                            filteredBytes.push.apply(filteredBytes, (_a = changeTree.caches[fieldIndex]) !== null && _a !== void 0 ? _a : []);\n                            containerIndexes.add(fieldIndex);\n                        }\n                        else {\n                            if (containerIndexes.has(fieldIndex)) {\n                                //\n                                // use cached bytes if already has the field\n                                //\n                                filteredBytes.push.apply(filteredBytes, (_b = changeTree.caches[fieldIndex]) !== null && _b !== void 0 ? _b : []);\n                            }\n                            else {\n                                //\n                                // force ADD operation if field is not known by this client.\n                                //\n                                containerIndexes.add(fieldIndex);\n                                uint8$1(filteredBytes, exports.OPERATION.ADD);\n                                number$1(filteredBytes, fieldIndex);\n                                if (ref instanceof MapSchema) {\n                                    //\n                                    // MapSchema dynamic key\n                                    //\n                                    var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                                    string$1(filteredBytes, dynamicIndex);\n                                }\n                                if (value['$changes']) {\n                                    number$1(filteredBytes, value['$changes'].refId);\n                                }\n                                else {\n                                    // \"encodePrimitiveType\" without type checking.\n                                    // the type checking has been done on the first .encode() call.\n                                    encode[type](filteredBytes, value);\n                                }\n                            }\n                        }\n                    }\n                    else if (value['$changes'] && !isSchema) {\n                        //\n                        // TODO:\n                        // - track ADD/REPLACE/DELETE instances on `$filterState`\n                        // - do NOT always encode dynamicIndex for MapSchema.\n                        //   (If client already has that key, only the first index is necessary.)\n                        //\n                        uint8$1(filteredBytes, exports.OPERATION.ADD);\n                        number$1(filteredBytes, fieldIndex);\n                        if (ref instanceof MapSchema) {\n                            //\n                            // MapSchema dynamic key\n                            //\n                            var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                            string$1(filteredBytes, dynamicIndex);\n                        }\n                        number$1(filteredBytes, value['$changes'].refId);\n                    }\n                }\n            };\n            for (var i = 0; i < numChangeTrees; i++) {\n                _loop_1(i);\n            }\n            return filteredBytes;\n        };\n        Schema.prototype.clone = function () {\n            var _a;\n            var cloned = new (this.constructor);\n            var schema = this._definition.schema;\n            for (var field in schema) {\n                if (typeof (this[field]) === \"object\" &&\n                    typeof ((_a = this[field]) === null || _a === void 0 ? void 0 : _a.clone) === \"function\") {\n                    // deep clone\n                    cloned[field] = this[field].clone();\n                }\n                else {\n                    // primitive values\n                    cloned[field] = this[field];\n                }\n            }\n            return cloned;\n        };\n        Schema.prototype.triggerAll = function () {\n            // skip if haven't received any remote refs yet.\n            if (this.$changes.root.refs.size === 0) {\n                return;\n            }\n            var allChanges = new Map();\n            Schema.prototype._triggerAllFillChanges.call(this, this, allChanges);\n            try {\n                Schema.prototype._triggerChanges.call(this, allChanges);\n            }\n            catch (e) {\n                Schema.onError(e);\n            }\n        };\n        Schema.prototype.toJSON = function () {\n            var schema = this._definition.schema;\n            var deprecated = this._definition.deprecated;\n            var obj = {};\n            for (var field in schema) {\n                if (!deprecated[field] && this[field] !== null && typeof (this[field]) !== \"undefined\") {\n                    obj[field] = (typeof (this[field]['toJSON']) === \"function\")\n                        ? this[field]['toJSON']()\n                        : this[\"_\".concat(field)];\n                }\n            }\n            return obj;\n        };\n        Schema.prototype.discardAllChanges = function () {\n            this.$changes.discardAll();\n        };\n        Schema.prototype.getByIndex = function (index) {\n            return this[this._definition.fieldsByIndex[index]];\n        };\n        Schema.prototype.deleteByIndex = function (index) {\n            this[this._definition.fieldsByIndex[index]] = undefined;\n        };\n        Schema.prototype.tryEncodeTypeId = function (bytes, type, targetType) {\n            if (type._typeid !== targetType._typeid) {\n                uint8$1(bytes, TYPE_ID);\n                number$1(bytes, targetType._typeid);\n            }\n        };\n        Schema.prototype.getSchemaType = function (bytes, it, defaultType) {\n            var type;\n            if (bytes[it.offset] === TYPE_ID) {\n                it.offset++;\n                type = this.constructor._context.get(number(bytes, it));\n            }\n            return type || defaultType;\n        };\n        Schema.prototype.createTypeInstance = function (type) {\n            var instance = new type();\n            // assign root on $changes\n            instance.$changes.root = this.$changes.root;\n            return instance;\n        };\n        Schema.prototype._triggerAllFillChanges = function (ref, allChanges) {\n            if (allChanges.has(ref['$changes'].refId)) {\n                return;\n            }\n            var changes = [];\n            allChanges.set(ref['$changes'].refId || 0, changes);\n            if (ref instanceof Schema) {\n                var schema = ref._definition.schema;\n                for (var fieldName in schema) {\n                    var _field = \"_\".concat(fieldName);\n                    var value = ref[_field];\n                    if (value !== undefined) {\n                        changes.push({\n                            op: exports.OPERATION.ADD,\n                            field: fieldName,\n                            value: value,\n                            previousValue: undefined\n                        });\n                        if (value['$changes'] !== undefined) {\n                            Schema.prototype._triggerAllFillChanges.call(this, value, allChanges);\n                        }\n                    }\n                }\n            }\n            else {\n                var entries = ref.entries();\n                var iter = void 0;\n                while ((iter = entries.next()) && !iter.done) {\n                    var _a = iter.value, key = _a[0], value = _a[1];\n                    changes.push({\n                        op: exports.OPERATION.ADD,\n                        field: key,\n                        dynamicIndex: key,\n                        value: value,\n                        previousValue: undefined,\n                    });\n                    if (value['$changes'] !== undefined) {\n                        Schema.prototype._triggerAllFillChanges.call(this, value, allChanges);\n                    }\n                }\n            }\n        };\n        Schema.prototype._triggerChanges = function (allChanges) {\n            var _this = this;\n            allChanges.forEach(function (changes, refId) {\n                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n                if (changes.length > 0) {\n                    var ref = _this.$changes.root.refs.get(refId);\n                    var isSchema = ref instanceof Schema;\n                    for (var i = 0; i < changes.length; i++) {\n                        var change = changes[i];\n                        var listener = ref['$listeners'] && ref['$listeners'][change.field];\n                        if (!isSchema) {\n                            if (change.op === exports.OPERATION.ADD && change.previousValue === undefined) {\n                                (_b = (_a = ref).onAdd) === null || _b === void 0 ? void 0 : _b.call(_a, change.value, (_c = change.dynamicIndex) !== null && _c !== void 0 ? _c : change.field);\n                            }\n                            else if (change.op === exports.OPERATION.DELETE) {\n                                //\n                                // FIXME: `previousValue` should always be avaiiable.\n                                // ADD + DELETE operations are still encoding DELETE operation.\n                                //\n                                if (change.previousValue !== undefined) {\n                                    (_e = (_d = ref).onRemove) === null || _e === void 0 ? void 0 : _e.call(_d, change.previousValue, (_f = change.dynamicIndex) !== null && _f !== void 0 ? _f : change.field);\n                                }\n                            }\n                            else if (change.op === exports.OPERATION.DELETE_AND_ADD) {\n                                if (change.previousValue !== undefined) {\n                                    (_h = (_g = ref).onRemove) === null || _h === void 0 ? void 0 : _h.call(_g, change.previousValue, change.dynamicIndex);\n                                }\n                                (_k = (_j = ref).onAdd) === null || _k === void 0 ? void 0 : _k.call(_j, change.value, change.dynamicIndex);\n                            }\n                            else if (change.op === exports.OPERATION.REPLACE ||\n                                change.value !== change.previousValue) {\n                                (_m = (_l = ref).onChange) === null || _m === void 0 ? void 0 : _m.call(_l, change.value, change.dynamicIndex);\n                            }\n                        }\n                        //\n                        // trigger onRemove on child structure.\n                        //\n                        if ((change.op & exports.OPERATION.DELETE) === exports.OPERATION.DELETE &&\n                            change.previousValue instanceof Schema &&\n                            change.previousValue.onRemove) {\n                            change.previousValue.onRemove();\n                        }\n                        if (listener) {\n                            try {\n                                listener.invoke(change.value, change.previousValue);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                    }\n                    if (isSchema) {\n                        if (ref.onChange) {\n                            try {\n                                ref.onChange(changes);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                    }\n                }\n            });\n        };\n        Schema._definition = SchemaDefinition.create();\n        return Schema;\n    }());\n\n    function dumpChanges(schema) {\n        var changeTrees = [schema['$changes']];\n        var numChangeTrees = 1;\n        var dump = {};\n        var currentStructure = dump;\n        var _loop_1 = function (i) {\n            var changeTree = changeTrees[i];\n            changeTree.changes.forEach(function (change) {\n                var ref = changeTree.ref;\n                var fieldIndex = change.index;\n                var field = (ref['_definition'])\n                    ? ref['_definition'].fieldsByIndex[fieldIndex]\n                    : ref['$indexes'].get(fieldIndex);\n                currentStructure[field] = changeTree.getValue(fieldIndex);\n            });\n        };\n        for (var i = 0; i < numChangeTrees; i++) {\n            _loop_1(i);\n        }\n        return dump;\n    }\n\n    var reflectionContext = new Context();\n    /**\n     * Reflection\n     */\n    var ReflectionField = /** @class */ (function (_super) {\n        __extends(ReflectionField, _super);\n        function ReflectionField() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        __decorate([\n            type(\"string\", reflectionContext)\n        ], ReflectionField.prototype, \"name\", void 0);\n        __decorate([\n            type(\"string\", reflectionContext)\n        ], ReflectionField.prototype, \"type\", void 0);\n        __decorate([\n            type(\"number\", reflectionContext)\n        ], ReflectionField.prototype, \"referencedType\", void 0);\n        return ReflectionField;\n    }(Schema));\n    var ReflectionType = /** @class */ (function (_super) {\n        __extends(ReflectionType, _super);\n        function ReflectionType() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.fields = new ArraySchema();\n            return _this;\n        }\n        __decorate([\n            type(\"number\", reflectionContext)\n        ], ReflectionType.prototype, \"id\", void 0);\n        __decorate([\n            type([ReflectionField], reflectionContext)\n        ], ReflectionType.prototype, \"fields\", void 0);\n        return ReflectionType;\n    }(Schema));\n    var Reflection = /** @class */ (function (_super) {\n        __extends(Reflection, _super);\n        function Reflection() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.types = new ArraySchema();\n            return _this;\n        }\n        Reflection.encode = function (instance) {\n            var rootSchemaType = instance.constructor;\n            var reflection = new Reflection();\n            reflection.rootType = rootSchemaType._typeid;\n            var buildType = function (currentType, schema) {\n                for (var fieldName in schema) {\n                    var field = new ReflectionField();\n                    field.name = fieldName;\n                    var fieldType = void 0;\n                    if (typeof (schema[fieldName]) === \"string\") {\n                        fieldType = schema[fieldName];\n                    }\n                    else {\n                        var type_1 = schema[fieldName];\n                        var childTypeSchema = void 0;\n                        //\n                        // TODO: refactor below.\n                        //\n                        if (Schema.is(type_1)) {\n                            fieldType = \"ref\";\n                            childTypeSchema = schema[fieldName];\n                        }\n                        else {\n                            fieldType = Object.keys(type_1)[0];\n                            if (typeof (type_1[fieldType]) === \"string\") {\n                                fieldType += \":\" + type_1[fieldType]; // array:string\n                            }\n                            else {\n                                childTypeSchema = type_1[fieldType];\n                            }\n                        }\n                        field.referencedType = (childTypeSchema)\n                            ? childTypeSchema._typeid\n                            : -1;\n                    }\n                    field.type = fieldType;\n                    currentType.fields.push(field);\n                }\n                reflection.types.push(currentType);\n            };\n            var types = rootSchemaType._context.types;\n            for (var typeid in types) {\n                var type_2 = new ReflectionType();\n                type_2.id = Number(typeid);\n                buildType(type_2, types[typeid]._definition.schema);\n            }\n            return reflection.encodeAll();\n        };\n        Reflection.decode = function (bytes, it) {\n            var context = new Context();\n            var reflection = new Reflection();\n            reflection.decode(bytes, it);\n            var schemaTypes = reflection.types.reduce(function (types, reflectionType) {\n                var schema = /** @class */ (function (_super) {\n                    __extends(_, _super);\n                    function _() {\n                        return _super !== null && _super.apply(this, arguments) || this;\n                    }\n                    return _;\n                }(Schema));\n                var typeid = reflectionType.id;\n                types[typeid] = schema;\n                context.add(schema, typeid);\n                return types;\n            }, {});\n            reflection.types.forEach(function (reflectionType) {\n                var schemaType = schemaTypes[reflectionType.id];\n                reflectionType.fields.forEach(function (field) {\n                    var _a;\n                    if (field.referencedType !== undefined) {\n                        var fieldType = field.type;\n                        var refType = schemaTypes[field.referencedType];\n                        // map or array of primitive type (-1)\n                        if (!refType) {\n                            var typeInfo = field.type.split(\":\");\n                            fieldType = typeInfo[0];\n                            refType = typeInfo[1];\n                        }\n                        if (fieldType === \"ref\") {\n                            type(refType, context)(schemaType.prototype, field.name);\n                        }\n                        else {\n                            type((_a = {}, _a[fieldType] = refType, _a), context)(schemaType.prototype, field.name);\n                        }\n                    }\n                    else {\n                        type(field.type, context)(schemaType.prototype, field.name);\n                    }\n                });\n            });\n            var rootType = schemaTypes[reflection.rootType];\n            var rootInstance = new rootType();\n            /**\n             * auto-initialize referenced types on root type\n             * to allow registering listeners immediatelly on client-side\n             */\n            for (var fieldName in rootType._definition.schema) {\n                var fieldType = rootType._definition.schema[fieldName];\n                if (typeof (fieldType) !== \"string\") {\n                    rootInstance[fieldName] = (typeof (fieldType) === \"function\")\n                        ? new fieldType() // is a schema reference\n                        : new (getType(Object.keys(fieldType)[0])).constructor(); // is a \"collection\"\n                }\n            }\n            return rootInstance;\n        };\n        __decorate([\n            type([ReflectionType], reflectionContext)\n        ], Reflection.prototype, \"types\", void 0);\n        __decorate([\n            type(\"number\", reflectionContext)\n        ], Reflection.prototype, \"rootType\", void 0);\n        return Reflection;\n    }(Schema));\n\n    registerType(\"map\", { constructor: MapSchema, getProxy: getMapProxy });\n    registerType(\"array\", { constructor: ArraySchema, getProxy: getArrayProxy });\n    registerType(\"set\", { constructor: SetSchema });\n    registerType(\"collection\", { constructor: CollectionSchema, });\n\n    exports.ArraySchema = ArraySchema;\n    exports.CollectionSchema = CollectionSchema;\n    exports.Context = Context;\n    exports.MapSchema = MapSchema;\n    exports.Reflection = Reflection;\n    exports.ReflectionField = ReflectionField;\n    exports.ReflectionType = ReflectionType;\n    exports.Schema = Schema;\n    exports.SchemaDefinition = SchemaDefinition;\n    exports.SetSchema = SetSchema;\n    exports.decode = decode;\n    exports.defineTypes = defineTypes;\n    exports.deprecated = deprecated;\n    exports.dumpChanges = dumpChanges;\n    exports.encode = encode;\n    exports.filter = filter;\n    exports.filterChildren = filterChildren;\n    exports.hasFilter = hasFilter;\n    exports.registerType = registerType;\n    exports.type = type;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":407,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":408,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":409,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":410,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":411,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":412,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":413,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":414,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":415,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":416,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":417,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":418,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":419,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":420,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":421,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":422,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":423,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":424,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":425,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":426,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":427,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":428,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":429,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":430,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":431,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":432,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":433,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":434,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":435,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":436,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":437,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":438,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":439,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":440,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":441,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":442,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":443,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":444,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":445,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":446,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":447,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":448,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":449,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":450,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":451,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":452,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":453,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":454,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":455,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":456,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":457,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":458,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":459,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":460,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":461,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":462,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":463,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":464,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":465,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":466,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":467,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":468,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":469,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":470,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":471,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":472,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":473,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":474,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":475,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":476,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":477,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":478,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":479,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":480,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":481,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":482,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":483,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":484,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":485,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":486,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":487,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":488,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":489,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":490,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":491,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":492,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":493,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":494,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":495,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":496,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":497,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":498,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":499,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":500,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":501,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":502,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":503,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":504,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":505,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":506,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":507,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":508,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":509,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":510,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":511,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":512,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":513,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":514,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":515,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":516,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":517,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":518,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":519,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":520,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":521,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":522,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":523,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":524,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":525,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":526,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":527,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":528,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":529,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":530,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":531,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":532,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":533,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":534,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":535,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":536,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":537,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":538,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":539,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":540,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":541,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":542,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":543,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":544,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":545,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":546,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":547,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":548,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":549,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":550,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":551,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":552,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":553,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":554,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":555,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":556,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":557,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":558,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":559,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":560,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":561,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":562,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":563,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":564,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":565,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":566,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":567,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":568,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":569,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":570,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":571,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":572,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":573,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":574,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":575,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":576,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":577,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":578,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":579,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":580,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":581,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":582,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":583,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":584,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":585,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":586,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":587,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":588,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":589,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":590,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":591,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":592,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":593,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":594,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":595,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":596,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":597,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":598,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":599,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":600,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":601,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":602,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":603,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":604,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":605,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":606,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":607,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":608,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":609,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":610,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":611,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":612,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":613,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":614,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":615,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":616,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":617,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":618,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":619,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":620,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":621,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":622,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":623,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":624,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":625,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":626,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":627,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":628,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":629,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":630,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":631,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":632,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":633,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":634,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":635,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":636,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":637,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":638,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":639,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":640,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":641,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":642,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":643,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":644,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":645,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":646,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":647,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":648,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":649,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":650,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":651,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":652,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":653,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":654,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":655,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":656,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":657,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":658,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":659,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":660,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":661,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":662,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":663,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":664,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":665,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":666,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":667,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":668,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":669,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":670,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":671,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":672,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":673,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":674,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":675,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":676,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":677,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":678,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":679,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":680,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":681,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":682,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":683,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":684,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":685,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":686,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":687,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":688,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":689,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":690,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":691,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":692,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":693,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":694,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":695,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":696,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":697,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":698,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":699,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":700,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":701,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":702,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":703,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":704,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":705,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":706,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":707,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":708,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":709,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":710,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":711,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":712,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":713,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":714,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":715,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":716,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":717,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":718,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":719,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":720,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":721,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":722,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":723,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":724,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":725,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":726,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":727,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":728,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":729,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":730,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":731,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":732,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":733,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":734,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":735,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":736,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":737,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":738,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":739,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":740,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":741,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":742,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":743,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":744,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":745,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":746,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":747,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":748,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":749,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":750,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":751,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":752,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":753,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":754,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":755,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":756,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":757,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":758,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":759,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":760,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":761,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":762,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":763,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":764,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":765,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":766,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":767,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":768,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":769,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":770,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":771,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":772,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":773,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":774,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":775,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":776,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":777,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":778,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":779,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":780,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":781,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":782,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":783,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":784,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":785,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":786,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":787,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":788,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":789,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":790,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":791,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":792,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":793,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":794,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":795,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":796,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":797,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":798,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":799,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":800,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":801,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":802,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":803,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":804,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":805,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":806,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":807,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":808,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":809,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":810,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":811,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":812,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":813,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":814,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":815,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":816,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":817,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":818,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":819,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":820,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":821,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":822,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":823,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":824,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":825,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":826,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":827,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":828,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":829,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":830,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":831,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":832,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":833,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":834,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":835,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":836,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":837,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":838,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":839,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":840,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":841,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":842,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":843,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":844,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":845,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":846,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":847,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":848,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":849,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":850,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":851,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":852,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":853,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":854,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":855,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":856,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":857,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":858,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":859,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":860,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":861,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":862,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":863,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":864,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":865,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":866,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":867,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":868,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":869,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":870,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":871,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":872,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":873,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":874,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":875,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":876,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":877,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":878,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":879,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":880,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":881,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":882,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":883,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":884,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":885,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":886,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":887,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":888,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":889,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":890,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":891,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":892,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":893,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":894,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":895,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":896,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":897,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":898,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":899,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":900,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":901,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":902,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":903,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":904,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":905,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":906,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":907,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":908,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":909,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":910,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":911,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":912,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":913,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":914,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":915,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":916,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":917,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":918,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":919,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":920,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":921,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":922,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":923,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":924,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":925,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":926,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":927,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":928,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":929,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":930,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":931,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":932,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":933,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":934,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":935,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":936,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":937,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":938,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":939,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":940,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":941,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":942,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":943,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":944,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":945,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":946,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":947,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":948,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":949,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":950,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":951,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":952,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":953,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":954,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":955,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":956,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":957,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":958,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":959,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":960,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":961,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":962,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":963,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":964,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":965,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":966,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":967,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":968,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":969,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":970,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":971,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":972,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":973,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":974,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":975,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":976,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":977,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":978,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":979,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":980,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":981,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":982,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":983,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":984,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":985,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":986,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":987,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":988,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":989,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":990,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":991,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":992,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":993,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":994,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":995,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":996,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":997,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":998,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":999,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1000,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1001,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1002,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1003,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1004,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1005,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1006,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1007,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1008,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1009,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1010,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1011,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1012,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1013,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1014,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1015,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1016,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1017,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1018,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1019,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1020,"column":0},"generated":{"line":1022,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1021,"column":0},"generated":{"line":1023,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1022,"column":0},"generated":{"line":1024,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1023,"column":0},"generated":{"line":1025,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1024,"column":0},"generated":{"line":1026,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1025,"column":0},"generated":{"line":1027,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1026,"column":0},"generated":{"line":1028,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1027,"column":0},"generated":{"line":1029,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1028,"column":0},"generated":{"line":1030,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1029,"column":0},"generated":{"line":1031,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1030,"column":0},"generated":{"line":1032,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1031,"column":0},"generated":{"line":1033,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1032,"column":0},"generated":{"line":1034,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1033,"column":0},"generated":{"line":1035,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1034,"column":0},"generated":{"line":1036,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1035,"column":0},"generated":{"line":1037,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1036,"column":0},"generated":{"line":1038,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1037,"column":0},"generated":{"line":1039,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1038,"column":0},"generated":{"line":1040,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1039,"column":0},"generated":{"line":1041,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1040,"column":0},"generated":{"line":1042,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1041,"column":0},"generated":{"line":1043,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1042,"column":0},"generated":{"line":1044,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1043,"column":0},"generated":{"line":1045,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1044,"column":0},"generated":{"line":1046,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1045,"column":0},"generated":{"line":1047,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1046,"column":0},"generated":{"line":1048,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1047,"column":0},"generated":{"line":1049,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1048,"column":0},"generated":{"line":1050,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1049,"column":0},"generated":{"line":1051,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1050,"column":0},"generated":{"line":1052,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1051,"column":0},"generated":{"line":1053,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1052,"column":0},"generated":{"line":1054,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1053,"column":0},"generated":{"line":1055,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1054,"column":0},"generated":{"line":1056,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1055,"column":0},"generated":{"line":1057,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1056,"column":0},"generated":{"line":1058,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1057,"column":0},"generated":{"line":1059,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1058,"column":0},"generated":{"line":1060,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1059,"column":0},"generated":{"line":1061,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1060,"column":0},"generated":{"line":1062,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1061,"column":0},"generated":{"line":1063,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1062,"column":0},"generated":{"line":1064,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1063,"column":0},"generated":{"line":1065,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1064,"column":0},"generated":{"line":1066,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1065,"column":0},"generated":{"line":1067,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1066,"column":0},"generated":{"line":1068,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1067,"column":0},"generated":{"line":1069,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1068,"column":0},"generated":{"line":1070,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1069,"column":0},"generated":{"line":1071,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1070,"column":0},"generated":{"line":1072,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1071,"column":0},"generated":{"line":1073,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1072,"column":0},"generated":{"line":1074,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1073,"column":0},"generated":{"line":1075,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1074,"column":0},"generated":{"line":1076,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1075,"column":0},"generated":{"line":1077,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1076,"column":0},"generated":{"line":1078,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1077,"column":0},"generated":{"line":1079,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1078,"column":0},"generated":{"line":1080,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1079,"column":0},"generated":{"line":1081,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1080,"column":0},"generated":{"line":1082,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1081,"column":0},"generated":{"line":1083,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1082,"column":0},"generated":{"line":1084,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1083,"column":0},"generated":{"line":1085,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1084,"column":0},"generated":{"line":1086,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1085,"column":0},"generated":{"line":1087,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1086,"column":0},"generated":{"line":1088,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1087,"column":0},"generated":{"line":1089,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1088,"column":0},"generated":{"line":1090,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1089,"column":0},"generated":{"line":1091,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1090,"column":0},"generated":{"line":1092,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1091,"column":0},"generated":{"line":1093,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1092,"column":0},"generated":{"line":1094,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1093,"column":0},"generated":{"line":1095,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1094,"column":0},"generated":{"line":1096,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1095,"column":0},"generated":{"line":1097,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1096,"column":0},"generated":{"line":1098,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1097,"column":0},"generated":{"line":1099,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1098,"column":0},"generated":{"line":1100,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1099,"column":0},"generated":{"line":1101,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1100,"column":0},"generated":{"line":1102,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1101,"column":0},"generated":{"line":1103,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1102,"column":0},"generated":{"line":1104,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1103,"column":0},"generated":{"line":1105,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1104,"column":0},"generated":{"line":1106,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1105,"column":0},"generated":{"line":1107,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1106,"column":0},"generated":{"line":1108,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1107,"column":0},"generated":{"line":1109,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1108,"column":0},"generated":{"line":1110,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1109,"column":0},"generated":{"line":1111,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1110,"column":0},"generated":{"line":1112,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1111,"column":0},"generated":{"line":1113,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1112,"column":0},"generated":{"line":1114,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1113,"column":0},"generated":{"line":1115,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1114,"column":0},"generated":{"line":1116,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1115,"column":0},"generated":{"line":1117,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1116,"column":0},"generated":{"line":1118,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1117,"column":0},"generated":{"line":1119,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1118,"column":0},"generated":{"line":1120,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1119,"column":0},"generated":{"line":1121,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1120,"column":0},"generated":{"line":1122,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1121,"column":0},"generated":{"line":1123,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1122,"column":0},"generated":{"line":1124,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1123,"column":0},"generated":{"line":1125,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1124,"column":0},"generated":{"line":1126,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1125,"column":0},"generated":{"line":1127,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1126,"column":0},"generated":{"line":1128,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1127,"column":0},"generated":{"line":1129,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1128,"column":0},"generated":{"line":1130,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1129,"column":0},"generated":{"line":1131,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1130,"column":0},"generated":{"line":1132,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1131,"column":0},"generated":{"line":1133,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1132,"column":0},"generated":{"line":1134,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1133,"column":0},"generated":{"line":1135,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1134,"column":0},"generated":{"line":1136,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1135,"column":0},"generated":{"line":1137,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1136,"column":0},"generated":{"line":1138,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1137,"column":0},"generated":{"line":1139,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1138,"column":0},"generated":{"line":1140,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1139,"column":0},"generated":{"line":1141,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1140,"column":0},"generated":{"line":1142,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1141,"column":0},"generated":{"line":1143,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1142,"column":0},"generated":{"line":1144,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1143,"column":0},"generated":{"line":1145,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1144,"column":0},"generated":{"line":1146,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1145,"column":0},"generated":{"line":1147,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1146,"column":0},"generated":{"line":1148,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1147,"column":0},"generated":{"line":1149,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1148,"column":0},"generated":{"line":1150,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1149,"column":0},"generated":{"line":1151,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1150,"column":0},"generated":{"line":1152,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1151,"column":0},"generated":{"line":1153,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1152,"column":0},"generated":{"line":1154,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1153,"column":0},"generated":{"line":1155,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1154,"column":0},"generated":{"line":1156,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1155,"column":0},"generated":{"line":1157,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1156,"column":0},"generated":{"line":1158,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1157,"column":0},"generated":{"line":1159,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1158,"column":0},"generated":{"line":1160,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1159,"column":0},"generated":{"line":1161,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1160,"column":0},"generated":{"line":1162,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1161,"column":0},"generated":{"line":1163,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1162,"column":0},"generated":{"line":1164,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1163,"column":0},"generated":{"line":1165,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1164,"column":0},"generated":{"line":1166,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1165,"column":0},"generated":{"line":1167,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1166,"column":0},"generated":{"line":1168,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1167,"column":0},"generated":{"line":1169,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1168,"column":0},"generated":{"line":1170,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1169,"column":0},"generated":{"line":1171,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1170,"column":0},"generated":{"line":1172,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1171,"column":0},"generated":{"line":1173,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1172,"column":0},"generated":{"line":1174,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1173,"column":0},"generated":{"line":1175,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1174,"column":0},"generated":{"line":1176,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1175,"column":0},"generated":{"line":1177,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1176,"column":0},"generated":{"line":1178,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1177,"column":0},"generated":{"line":1179,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1178,"column":0},"generated":{"line":1180,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1179,"column":0},"generated":{"line":1181,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1180,"column":0},"generated":{"line":1182,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1181,"column":0},"generated":{"line":1183,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1182,"column":0},"generated":{"line":1184,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1183,"column":0},"generated":{"line":1185,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1184,"column":0},"generated":{"line":1186,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1185,"column":0},"generated":{"line":1187,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1186,"column":0},"generated":{"line":1188,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1187,"column":0},"generated":{"line":1189,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1188,"column":0},"generated":{"line":1190,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1189,"column":0},"generated":{"line":1191,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1190,"column":0},"generated":{"line":1192,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1191,"column":0},"generated":{"line":1193,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1192,"column":0},"generated":{"line":1194,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1193,"column":0},"generated":{"line":1195,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1194,"column":0},"generated":{"line":1196,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1195,"column":0},"generated":{"line":1197,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1196,"column":0},"generated":{"line":1198,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1197,"column":0},"generated":{"line":1199,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1198,"column":0},"generated":{"line":1200,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1199,"column":0},"generated":{"line":1201,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1200,"column":0},"generated":{"line":1202,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1201,"column":0},"generated":{"line":1203,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1202,"column":0},"generated":{"line":1204,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1203,"column":0},"generated":{"line":1205,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1204,"column":0},"generated":{"line":1206,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1205,"column":0},"generated":{"line":1207,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1206,"column":0},"generated":{"line":1208,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1207,"column":0},"generated":{"line":1209,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1208,"column":0},"generated":{"line":1210,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1209,"column":0},"generated":{"line":1211,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1210,"column":0},"generated":{"line":1212,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1211,"column":0},"generated":{"line":1213,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1212,"column":0},"generated":{"line":1214,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1213,"column":0},"generated":{"line":1215,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1214,"column":0},"generated":{"line":1216,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1215,"column":0},"generated":{"line":1217,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1216,"column":0},"generated":{"line":1218,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1217,"column":0},"generated":{"line":1219,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1218,"column":0},"generated":{"line":1220,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1219,"column":0},"generated":{"line":1221,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1220,"column":0},"generated":{"line":1222,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1221,"column":0},"generated":{"line":1223,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1222,"column":0},"generated":{"line":1224,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1223,"column":0},"generated":{"line":1225,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1224,"column":0},"generated":{"line":1226,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1225,"column":0},"generated":{"line":1227,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1226,"column":0},"generated":{"line":1228,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1227,"column":0},"generated":{"line":1229,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1228,"column":0},"generated":{"line":1230,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1229,"column":0},"generated":{"line":1231,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1230,"column":0},"generated":{"line":1232,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1231,"column":0},"generated":{"line":1233,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1232,"column":0},"generated":{"line":1234,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1233,"column":0},"generated":{"line":1235,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1234,"column":0},"generated":{"line":1236,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1235,"column":0},"generated":{"line":1237,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1236,"column":0},"generated":{"line":1238,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1237,"column":0},"generated":{"line":1239,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1238,"column":0},"generated":{"line":1240,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1239,"column":0},"generated":{"line":1241,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1240,"column":0},"generated":{"line":1242,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1241,"column":0},"generated":{"line":1243,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1242,"column":0},"generated":{"line":1244,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1243,"column":0},"generated":{"line":1245,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1244,"column":0},"generated":{"line":1246,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1245,"column":0},"generated":{"line":1247,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1246,"column":0},"generated":{"line":1248,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1247,"column":0},"generated":{"line":1249,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1248,"column":0},"generated":{"line":1250,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1249,"column":0},"generated":{"line":1251,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1250,"column":0},"generated":{"line":1252,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1251,"column":0},"generated":{"line":1253,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1252,"column":0},"generated":{"line":1254,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1253,"column":0},"generated":{"line":1255,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1254,"column":0},"generated":{"line":1256,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1255,"column":0},"generated":{"line":1257,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1256,"column":0},"generated":{"line":1258,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1257,"column":0},"generated":{"line":1259,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1258,"column":0},"generated":{"line":1260,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1259,"column":0},"generated":{"line":1261,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1260,"column":0},"generated":{"line":1262,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1261,"column":0},"generated":{"line":1263,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1262,"column":0},"generated":{"line":1264,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1263,"column":0},"generated":{"line":1265,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1264,"column":0},"generated":{"line":1266,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1265,"column":0},"generated":{"line":1267,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1266,"column":0},"generated":{"line":1268,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1267,"column":0},"generated":{"line":1269,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1268,"column":0},"generated":{"line":1270,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1269,"column":0},"generated":{"line":1271,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1270,"column":0},"generated":{"line":1272,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1271,"column":0},"generated":{"line":1273,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1272,"column":0},"generated":{"line":1274,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1273,"column":0},"generated":{"line":1275,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1274,"column":0},"generated":{"line":1276,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1275,"column":0},"generated":{"line":1277,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1276,"column":0},"generated":{"line":1278,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1277,"column":0},"generated":{"line":1279,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1278,"column":0},"generated":{"line":1280,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1279,"column":0},"generated":{"line":1281,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1280,"column":0},"generated":{"line":1282,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1281,"column":0},"generated":{"line":1283,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1282,"column":0},"generated":{"line":1284,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1283,"column":0},"generated":{"line":1285,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1284,"column":0},"generated":{"line":1286,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1285,"column":0},"generated":{"line":1287,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1286,"column":0},"generated":{"line":1288,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1287,"column":0},"generated":{"line":1289,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1288,"column":0},"generated":{"line":1290,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1289,"column":0},"generated":{"line":1291,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1290,"column":0},"generated":{"line":1292,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1291,"column":0},"generated":{"line":1293,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1292,"column":0},"generated":{"line":1294,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1293,"column":0},"generated":{"line":1295,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1294,"column":0},"generated":{"line":1296,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1295,"column":0},"generated":{"line":1297,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1296,"column":0},"generated":{"line":1298,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1297,"column":0},"generated":{"line":1299,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1298,"column":0},"generated":{"line":1300,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1299,"column":0},"generated":{"line":1301,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1300,"column":0},"generated":{"line":1302,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1301,"column":0},"generated":{"line":1303,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1302,"column":0},"generated":{"line":1304,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1303,"column":0},"generated":{"line":1305,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1304,"column":0},"generated":{"line":1306,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1305,"column":0},"generated":{"line":1307,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1306,"column":0},"generated":{"line":1308,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1307,"column":0},"generated":{"line":1309,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1308,"column":0},"generated":{"line":1310,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1309,"column":0},"generated":{"line":1311,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1310,"column":0},"generated":{"line":1312,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1311,"column":0},"generated":{"line":1313,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1312,"column":0},"generated":{"line":1314,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1313,"column":0},"generated":{"line":1315,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1314,"column":0},"generated":{"line":1316,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1315,"column":0},"generated":{"line":1317,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1316,"column":0},"generated":{"line":1318,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1317,"column":0},"generated":{"line":1319,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1318,"column":0},"generated":{"line":1320,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1319,"column":0},"generated":{"line":1321,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1320,"column":0},"generated":{"line":1322,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1321,"column":0},"generated":{"line":1323,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1322,"column":0},"generated":{"line":1324,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1323,"column":0},"generated":{"line":1325,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1324,"column":0},"generated":{"line":1326,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1325,"column":0},"generated":{"line":1327,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1326,"column":0},"generated":{"line":1328,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1327,"column":0},"generated":{"line":1329,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1328,"column":0},"generated":{"line":1330,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1329,"column":0},"generated":{"line":1331,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1330,"column":0},"generated":{"line":1332,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1331,"column":0},"generated":{"line":1333,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1332,"column":0},"generated":{"line":1334,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1333,"column":0},"generated":{"line":1335,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1334,"column":0},"generated":{"line":1336,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1335,"column":0},"generated":{"line":1337,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1336,"column":0},"generated":{"line":1338,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1337,"column":0},"generated":{"line":1339,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1338,"column":0},"generated":{"line":1340,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1339,"column":0},"generated":{"line":1341,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1340,"column":0},"generated":{"line":1342,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1341,"column":0},"generated":{"line":1343,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1342,"column":0},"generated":{"line":1344,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1343,"column":0},"generated":{"line":1345,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1344,"column":0},"generated":{"line":1346,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1345,"column":0},"generated":{"line":1347,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1346,"column":0},"generated":{"line":1348,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1347,"column":0},"generated":{"line":1349,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1348,"column":0},"generated":{"line":1350,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1349,"column":0},"generated":{"line":1351,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1350,"column":0},"generated":{"line":1352,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1351,"column":0},"generated":{"line":1353,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1352,"column":0},"generated":{"line":1354,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1353,"column":0},"generated":{"line":1355,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1354,"column":0},"generated":{"line":1356,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1355,"column":0},"generated":{"line":1357,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1356,"column":0},"generated":{"line":1358,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1357,"column":0},"generated":{"line":1359,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1358,"column":0},"generated":{"line":1360,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1359,"column":0},"generated":{"line":1361,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1360,"column":0},"generated":{"line":1362,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1361,"column":0},"generated":{"line":1363,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1362,"column":0},"generated":{"line":1364,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1363,"column":0},"generated":{"line":1365,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1364,"column":0},"generated":{"line":1366,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1365,"column":0},"generated":{"line":1367,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1366,"column":0},"generated":{"line":1368,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1367,"column":0},"generated":{"line":1369,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1368,"column":0},"generated":{"line":1370,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1369,"column":0},"generated":{"line":1371,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1370,"column":0},"generated":{"line":1372,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1371,"column":0},"generated":{"line":1373,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1372,"column":0},"generated":{"line":1374,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1373,"column":0},"generated":{"line":1375,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1374,"column":0},"generated":{"line":1376,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1375,"column":0},"generated":{"line":1377,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1376,"column":0},"generated":{"line":1378,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1377,"column":0},"generated":{"line":1379,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1378,"column":0},"generated":{"line":1380,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1379,"column":0},"generated":{"line":1381,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1380,"column":0},"generated":{"line":1382,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1381,"column":0},"generated":{"line":1383,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1382,"column":0},"generated":{"line":1384,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1383,"column":0},"generated":{"line":1385,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1384,"column":0},"generated":{"line":1386,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1385,"column":0},"generated":{"line":1387,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1386,"column":0},"generated":{"line":1388,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1387,"column":0},"generated":{"line":1389,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1388,"column":0},"generated":{"line":1390,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1389,"column":0},"generated":{"line":1391,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1390,"column":0},"generated":{"line":1392,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1391,"column":0},"generated":{"line":1393,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1392,"column":0},"generated":{"line":1394,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1393,"column":0},"generated":{"line":1395,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1394,"column":0},"generated":{"line":1396,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1395,"column":0},"generated":{"line":1397,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1396,"column":0},"generated":{"line":1398,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1397,"column":0},"generated":{"line":1399,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1398,"column":0},"generated":{"line":1400,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1399,"column":0},"generated":{"line":1401,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1400,"column":0},"generated":{"line":1402,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1401,"column":0},"generated":{"line":1403,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1402,"column":0},"generated":{"line":1404,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1403,"column":0},"generated":{"line":1405,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1404,"column":0},"generated":{"line":1406,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1405,"column":0},"generated":{"line":1407,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1406,"column":0},"generated":{"line":1408,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1407,"column":0},"generated":{"line":1409,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1408,"column":0},"generated":{"line":1410,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1409,"column":0},"generated":{"line":1411,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1410,"column":0},"generated":{"line":1412,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1411,"column":0},"generated":{"line":1413,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1412,"column":0},"generated":{"line":1414,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1413,"column":0},"generated":{"line":1415,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1414,"column":0},"generated":{"line":1416,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1415,"column":0},"generated":{"line":1417,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1416,"column":0},"generated":{"line":1418,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1417,"column":0},"generated":{"line":1419,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1418,"column":0},"generated":{"line":1420,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1419,"column":0},"generated":{"line":1421,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1420,"column":0},"generated":{"line":1422,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1421,"column":0},"generated":{"line":1423,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1422,"column":0},"generated":{"line":1424,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1423,"column":0},"generated":{"line":1425,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1424,"column":0},"generated":{"line":1426,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1425,"column":0},"generated":{"line":1427,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1426,"column":0},"generated":{"line":1428,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1427,"column":0},"generated":{"line":1429,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1428,"column":0},"generated":{"line":1430,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1429,"column":0},"generated":{"line":1431,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1430,"column":0},"generated":{"line":1432,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1431,"column":0},"generated":{"line":1433,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1432,"column":0},"generated":{"line":1434,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1433,"column":0},"generated":{"line":1435,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1434,"column":0},"generated":{"line":1436,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1435,"column":0},"generated":{"line":1437,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1436,"column":0},"generated":{"line":1438,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1437,"column":0},"generated":{"line":1439,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1438,"column":0},"generated":{"line":1440,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1439,"column":0},"generated":{"line":1441,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1440,"column":0},"generated":{"line":1442,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1441,"column":0},"generated":{"line":1443,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1442,"column":0},"generated":{"line":1444,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1443,"column":0},"generated":{"line":1445,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1444,"column":0},"generated":{"line":1446,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1445,"column":0},"generated":{"line":1447,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1446,"column":0},"generated":{"line":1448,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1447,"column":0},"generated":{"line":1449,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1448,"column":0},"generated":{"line":1450,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1449,"column":0},"generated":{"line":1451,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1450,"column":0},"generated":{"line":1452,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1451,"column":0},"generated":{"line":1453,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1452,"column":0},"generated":{"line":1454,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1453,"column":0},"generated":{"line":1455,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1454,"column":0},"generated":{"line":1456,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1455,"column":0},"generated":{"line":1457,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1456,"column":0},"generated":{"line":1458,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1457,"column":0},"generated":{"line":1459,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1458,"column":0},"generated":{"line":1460,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1459,"column":0},"generated":{"line":1461,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1460,"column":0},"generated":{"line":1462,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1461,"column":0},"generated":{"line":1463,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1462,"column":0},"generated":{"line":1464,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1463,"column":0},"generated":{"line":1465,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1464,"column":0},"generated":{"line":1466,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1465,"column":0},"generated":{"line":1467,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1466,"column":0},"generated":{"line":1468,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1467,"column":0},"generated":{"line":1469,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1468,"column":0},"generated":{"line":1470,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1469,"column":0},"generated":{"line":1471,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1470,"column":0},"generated":{"line":1472,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1471,"column":0},"generated":{"line":1473,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1472,"column":0},"generated":{"line":1474,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1473,"column":0},"generated":{"line":1475,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1474,"column":0},"generated":{"line":1476,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1475,"column":0},"generated":{"line":1477,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1476,"column":0},"generated":{"line":1478,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1477,"column":0},"generated":{"line":1479,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1478,"column":0},"generated":{"line":1480,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1479,"column":0},"generated":{"line":1481,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1480,"column":0},"generated":{"line":1482,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1481,"column":0},"generated":{"line":1483,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1482,"column":0},"generated":{"line":1484,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1483,"column":0},"generated":{"line":1485,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1484,"column":0},"generated":{"line":1486,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1485,"column":0},"generated":{"line":1487,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1486,"column":0},"generated":{"line":1488,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1487,"column":0},"generated":{"line":1489,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1488,"column":0},"generated":{"line":1490,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1489,"column":0},"generated":{"line":1491,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1490,"column":0},"generated":{"line":1492,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1491,"column":0},"generated":{"line":1493,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1492,"column":0},"generated":{"line":1494,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1493,"column":0},"generated":{"line":1495,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1494,"column":0},"generated":{"line":1496,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1495,"column":0},"generated":{"line":1497,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1496,"column":0},"generated":{"line":1498,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1497,"column":0},"generated":{"line":1499,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1498,"column":0},"generated":{"line":1500,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1499,"column":0},"generated":{"line":1501,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1500,"column":0},"generated":{"line":1502,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1501,"column":0},"generated":{"line":1503,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1502,"column":0},"generated":{"line":1504,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1503,"column":0},"generated":{"line":1505,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1504,"column":0},"generated":{"line":1506,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1505,"column":0},"generated":{"line":1507,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1506,"column":0},"generated":{"line":1508,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1507,"column":0},"generated":{"line":1509,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1508,"column":0},"generated":{"line":1510,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1509,"column":0},"generated":{"line":1511,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1510,"column":0},"generated":{"line":1512,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1511,"column":0},"generated":{"line":1513,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1512,"column":0},"generated":{"line":1514,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1513,"column":0},"generated":{"line":1515,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1514,"column":0},"generated":{"line":1516,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1515,"column":0},"generated":{"line":1517,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1516,"column":0},"generated":{"line":1518,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1517,"column":0},"generated":{"line":1519,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1518,"column":0},"generated":{"line":1520,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1519,"column":0},"generated":{"line":1521,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1520,"column":0},"generated":{"line":1522,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1521,"column":0},"generated":{"line":1523,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1522,"column":0},"generated":{"line":1524,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1523,"column":0},"generated":{"line":1525,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1524,"column":0},"generated":{"line":1526,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1525,"column":0},"generated":{"line":1527,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1526,"column":0},"generated":{"line":1528,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1527,"column":0},"generated":{"line":1529,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1528,"column":0},"generated":{"line":1530,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1529,"column":0},"generated":{"line":1531,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1530,"column":0},"generated":{"line":1532,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1531,"column":0},"generated":{"line":1533,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1532,"column":0},"generated":{"line":1534,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1533,"column":0},"generated":{"line":1535,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1534,"column":0},"generated":{"line":1536,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1535,"column":0},"generated":{"line":1537,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1536,"column":0},"generated":{"line":1538,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1537,"column":0},"generated":{"line":1539,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1538,"column":0},"generated":{"line":1540,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1539,"column":0},"generated":{"line":1541,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1540,"column":0},"generated":{"line":1542,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1541,"column":0},"generated":{"line":1543,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1542,"column":0},"generated":{"line":1544,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1543,"column":0},"generated":{"line":1545,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1544,"column":0},"generated":{"line":1546,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1545,"column":0},"generated":{"line":1547,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1546,"column":0},"generated":{"line":1548,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1547,"column":0},"generated":{"line":1549,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1548,"column":0},"generated":{"line":1550,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1549,"column":0},"generated":{"line":1551,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1550,"column":0},"generated":{"line":1552,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1551,"column":0},"generated":{"line":1553,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1552,"column":0},"generated":{"line":1554,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1553,"column":0},"generated":{"line":1555,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1554,"column":0},"generated":{"line":1556,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1555,"column":0},"generated":{"line":1557,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1556,"column":0},"generated":{"line":1558,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1557,"column":0},"generated":{"line":1559,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1558,"column":0},"generated":{"line":1560,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1559,"column":0},"generated":{"line":1561,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1560,"column":0},"generated":{"line":1562,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1561,"column":0},"generated":{"line":1563,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1562,"column":0},"generated":{"line":1564,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1563,"column":0},"generated":{"line":1565,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1564,"column":0},"generated":{"line":1566,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1565,"column":0},"generated":{"line":1567,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1566,"column":0},"generated":{"line":1568,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1567,"column":0},"generated":{"line":1569,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1568,"column":0},"generated":{"line":1570,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1569,"column":0},"generated":{"line":1571,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1570,"column":0},"generated":{"line":1572,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1571,"column":0},"generated":{"line":1573,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1572,"column":0},"generated":{"line":1574,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1573,"column":0},"generated":{"line":1575,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1574,"column":0},"generated":{"line":1576,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1575,"column":0},"generated":{"line":1577,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1576,"column":0},"generated":{"line":1578,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1577,"column":0},"generated":{"line":1579,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1578,"column":0},"generated":{"line":1580,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1579,"column":0},"generated":{"line":1581,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1580,"column":0},"generated":{"line":1582,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1581,"column":0},"generated":{"line":1583,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1582,"column":0},"generated":{"line":1584,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1583,"column":0},"generated":{"line":1585,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1584,"column":0},"generated":{"line":1586,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1585,"column":0},"generated":{"line":1587,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1586,"column":0},"generated":{"line":1588,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1587,"column":0},"generated":{"line":1589,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1588,"column":0},"generated":{"line":1590,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1589,"column":0},"generated":{"line":1591,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1590,"column":0},"generated":{"line":1592,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1591,"column":0},"generated":{"line":1593,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1592,"column":0},"generated":{"line":1594,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1593,"column":0},"generated":{"line":1595,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1594,"column":0},"generated":{"line":1596,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1595,"column":0},"generated":{"line":1597,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1596,"column":0},"generated":{"line":1598,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1597,"column":0},"generated":{"line":1599,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1598,"column":0},"generated":{"line":1600,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1599,"column":0},"generated":{"line":1601,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1600,"column":0},"generated":{"line":1602,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1601,"column":0},"generated":{"line":1603,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1602,"column":0},"generated":{"line":1604,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1603,"column":0},"generated":{"line":1605,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1604,"column":0},"generated":{"line":1606,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1605,"column":0},"generated":{"line":1607,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1606,"column":0},"generated":{"line":1608,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1607,"column":0},"generated":{"line":1609,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1608,"column":0},"generated":{"line":1610,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1609,"column":0},"generated":{"line":1611,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1610,"column":0},"generated":{"line":1612,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1611,"column":0},"generated":{"line":1613,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1612,"column":0},"generated":{"line":1614,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1613,"column":0},"generated":{"line":1615,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1614,"column":0},"generated":{"line":1616,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1615,"column":0},"generated":{"line":1617,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1616,"column":0},"generated":{"line":1618,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1617,"column":0},"generated":{"line":1619,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1618,"column":0},"generated":{"line":1620,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1619,"column":0},"generated":{"line":1621,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1620,"column":0},"generated":{"line":1622,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1621,"column":0},"generated":{"line":1623,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1622,"column":0},"generated":{"line":1624,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1623,"column":0},"generated":{"line":1625,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1624,"column":0},"generated":{"line":1626,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1625,"column":0},"generated":{"line":1627,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1626,"column":0},"generated":{"line":1628,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1627,"column":0},"generated":{"line":1629,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1628,"column":0},"generated":{"line":1630,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1629,"column":0},"generated":{"line":1631,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1630,"column":0},"generated":{"line":1632,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1631,"column":0},"generated":{"line":1633,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1632,"column":0},"generated":{"line":1634,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1633,"column":0},"generated":{"line":1635,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1634,"column":0},"generated":{"line":1636,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1635,"column":0},"generated":{"line":1637,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1636,"column":0},"generated":{"line":1638,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1637,"column":0},"generated":{"line":1639,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1638,"column":0},"generated":{"line":1640,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1639,"column":0},"generated":{"line":1641,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1640,"column":0},"generated":{"line":1642,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1641,"column":0},"generated":{"line":1643,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1642,"column":0},"generated":{"line":1644,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1643,"column":0},"generated":{"line":1645,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1644,"column":0},"generated":{"line":1646,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1645,"column":0},"generated":{"line":1647,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1646,"column":0},"generated":{"line":1648,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1647,"column":0},"generated":{"line":1649,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1648,"column":0},"generated":{"line":1650,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1649,"column":0},"generated":{"line":1651,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1650,"column":0},"generated":{"line":1652,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1651,"column":0},"generated":{"line":1653,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1652,"column":0},"generated":{"line":1654,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1653,"column":0},"generated":{"line":1655,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1654,"column":0},"generated":{"line":1656,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1655,"column":0},"generated":{"line":1657,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1656,"column":0},"generated":{"line":1658,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1657,"column":0},"generated":{"line":1659,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1658,"column":0},"generated":{"line":1660,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1659,"column":0},"generated":{"line":1661,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1660,"column":0},"generated":{"line":1662,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1661,"column":0},"generated":{"line":1663,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1662,"column":0},"generated":{"line":1664,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1663,"column":0},"generated":{"line":1665,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1664,"column":0},"generated":{"line":1666,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1665,"column":0},"generated":{"line":1667,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1666,"column":0},"generated":{"line":1668,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1667,"column":0},"generated":{"line":1669,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1668,"column":0},"generated":{"line":1670,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1669,"column":0},"generated":{"line":1671,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1670,"column":0},"generated":{"line":1672,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1671,"column":0},"generated":{"line":1673,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1672,"column":0},"generated":{"line":1674,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1673,"column":0},"generated":{"line":1675,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1674,"column":0},"generated":{"line":1676,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1675,"column":0},"generated":{"line":1677,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1676,"column":0},"generated":{"line":1678,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1677,"column":0},"generated":{"line":1679,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1678,"column":0},"generated":{"line":1680,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1679,"column":0},"generated":{"line":1681,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1680,"column":0},"generated":{"line":1682,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1681,"column":0},"generated":{"line":1683,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1682,"column":0},"generated":{"line":1684,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1683,"column":0},"generated":{"line":1685,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1684,"column":0},"generated":{"line":1686,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1685,"column":0},"generated":{"line":1687,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1686,"column":0},"generated":{"line":1688,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1687,"column":0},"generated":{"line":1689,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1688,"column":0},"generated":{"line":1690,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1689,"column":0},"generated":{"line":1691,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1690,"column":0},"generated":{"line":1692,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1691,"column":0},"generated":{"line":1693,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1692,"column":0},"generated":{"line":1694,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1693,"column":0},"generated":{"line":1695,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1694,"column":0},"generated":{"line":1696,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1695,"column":0},"generated":{"line":1697,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1696,"column":0},"generated":{"line":1698,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1697,"column":0},"generated":{"line":1699,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1698,"column":0},"generated":{"line":1700,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1699,"column":0},"generated":{"line":1701,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1700,"column":0},"generated":{"line":1702,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1701,"column":0},"generated":{"line":1703,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1702,"column":0},"generated":{"line":1704,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1703,"column":0},"generated":{"line":1705,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1704,"column":0},"generated":{"line":1706,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1705,"column":0},"generated":{"line":1707,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1706,"column":0},"generated":{"line":1708,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1707,"column":0},"generated":{"line":1709,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1708,"column":0},"generated":{"line":1710,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1709,"column":0},"generated":{"line":1711,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1710,"column":0},"generated":{"line":1712,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1711,"column":0},"generated":{"line":1713,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1712,"column":0},"generated":{"line":1714,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1713,"column":0},"generated":{"line":1715,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1714,"column":0},"generated":{"line":1716,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1715,"column":0},"generated":{"line":1717,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1716,"column":0},"generated":{"line":1718,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1717,"column":0},"generated":{"line":1719,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1718,"column":0},"generated":{"line":1720,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1719,"column":0},"generated":{"line":1721,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1720,"column":0},"generated":{"line":1722,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1721,"column":0},"generated":{"line":1723,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1722,"column":0},"generated":{"line":1724,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1723,"column":0},"generated":{"line":1725,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1724,"column":0},"generated":{"line":1726,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1725,"column":0},"generated":{"line":1727,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1726,"column":0},"generated":{"line":1728,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1727,"column":0},"generated":{"line":1729,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1728,"column":0},"generated":{"line":1730,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1729,"column":0},"generated":{"line":1731,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1730,"column":0},"generated":{"line":1732,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1731,"column":0},"generated":{"line":1733,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1732,"column":0},"generated":{"line":1734,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1733,"column":0},"generated":{"line":1735,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1734,"column":0},"generated":{"line":1736,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1735,"column":0},"generated":{"line":1737,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1736,"column":0},"generated":{"line":1738,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1737,"column":0},"generated":{"line":1739,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1738,"column":0},"generated":{"line":1740,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1739,"column":0},"generated":{"line":1741,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1740,"column":0},"generated":{"line":1742,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1741,"column":0},"generated":{"line":1743,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1742,"column":0},"generated":{"line":1744,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1743,"column":0},"generated":{"line":1745,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1744,"column":0},"generated":{"line":1746,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1745,"column":0},"generated":{"line":1747,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1746,"column":0},"generated":{"line":1748,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1747,"column":0},"generated":{"line":1749,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1748,"column":0},"generated":{"line":1750,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1749,"column":0},"generated":{"line":1751,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1750,"column":0},"generated":{"line":1752,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1751,"column":0},"generated":{"line":1753,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1752,"column":0},"generated":{"line":1754,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1753,"column":0},"generated":{"line":1755,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1754,"column":0},"generated":{"line":1756,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1755,"column":0},"generated":{"line":1757,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1756,"column":0},"generated":{"line":1758,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1757,"column":0},"generated":{"line":1759,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1758,"column":0},"generated":{"line":1760,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1759,"column":0},"generated":{"line":1761,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1760,"column":0},"generated":{"line":1762,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1761,"column":0},"generated":{"line":1763,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1762,"column":0},"generated":{"line":1764,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1763,"column":0},"generated":{"line":1765,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1764,"column":0},"generated":{"line":1766,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1765,"column":0},"generated":{"line":1767,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1766,"column":0},"generated":{"line":1768,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1767,"column":0},"generated":{"line":1769,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1768,"column":0},"generated":{"line":1770,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1769,"column":0},"generated":{"line":1771,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1770,"column":0},"generated":{"line":1772,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1771,"column":0},"generated":{"line":1773,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1772,"column":0},"generated":{"line":1774,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1773,"column":0},"generated":{"line":1775,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1774,"column":0},"generated":{"line":1776,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1775,"column":0},"generated":{"line":1777,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1776,"column":0},"generated":{"line":1778,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1777,"column":0},"generated":{"line":1779,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1778,"column":0},"generated":{"line":1780,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1779,"column":0},"generated":{"line":1781,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1780,"column":0},"generated":{"line":1782,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1781,"column":0},"generated":{"line":1783,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1782,"column":0},"generated":{"line":1784,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1783,"column":0},"generated":{"line":1785,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1784,"column":0},"generated":{"line":1786,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1785,"column":0},"generated":{"line":1787,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1786,"column":0},"generated":{"line":1788,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1787,"column":0},"generated":{"line":1789,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1788,"column":0},"generated":{"line":1790,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1789,"column":0},"generated":{"line":1791,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1790,"column":0},"generated":{"line":1792,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1791,"column":0},"generated":{"line":1793,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1792,"column":0},"generated":{"line":1794,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1793,"column":0},"generated":{"line":1795,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1794,"column":0},"generated":{"line":1796,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1795,"column":0},"generated":{"line":1797,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1796,"column":0},"generated":{"line":1798,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1797,"column":0},"generated":{"line":1799,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1798,"column":0},"generated":{"line":1800,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1799,"column":0},"generated":{"line":1801,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1800,"column":0},"generated":{"line":1802,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1801,"column":0},"generated":{"line":1803,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1802,"column":0},"generated":{"line":1804,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1803,"column":0},"generated":{"line":1805,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1804,"column":0},"generated":{"line":1806,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1805,"column":0},"generated":{"line":1807,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1806,"column":0},"generated":{"line":1808,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1807,"column":0},"generated":{"line":1809,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1808,"column":0},"generated":{"line":1810,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1809,"column":0},"generated":{"line":1811,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1810,"column":0},"generated":{"line":1812,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1811,"column":0},"generated":{"line":1813,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1812,"column":0},"generated":{"line":1814,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1813,"column":0},"generated":{"line":1815,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1814,"column":0},"generated":{"line":1816,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1815,"column":0},"generated":{"line":1817,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1816,"column":0},"generated":{"line":1818,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1817,"column":0},"generated":{"line":1819,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1818,"column":0},"generated":{"line":1820,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1819,"column":0},"generated":{"line":1821,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1820,"column":0},"generated":{"line":1822,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1821,"column":0},"generated":{"line":1823,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1822,"column":0},"generated":{"line":1824,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1823,"column":0},"generated":{"line":1825,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1824,"column":0},"generated":{"line":1826,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1825,"column":0},"generated":{"line":1827,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1826,"column":0},"generated":{"line":1828,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1827,"column":0},"generated":{"line":1829,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1828,"column":0},"generated":{"line":1830,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1829,"column":0},"generated":{"line":1831,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1830,"column":0},"generated":{"line":1832,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1831,"column":0},"generated":{"line":1833,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1832,"column":0},"generated":{"line":1834,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1833,"column":0},"generated":{"line":1835,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1834,"column":0},"generated":{"line":1836,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1835,"column":0},"generated":{"line":1837,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1836,"column":0},"generated":{"line":1838,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1837,"column":0},"generated":{"line":1839,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1838,"column":0},"generated":{"line":1840,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1839,"column":0},"generated":{"line":1841,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1840,"column":0},"generated":{"line":1842,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1841,"column":0},"generated":{"line":1843,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1842,"column":0},"generated":{"line":1844,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1843,"column":0},"generated":{"line":1845,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1844,"column":0},"generated":{"line":1846,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1845,"column":0},"generated":{"line":1847,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1846,"column":0},"generated":{"line":1848,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1847,"column":0},"generated":{"line":1849,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1848,"column":0},"generated":{"line":1850,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1849,"column":0},"generated":{"line":1851,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1850,"column":0},"generated":{"line":1852,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1851,"column":0},"generated":{"line":1853,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1852,"column":0},"generated":{"line":1854,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1853,"column":0},"generated":{"line":1855,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1854,"column":0},"generated":{"line":1856,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1855,"column":0},"generated":{"line":1857,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1856,"column":0},"generated":{"line":1858,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1857,"column":0},"generated":{"line":1859,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1858,"column":0},"generated":{"line":1860,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1859,"column":0},"generated":{"line":1861,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1860,"column":0},"generated":{"line":1862,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1861,"column":0},"generated":{"line":1863,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1862,"column":0},"generated":{"line":1864,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1863,"column":0},"generated":{"line":1865,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1864,"column":0},"generated":{"line":1866,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1865,"column":0},"generated":{"line":1867,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1866,"column":0},"generated":{"line":1868,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1867,"column":0},"generated":{"line":1869,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1868,"column":0},"generated":{"line":1870,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1869,"column":0},"generated":{"line":1871,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1870,"column":0},"generated":{"line":1872,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1871,"column":0},"generated":{"line":1873,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1872,"column":0},"generated":{"line":1874,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1873,"column":0},"generated":{"line":1875,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1874,"column":0},"generated":{"line":1876,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1875,"column":0},"generated":{"line":1877,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1876,"column":0},"generated":{"line":1878,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1877,"column":0},"generated":{"line":1879,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1878,"column":0},"generated":{"line":1880,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1879,"column":0},"generated":{"line":1881,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1880,"column":0},"generated":{"line":1882,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1881,"column":0},"generated":{"line":1883,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1882,"column":0},"generated":{"line":1884,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1883,"column":0},"generated":{"line":1885,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1884,"column":0},"generated":{"line":1886,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1885,"column":0},"generated":{"line":1887,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1886,"column":0},"generated":{"line":1888,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1887,"column":0},"generated":{"line":1889,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1888,"column":0},"generated":{"line":1890,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1889,"column":0},"generated":{"line":1891,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1890,"column":0},"generated":{"line":1892,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1891,"column":0},"generated":{"line":1893,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1892,"column":0},"generated":{"line":1894,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1893,"column":0},"generated":{"line":1895,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1894,"column":0},"generated":{"line":1896,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1895,"column":0},"generated":{"line":1897,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1896,"column":0},"generated":{"line":1898,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1897,"column":0},"generated":{"line":1899,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1898,"column":0},"generated":{"line":1900,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1899,"column":0},"generated":{"line":1901,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1900,"column":0},"generated":{"line":1902,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1901,"column":0},"generated":{"line":1903,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1902,"column":0},"generated":{"line":1904,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1903,"column":0},"generated":{"line":1905,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1904,"column":0},"generated":{"line":1906,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1905,"column":0},"generated":{"line":1907,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1906,"column":0},"generated":{"line":1908,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1907,"column":0},"generated":{"line":1909,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1908,"column":0},"generated":{"line":1910,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1909,"column":0},"generated":{"line":1911,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1910,"column":0},"generated":{"line":1912,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1911,"column":0},"generated":{"line":1913,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1912,"column":0},"generated":{"line":1914,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1913,"column":0},"generated":{"line":1915,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1914,"column":0},"generated":{"line":1916,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1915,"column":0},"generated":{"line":1917,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1916,"column":0},"generated":{"line":1918,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1917,"column":0},"generated":{"line":1919,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1918,"column":0},"generated":{"line":1920,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1919,"column":0},"generated":{"line":1921,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1920,"column":0},"generated":{"line":1922,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1921,"column":0},"generated":{"line":1923,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1922,"column":0},"generated":{"line":1924,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1923,"column":0},"generated":{"line":1925,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1924,"column":0},"generated":{"line":1926,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1925,"column":0},"generated":{"line":1927,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1926,"column":0},"generated":{"line":1928,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1927,"column":0},"generated":{"line":1929,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1928,"column":0},"generated":{"line":1930,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1929,"column":0},"generated":{"line":1931,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1930,"column":0},"generated":{"line":1932,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1931,"column":0},"generated":{"line":1933,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1932,"column":0},"generated":{"line":1934,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1933,"column":0},"generated":{"line":1935,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1934,"column":0},"generated":{"line":1936,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1935,"column":0},"generated":{"line":1937,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1936,"column":0},"generated":{"line":1938,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1937,"column":0},"generated":{"line":1939,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1938,"column":0},"generated":{"line":1940,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1939,"column":0},"generated":{"line":1941,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1940,"column":0},"generated":{"line":1942,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1941,"column":0},"generated":{"line":1943,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1942,"column":0},"generated":{"line":1944,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1943,"column":0},"generated":{"line":1945,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1944,"column":0},"generated":{"line":1946,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1945,"column":0},"generated":{"line":1947,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1946,"column":0},"generated":{"line":1948,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1947,"column":0},"generated":{"line":1949,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1948,"column":0},"generated":{"line":1950,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1949,"column":0},"generated":{"line":1951,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1950,"column":0},"generated":{"line":1952,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1951,"column":0},"generated":{"line":1953,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1952,"column":0},"generated":{"line":1954,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1953,"column":0},"generated":{"line":1955,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1954,"column":0},"generated":{"line":1956,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1955,"column":0},"generated":{"line":1957,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1956,"column":0},"generated":{"line":1958,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1957,"column":0},"generated":{"line":1959,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1958,"column":0},"generated":{"line":1960,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1959,"column":0},"generated":{"line":1961,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1960,"column":0},"generated":{"line":1962,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1961,"column":0},"generated":{"line":1963,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1962,"column":0},"generated":{"line":1964,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1963,"column":0},"generated":{"line":1965,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1964,"column":0},"generated":{"line":1966,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1965,"column":0},"generated":{"line":1967,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1966,"column":0},"generated":{"line":1968,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1967,"column":0},"generated":{"line":1969,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1968,"column":0},"generated":{"line":1970,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1969,"column":0},"generated":{"line":1971,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1970,"column":0},"generated":{"line":1972,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1971,"column":0},"generated":{"line":1973,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1972,"column":0},"generated":{"line":1974,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1973,"column":0},"generated":{"line":1975,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1974,"column":0},"generated":{"line":1976,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1975,"column":0},"generated":{"line":1977,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1976,"column":0},"generated":{"line":1978,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1977,"column":0},"generated":{"line":1979,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1978,"column":0},"generated":{"line":1980,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1979,"column":0},"generated":{"line":1981,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1980,"column":0},"generated":{"line":1982,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1981,"column":0},"generated":{"line":1983,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1982,"column":0},"generated":{"line":1984,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1983,"column":0},"generated":{"line":1985,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1984,"column":0},"generated":{"line":1986,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1985,"column":0},"generated":{"line":1987,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1986,"column":0},"generated":{"line":1988,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1987,"column":0},"generated":{"line":1989,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1988,"column":0},"generated":{"line":1990,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1989,"column":0},"generated":{"line":1991,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1990,"column":0},"generated":{"line":1992,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1991,"column":0},"generated":{"line":1993,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1992,"column":0},"generated":{"line":1994,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1993,"column":0},"generated":{"line":1995,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1994,"column":0},"generated":{"line":1996,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1995,"column":0},"generated":{"line":1997,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1996,"column":0},"generated":{"line":1998,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1997,"column":0},"generated":{"line":1999,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1998,"column":0},"generated":{"line":2000,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":1999,"column":0},"generated":{"line":2001,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2000,"column":0},"generated":{"line":2002,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2001,"column":0},"generated":{"line":2003,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2002,"column":0},"generated":{"line":2004,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2003,"column":0},"generated":{"line":2005,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2004,"column":0},"generated":{"line":2006,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2005,"column":0},"generated":{"line":2007,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2006,"column":0},"generated":{"line":2008,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2007,"column":0},"generated":{"line":2009,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2008,"column":0},"generated":{"line":2010,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2009,"column":0},"generated":{"line":2011,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2010,"column":0},"generated":{"line":2012,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2011,"column":0},"generated":{"line":2013,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2012,"column":0},"generated":{"line":2014,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2013,"column":0},"generated":{"line":2015,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2014,"column":0},"generated":{"line":2016,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2015,"column":0},"generated":{"line":2017,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2016,"column":0},"generated":{"line":2018,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2017,"column":0},"generated":{"line":2019,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2018,"column":0},"generated":{"line":2020,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2019,"column":0},"generated":{"line":2021,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2020,"column":0},"generated":{"line":2022,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2021,"column":0},"generated":{"line":2023,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2022,"column":0},"generated":{"line":2024,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2023,"column":0},"generated":{"line":2025,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2024,"column":0},"generated":{"line":2026,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2025,"column":0},"generated":{"line":2027,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2026,"column":0},"generated":{"line":2028,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2027,"column":0},"generated":{"line":2029,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2028,"column":0},"generated":{"line":2030,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2029,"column":0},"generated":{"line":2031,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2030,"column":0},"generated":{"line":2032,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2031,"column":0},"generated":{"line":2033,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2032,"column":0},"generated":{"line":2034,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2033,"column":0},"generated":{"line":2035,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2034,"column":0},"generated":{"line":2036,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2035,"column":0},"generated":{"line":2037,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2036,"column":0},"generated":{"line":2038,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2037,"column":0},"generated":{"line":2039,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2038,"column":0},"generated":{"line":2040,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2039,"column":0},"generated":{"line":2041,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2040,"column":0},"generated":{"line":2042,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2041,"column":0},"generated":{"line":2043,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2042,"column":0},"generated":{"line":2044,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2043,"column":0},"generated":{"line":2045,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2044,"column":0},"generated":{"line":2046,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2045,"column":0},"generated":{"line":2047,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2046,"column":0},"generated":{"line":2048,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2047,"column":0},"generated":{"line":2049,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2048,"column":0},"generated":{"line":2050,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2049,"column":0},"generated":{"line":2051,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2050,"column":0},"generated":{"line":2052,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2051,"column":0},"generated":{"line":2053,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2052,"column":0},"generated":{"line":2054,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2053,"column":0},"generated":{"line":2055,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2054,"column":0},"generated":{"line":2056,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2055,"column":0},"generated":{"line":2057,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2056,"column":0},"generated":{"line":2058,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2057,"column":0},"generated":{"line":2059,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2058,"column":0},"generated":{"line":2060,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2059,"column":0},"generated":{"line":2061,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2060,"column":0},"generated":{"line":2062,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2061,"column":0},"generated":{"line":2063,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2062,"column":0},"generated":{"line":2064,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2063,"column":0},"generated":{"line":2065,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2064,"column":0},"generated":{"line":2066,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2065,"column":0},"generated":{"line":2067,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2066,"column":0},"generated":{"line":2068,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2067,"column":0},"generated":{"line":2069,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2068,"column":0},"generated":{"line":2070,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2069,"column":0},"generated":{"line":2071,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2070,"column":0},"generated":{"line":2072,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2071,"column":0},"generated":{"line":2073,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2072,"column":0},"generated":{"line":2074,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2073,"column":0},"generated":{"line":2075,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2074,"column":0},"generated":{"line":2076,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2075,"column":0},"generated":{"line":2077,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2076,"column":0},"generated":{"line":2078,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2077,"column":0},"generated":{"line":2079,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2078,"column":0},"generated":{"line":2080,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2079,"column":0},"generated":{"line":2081,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2080,"column":0},"generated":{"line":2082,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2081,"column":0},"generated":{"line":2083,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2082,"column":0},"generated":{"line":2084,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2083,"column":0},"generated":{"line":2085,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2084,"column":0},"generated":{"line":2086,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2085,"column":0},"generated":{"line":2087,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2086,"column":0},"generated":{"line":2088,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2087,"column":0},"generated":{"line":2089,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2088,"column":0},"generated":{"line":2090,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2089,"column":0},"generated":{"line":2091,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2090,"column":0},"generated":{"line":2092,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2091,"column":0},"generated":{"line":2093,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2092,"column":0},"generated":{"line":2094,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2093,"column":0},"generated":{"line":2095,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2094,"column":0},"generated":{"line":2096,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2095,"column":0},"generated":{"line":2097,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2096,"column":0},"generated":{"line":2098,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2097,"column":0},"generated":{"line":2099,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2098,"column":0},"generated":{"line":2100,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2099,"column":0},"generated":{"line":2101,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2100,"column":0},"generated":{"line":2102,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2101,"column":0},"generated":{"line":2103,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2102,"column":0},"generated":{"line":2104,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2103,"column":0},"generated":{"line":2105,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2104,"column":0},"generated":{"line":2106,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2105,"column":0},"generated":{"line":2107,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2106,"column":0},"generated":{"line":2108,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2107,"column":0},"generated":{"line":2109,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2108,"column":0},"generated":{"line":2110,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2109,"column":0},"generated":{"line":2111,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2110,"column":0},"generated":{"line":2112,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2111,"column":0},"generated":{"line":2113,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2112,"column":0},"generated":{"line":2114,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2113,"column":0},"generated":{"line":2115,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2114,"column":0},"generated":{"line":2116,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2115,"column":0},"generated":{"line":2117,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2116,"column":0},"generated":{"line":2118,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2117,"column":0},"generated":{"line":2119,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2118,"column":0},"generated":{"line":2120,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2119,"column":0},"generated":{"line":2121,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2120,"column":0},"generated":{"line":2122,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2121,"column":0},"generated":{"line":2123,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2122,"column":0},"generated":{"line":2124,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2123,"column":0},"generated":{"line":2125,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2124,"column":0},"generated":{"line":2126,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2125,"column":0},"generated":{"line":2127,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2126,"column":0},"generated":{"line":2128,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2127,"column":0},"generated":{"line":2129,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2128,"column":0},"generated":{"line":2130,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2129,"column":0},"generated":{"line":2131,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2130,"column":0},"generated":{"line":2132,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2131,"column":0},"generated":{"line":2133,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2132,"column":0},"generated":{"line":2134,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2133,"column":0},"generated":{"line":2135,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2134,"column":0},"generated":{"line":2136,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2135,"column":0},"generated":{"line":2137,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2136,"column":0},"generated":{"line":2138,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2137,"column":0},"generated":{"line":2139,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2138,"column":0},"generated":{"line":2140,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2139,"column":0},"generated":{"line":2141,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2140,"column":0},"generated":{"line":2142,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2141,"column":0},"generated":{"line":2143,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2142,"column":0},"generated":{"line":2144,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2143,"column":0},"generated":{"line":2145,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2144,"column":0},"generated":{"line":2146,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2145,"column":0},"generated":{"line":2147,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2146,"column":0},"generated":{"line":2148,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2147,"column":0},"generated":{"line":2149,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2148,"column":0},"generated":{"line":2150,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2149,"column":0},"generated":{"line":2151,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2150,"column":0},"generated":{"line":2152,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2151,"column":0},"generated":{"line":2153,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2152,"column":0},"generated":{"line":2154,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2153,"column":0},"generated":{"line":2155,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2154,"column":0},"generated":{"line":2156,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2155,"column":0},"generated":{"line":2157,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2156,"column":0},"generated":{"line":2158,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2157,"column":0},"generated":{"line":2159,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2158,"column":0},"generated":{"line":2160,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2159,"column":0},"generated":{"line":2161,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2160,"column":0},"generated":{"line":2162,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2161,"column":0},"generated":{"line":2163,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2162,"column":0},"generated":{"line":2164,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2163,"column":0},"generated":{"line":2165,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2164,"column":0},"generated":{"line":2166,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2165,"column":0},"generated":{"line":2167,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2166,"column":0},"generated":{"line":2168,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2167,"column":0},"generated":{"line":2169,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2168,"column":0},"generated":{"line":2170,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2169,"column":0},"generated":{"line":2171,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2170,"column":0},"generated":{"line":2172,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2171,"column":0},"generated":{"line":2173,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2172,"column":0},"generated":{"line":2174,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2173,"column":0},"generated":{"line":2175,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2174,"column":0},"generated":{"line":2176,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2175,"column":0},"generated":{"line":2177,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2176,"column":0},"generated":{"line":2178,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2177,"column":0},"generated":{"line":2179,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2178,"column":0},"generated":{"line":2180,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2179,"column":0},"generated":{"line":2181,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2180,"column":0},"generated":{"line":2182,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2181,"column":0},"generated":{"line":2183,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2182,"column":0},"generated":{"line":2184,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2183,"column":0},"generated":{"line":2185,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2184,"column":0},"generated":{"line":2186,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2185,"column":0},"generated":{"line":2187,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2186,"column":0},"generated":{"line":2188,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2187,"column":0},"generated":{"line":2189,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2188,"column":0},"generated":{"line":2190,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2189,"column":0},"generated":{"line":2191,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2190,"column":0},"generated":{"line":2192,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2191,"column":0},"generated":{"line":2193,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2192,"column":0},"generated":{"line":2194,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2193,"column":0},"generated":{"line":2195,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2194,"column":0},"generated":{"line":2196,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2195,"column":0},"generated":{"line":2197,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2196,"column":0},"generated":{"line":2198,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2197,"column":0},"generated":{"line":2199,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2198,"column":0},"generated":{"line":2200,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2199,"column":0},"generated":{"line":2201,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2200,"column":0},"generated":{"line":2202,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2201,"column":0},"generated":{"line":2203,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2202,"column":0},"generated":{"line":2204,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2203,"column":0},"generated":{"line":2205,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2204,"column":0},"generated":{"line":2206,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2205,"column":0},"generated":{"line":2207,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2206,"column":0},"generated":{"line":2208,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2207,"column":0},"generated":{"line":2209,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2208,"column":0},"generated":{"line":2210,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2209,"column":0},"generated":{"line":2211,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2210,"column":0},"generated":{"line":2212,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2211,"column":0},"generated":{"line":2213,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2212,"column":0},"generated":{"line":2214,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2213,"column":0},"generated":{"line":2215,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2214,"column":0},"generated":{"line":2216,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2215,"column":0},"generated":{"line":2217,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2216,"column":0},"generated":{"line":2218,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2217,"column":0},"generated":{"line":2219,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2218,"column":0},"generated":{"line":2220,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2219,"column":0},"generated":{"line":2221,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2220,"column":0},"generated":{"line":2222,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2221,"column":0},"generated":{"line":2223,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2222,"column":0},"generated":{"line":2224,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2223,"column":0},"generated":{"line":2225,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2224,"column":0},"generated":{"line":2226,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2225,"column":0},"generated":{"line":2227,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2226,"column":0},"generated":{"line":2228,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2227,"column":0},"generated":{"line":2229,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2228,"column":0},"generated":{"line":2230,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2229,"column":0},"generated":{"line":2231,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2230,"column":0},"generated":{"line":2232,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2231,"column":0},"generated":{"line":2233,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2232,"column":0},"generated":{"line":2234,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2233,"column":0},"generated":{"line":2235,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2234,"column":0},"generated":{"line":2236,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2235,"column":0},"generated":{"line":2237,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2236,"column":0},"generated":{"line":2238,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2237,"column":0},"generated":{"line":2239,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2238,"column":0},"generated":{"line":2240,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2239,"column":0},"generated":{"line":2241,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2240,"column":0},"generated":{"line":2242,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2241,"column":0},"generated":{"line":2243,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2242,"column":0},"generated":{"line":2244,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2243,"column":0},"generated":{"line":2245,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2244,"column":0},"generated":{"line":2246,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2245,"column":0},"generated":{"line":2247,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2246,"column":0},"generated":{"line":2248,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2247,"column":0},"generated":{"line":2249,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2248,"column":0},"generated":{"line":2250,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2249,"column":0},"generated":{"line":2251,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2250,"column":0},"generated":{"line":2252,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2251,"column":0},"generated":{"line":2253,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2252,"column":0},"generated":{"line":2254,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2253,"column":0},"generated":{"line":2255,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2254,"column":0},"generated":{"line":2256,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2255,"column":0},"generated":{"line":2257,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2256,"column":0},"generated":{"line":2258,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2257,"column":0},"generated":{"line":2259,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2258,"column":0},"generated":{"line":2260,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2259,"column":0},"generated":{"line":2261,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2260,"column":0},"generated":{"line":2262,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2261,"column":0},"generated":{"line":2263,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2262,"column":0},"generated":{"line":2264,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2263,"column":0},"generated":{"line":2265,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2264,"column":0},"generated":{"line":2266,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2265,"column":0},"generated":{"line":2267,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2266,"column":0},"generated":{"line":2268,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2267,"column":0},"generated":{"line":2269,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2268,"column":0},"generated":{"line":2270,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2269,"column":0},"generated":{"line":2271,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2270,"column":0},"generated":{"line":2272,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2271,"column":0},"generated":{"line":2273,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2272,"column":0},"generated":{"line":2274,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2273,"column":0},"generated":{"line":2275,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2274,"column":0},"generated":{"line":2276,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2275,"column":0},"generated":{"line":2277,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2276,"column":0},"generated":{"line":2278,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2277,"column":0},"generated":{"line":2279,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2278,"column":0},"generated":{"line":2280,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2279,"column":0},"generated":{"line":2281,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2280,"column":0},"generated":{"line":2282,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2281,"column":0},"generated":{"line":2283,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2282,"column":0},"generated":{"line":2284,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2283,"column":0},"generated":{"line":2285,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2284,"column":0},"generated":{"line":2286,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2285,"column":0},"generated":{"line":2287,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2286,"column":0},"generated":{"line":2288,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2287,"column":0},"generated":{"line":2289,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2288,"column":0},"generated":{"line":2290,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2289,"column":0},"generated":{"line":2291,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2290,"column":0},"generated":{"line":2292,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2291,"column":0},"generated":{"line":2293,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2292,"column":0},"generated":{"line":2294,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2293,"column":0},"generated":{"line":2295,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2294,"column":0},"generated":{"line":2296,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2295,"column":0},"generated":{"line":2297,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2296,"column":0},"generated":{"line":2298,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2297,"column":0},"generated":{"line":2299,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2298,"column":0},"generated":{"line":2300,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2299,"column":0},"generated":{"line":2301,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2300,"column":0},"generated":{"line":2302,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2301,"column":0},"generated":{"line":2303,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2302,"column":0},"generated":{"line":2304,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2303,"column":0},"generated":{"line":2305,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2304,"column":0},"generated":{"line":2306,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2305,"column":0},"generated":{"line":2307,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2306,"column":0},"generated":{"line":2308,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2307,"column":0},"generated":{"line":2309,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2308,"column":0},"generated":{"line":2310,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2309,"column":0},"generated":{"line":2311,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2310,"column":0},"generated":{"line":2312,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2311,"column":0},"generated":{"line":2313,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2312,"column":0},"generated":{"line":2314,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2313,"column":0},"generated":{"line":2315,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2314,"column":0},"generated":{"line":2316,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2315,"column":0},"generated":{"line":2317,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2316,"column":0},"generated":{"line":2318,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2317,"column":0},"generated":{"line":2319,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2318,"column":0},"generated":{"line":2320,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2319,"column":0},"generated":{"line":2321,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2320,"column":0},"generated":{"line":2322,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2321,"column":0},"generated":{"line":2323,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2322,"column":0},"generated":{"line":2324,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2323,"column":0},"generated":{"line":2325,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2324,"column":0},"generated":{"line":2326,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2325,"column":0},"generated":{"line":2327,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2326,"column":0},"generated":{"line":2328,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2327,"column":0},"generated":{"line":2329,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2328,"column":0},"generated":{"line":2330,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2329,"column":0},"generated":{"line":2331,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2330,"column":0},"generated":{"line":2332,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2331,"column":0},"generated":{"line":2333,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2332,"column":0},"generated":{"line":2334,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2333,"column":0},"generated":{"line":2335,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2334,"column":0},"generated":{"line":2336,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2335,"column":0},"generated":{"line":2337,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2336,"column":0},"generated":{"line":2338,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2337,"column":0},"generated":{"line":2339,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2338,"column":0},"generated":{"line":2340,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2339,"column":0},"generated":{"line":2341,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2340,"column":0},"generated":{"line":2342,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2341,"column":0},"generated":{"line":2343,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2342,"column":0},"generated":{"line":2344,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2343,"column":0},"generated":{"line":2345,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2344,"column":0},"generated":{"line":2346,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2345,"column":0},"generated":{"line":2347,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2346,"column":0},"generated":{"line":2348,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2347,"column":0},"generated":{"line":2349,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2348,"column":0},"generated":{"line":2350,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2349,"column":0},"generated":{"line":2351,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2350,"column":0},"generated":{"line":2352,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2351,"column":0},"generated":{"line":2353,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2352,"column":0},"generated":{"line":2354,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2353,"column":0},"generated":{"line":2355,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2354,"column":0},"generated":{"line":2356,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2355,"column":0},"generated":{"line":2357,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2356,"column":0},"generated":{"line":2358,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2357,"column":0},"generated":{"line":2359,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2358,"column":0},"generated":{"line":2360,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2359,"column":0},"generated":{"line":2361,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2360,"column":0},"generated":{"line":2362,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2361,"column":0},"generated":{"line":2363,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2362,"column":0},"generated":{"line":2364,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2363,"column":0},"generated":{"line":2365,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2364,"column":0},"generated":{"line":2366,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2365,"column":0},"generated":{"line":2367,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2366,"column":0},"generated":{"line":2368,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2367,"column":0},"generated":{"line":2369,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2368,"column":0},"generated":{"line":2370,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2369,"column":0},"generated":{"line":2371,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2370,"column":0},"generated":{"line":2372,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2371,"column":0},"generated":{"line":2373,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2372,"column":0},"generated":{"line":2374,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2373,"column":0},"generated":{"line":2375,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2374,"column":0},"generated":{"line":2376,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2375,"column":0},"generated":{"line":2377,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2376,"column":0},"generated":{"line":2378,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2377,"column":0},"generated":{"line":2379,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2378,"column":0},"generated":{"line":2380,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2379,"column":0},"generated":{"line":2381,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2380,"column":0},"generated":{"line":2382,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2381,"column":0},"generated":{"line":2383,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2382,"column":0},"generated":{"line":2384,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2383,"column":0},"generated":{"line":2385,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2384,"column":0},"generated":{"line":2386,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2385,"column":0},"generated":{"line":2387,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2386,"column":0},"generated":{"line":2388,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2387,"column":0},"generated":{"line":2389,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2388,"column":0},"generated":{"line":2390,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2389,"column":0},"generated":{"line":2391,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2390,"column":0},"generated":{"line":2392,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2391,"column":0},"generated":{"line":2393,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2392,"column":0},"generated":{"line":2394,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2393,"column":0},"generated":{"line":2395,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2394,"column":0},"generated":{"line":2396,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2395,"column":0},"generated":{"line":2397,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2396,"column":0},"generated":{"line":2398,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2397,"column":0},"generated":{"line":2399,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2398,"column":0},"generated":{"line":2400,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2399,"column":0},"generated":{"line":2401,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2400,"column":0},"generated":{"line":2402,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2401,"column":0},"generated":{"line":2403,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2402,"column":0},"generated":{"line":2404,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2403,"column":0},"generated":{"line":2405,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2404,"column":0},"generated":{"line":2406,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2405,"column":0},"generated":{"line":2407,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2406,"column":0},"generated":{"line":2408,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2407,"column":0},"generated":{"line":2409,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2408,"column":0},"generated":{"line":2410,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2409,"column":0},"generated":{"line":2411,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2410,"column":0},"generated":{"line":2412,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2411,"column":0},"generated":{"line":2413,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2412,"column":0},"generated":{"line":2414,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2413,"column":0},"generated":{"line":2415,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2414,"column":0},"generated":{"line":2416,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2415,"column":0},"generated":{"line":2417,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2416,"column":0},"generated":{"line":2418,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2417,"column":0},"generated":{"line":2419,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2418,"column":0},"generated":{"line":2420,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2419,"column":0},"generated":{"line":2421,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2420,"column":0},"generated":{"line":2422,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2421,"column":0},"generated":{"line":2423,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2422,"column":0},"generated":{"line":2424,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2423,"column":0},"generated":{"line":2425,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2424,"column":0},"generated":{"line":2426,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2425,"column":0},"generated":{"line":2427,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2426,"column":0},"generated":{"line":2428,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2427,"column":0},"generated":{"line":2429,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2428,"column":0},"generated":{"line":2430,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2429,"column":0},"generated":{"line":2431,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2430,"column":0},"generated":{"line":2432,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2431,"column":0},"generated":{"line":2433,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2432,"column":0},"generated":{"line":2434,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2433,"column":0},"generated":{"line":2435,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2434,"column":0},"generated":{"line":2436,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2435,"column":0},"generated":{"line":2437,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2436,"column":0},"generated":{"line":2438,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2437,"column":0},"generated":{"line":2439,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2438,"column":0},"generated":{"line":2440,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2439,"column":0},"generated":{"line":2441,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2440,"column":0},"generated":{"line":2442,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2441,"column":0},"generated":{"line":2443,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2442,"column":0},"generated":{"line":2444,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2443,"column":0},"generated":{"line":2445,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2444,"column":0},"generated":{"line":2446,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2445,"column":0},"generated":{"line":2447,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2446,"column":0},"generated":{"line":2448,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2447,"column":0},"generated":{"line":2449,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2448,"column":0},"generated":{"line":2450,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2449,"column":0},"generated":{"line":2451,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2450,"column":0},"generated":{"line":2452,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2451,"column":0},"generated":{"line":2453,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2452,"column":0},"generated":{"line":2454,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2453,"column":0},"generated":{"line":2455,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2454,"column":0},"generated":{"line":2456,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2455,"column":0},"generated":{"line":2457,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2456,"column":0},"generated":{"line":2458,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2457,"column":0},"generated":{"line":2459,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2458,"column":0},"generated":{"line":2460,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2459,"column":0},"generated":{"line":2461,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2460,"column":0},"generated":{"line":2462,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2461,"column":0},"generated":{"line":2463,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2462,"column":0},"generated":{"line":2464,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2463,"column":0},"generated":{"line":2465,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2464,"column":0},"generated":{"line":2466,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2465,"column":0},"generated":{"line":2467,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2466,"column":0},"generated":{"line":2468,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2467,"column":0},"generated":{"line":2469,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2468,"column":0},"generated":{"line":2470,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2469,"column":0},"generated":{"line":2471,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2470,"column":0},"generated":{"line":2472,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2471,"column":0},"generated":{"line":2473,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2472,"column":0},"generated":{"line":2474,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2473,"column":0},"generated":{"line":2475,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2474,"column":0},"generated":{"line":2476,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2475,"column":0},"generated":{"line":2477,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2476,"column":0},"generated":{"line":2478,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2477,"column":0},"generated":{"line":2479,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2478,"column":0},"generated":{"line":2480,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2479,"column":0},"generated":{"line":2481,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2480,"column":0},"generated":{"line":2482,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2481,"column":0},"generated":{"line":2483,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2482,"column":0},"generated":{"line":2484,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2483,"column":0},"generated":{"line":2485,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2484,"column":0},"generated":{"line":2486,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2485,"column":0},"generated":{"line":2487,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2486,"column":0},"generated":{"line":2488,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2487,"column":0},"generated":{"line":2489,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2488,"column":0},"generated":{"line":2490,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2489,"column":0},"generated":{"line":2491,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2490,"column":0},"generated":{"line":2492,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2491,"column":0},"generated":{"line":2493,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2492,"column":0},"generated":{"line":2494,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2493,"column":0},"generated":{"line":2495,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2494,"column":0},"generated":{"line":2496,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2495,"column":0},"generated":{"line":2497,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2496,"column":0},"generated":{"line":2498,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2497,"column":0},"generated":{"line":2499,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2498,"column":0},"generated":{"line":2500,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2499,"column":0},"generated":{"line":2501,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2500,"column":0},"generated":{"line":2502,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2501,"column":0},"generated":{"line":2503,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2502,"column":0},"generated":{"line":2504,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2503,"column":0},"generated":{"line":2505,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2504,"column":0},"generated":{"line":2506,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2505,"column":0},"generated":{"line":2507,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2506,"column":0},"generated":{"line":2508,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2507,"column":0},"generated":{"line":2509,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2508,"column":0},"generated":{"line":2510,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2509,"column":0},"generated":{"line":2511,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2510,"column":0},"generated":{"line":2512,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2511,"column":0},"generated":{"line":2513,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2512,"column":0},"generated":{"line":2514,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2513,"column":0},"generated":{"line":2515,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2514,"column":0},"generated":{"line":2516,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2515,"column":0},"generated":{"line":2517,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2516,"column":0},"generated":{"line":2518,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2517,"column":0},"generated":{"line":2519,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2518,"column":0},"generated":{"line":2520,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2519,"column":0},"generated":{"line":2521,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2520,"column":0},"generated":{"line":2522,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2521,"column":0},"generated":{"line":2523,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2522,"column":0},"generated":{"line":2524,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2523,"column":0},"generated":{"line":2525,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2524,"column":0},"generated":{"line":2526,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2525,"column":0},"generated":{"line":2527,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2526,"column":0},"generated":{"line":2528,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2527,"column":0},"generated":{"line":2529,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2528,"column":0},"generated":{"line":2530,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2529,"column":0},"generated":{"line":2531,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2530,"column":0},"generated":{"line":2532,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2531,"column":0},"generated":{"line":2533,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2532,"column":0},"generated":{"line":2534,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2533,"column":0},"generated":{"line":2535,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2534,"column":0},"generated":{"line":2536,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2535,"column":0},"generated":{"line":2537,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2536,"column":0},"generated":{"line":2538,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2537,"column":0},"generated":{"line":2539,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2538,"column":0},"generated":{"line":2540,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2539,"column":0},"generated":{"line":2541,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2540,"column":0},"generated":{"line":2542,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2541,"column":0},"generated":{"line":2543,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2542,"column":0},"generated":{"line":2544,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2543,"column":0},"generated":{"line":2545,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2544,"column":0},"generated":{"line":2546,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2545,"column":0},"generated":{"line":2547,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2546,"column":0},"generated":{"line":2548,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2547,"column":0},"generated":{"line":2549,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2548,"column":0},"generated":{"line":2550,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2549,"column":0},"generated":{"line":2551,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2550,"column":0},"generated":{"line":2552,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2551,"column":0},"generated":{"line":2553,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2552,"column":0},"generated":{"line":2554,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2553,"column":0},"generated":{"line":2555,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2554,"column":0},"generated":{"line":2556,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2555,"column":0},"generated":{"line":2557,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2556,"column":0},"generated":{"line":2558,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2557,"column":0},"generated":{"line":2559,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2558,"column":0},"generated":{"line":2560,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2559,"column":0},"generated":{"line":2561,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2560,"column":0},"generated":{"line":2562,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2561,"column":0},"generated":{"line":2563,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2562,"column":0},"generated":{"line":2564,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2563,"column":0},"generated":{"line":2565,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2564,"column":0},"generated":{"line":2566,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2565,"column":0},"generated":{"line":2567,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2566,"column":0},"generated":{"line":2568,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2567,"column":0},"generated":{"line":2569,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2568,"column":0},"generated":{"line":2570,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2569,"column":0},"generated":{"line":2571,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2570,"column":0},"generated":{"line":2572,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2571,"column":0},"generated":{"line":2573,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2572,"column":0},"generated":{"line":2574,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2573,"column":0},"generated":{"line":2575,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2574,"column":0},"generated":{"line":2576,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2575,"column":0},"generated":{"line":2577,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2576,"column":0},"generated":{"line":2578,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2577,"column":0},"generated":{"line":2579,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2578,"column":0},"generated":{"line":2580,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2579,"column":0},"generated":{"line":2581,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2580,"column":0},"generated":{"line":2582,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2581,"column":0},"generated":{"line":2583,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2582,"column":0},"generated":{"line":2584,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2583,"column":0},"generated":{"line":2585,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2584,"column":0},"generated":{"line":2586,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2585,"column":0},"generated":{"line":2587,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2586,"column":0},"generated":{"line":2588,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2587,"column":0},"generated":{"line":2589,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2588,"column":0},"generated":{"line":2590,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2589,"column":0},"generated":{"line":2591,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2590,"column":0},"generated":{"line":2592,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2591,"column":0},"generated":{"line":2593,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2592,"column":0},"generated":{"line":2594,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2593,"column":0},"generated":{"line":2595,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2594,"column":0},"generated":{"line":2596,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2595,"column":0},"generated":{"line":2597,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2596,"column":0},"generated":{"line":2598,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2597,"column":0},"generated":{"line":2599,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2598,"column":0},"generated":{"line":2600,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2599,"column":0},"generated":{"line":2601,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2600,"column":0},"generated":{"line":2602,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2601,"column":0},"generated":{"line":2603,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2602,"column":0},"generated":{"line":2604,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2603,"column":0},"generated":{"line":2605,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2604,"column":0},"generated":{"line":2606,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2605,"column":0},"generated":{"line":2607,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2606,"column":0},"generated":{"line":2608,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2607,"column":0},"generated":{"line":2609,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2608,"column":0},"generated":{"line":2610,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2609,"column":0},"generated":{"line":2611,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2610,"column":0},"generated":{"line":2612,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2611,"column":0},"generated":{"line":2613,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2612,"column":0},"generated":{"line":2614,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2613,"column":0},"generated":{"line":2615,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2614,"column":0},"generated":{"line":2616,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2615,"column":0},"generated":{"line":2617,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2616,"column":0},"generated":{"line":2618,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2617,"column":0},"generated":{"line":2619,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2618,"column":0},"generated":{"line":2620,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2619,"column":0},"generated":{"line":2621,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2620,"column":0},"generated":{"line":2622,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2621,"column":0},"generated":{"line":2623,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2622,"column":0},"generated":{"line":2624,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2623,"column":0},"generated":{"line":2625,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2624,"column":0},"generated":{"line":2626,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2625,"column":0},"generated":{"line":2627,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2626,"column":0},"generated":{"line":2628,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2627,"column":0},"generated":{"line":2629,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2628,"column":0},"generated":{"line":2630,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2629,"column":0},"generated":{"line":2631,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2630,"column":0},"generated":{"line":2632,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2631,"column":0},"generated":{"line":2633,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2632,"column":0},"generated":{"line":2634,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2633,"column":0},"generated":{"line":2635,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2634,"column":0},"generated":{"line":2636,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2635,"column":0},"generated":{"line":2637,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2636,"column":0},"generated":{"line":2638,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2637,"column":0},"generated":{"line":2639,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2638,"column":0},"generated":{"line":2640,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2639,"column":0},"generated":{"line":2641,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2640,"column":0},"generated":{"line":2642,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2641,"column":0},"generated":{"line":2643,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2642,"column":0},"generated":{"line":2644,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2643,"column":0},"generated":{"line":2645,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2644,"column":0},"generated":{"line":2646,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2645,"column":0},"generated":{"line":2647,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2646,"column":0},"generated":{"line":2648,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2647,"column":0},"generated":{"line":2649,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2648,"column":0},"generated":{"line":2650,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2649,"column":0},"generated":{"line":2651,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2650,"column":0},"generated":{"line":2652,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2651,"column":0},"generated":{"line":2653,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2652,"column":0},"generated":{"line":2654,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2653,"column":0},"generated":{"line":2655,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2654,"column":0},"generated":{"line":2656,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2655,"column":0},"generated":{"line":2657,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2656,"column":0},"generated":{"line":2658,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2657,"column":0},"generated":{"line":2659,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2658,"column":0},"generated":{"line":2660,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2659,"column":0},"generated":{"line":2661,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2660,"column":0},"generated":{"line":2662,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2661,"column":0},"generated":{"line":2663,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2662,"column":0},"generated":{"line":2664,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2663,"column":0},"generated":{"line":2665,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2664,"column":0},"generated":{"line":2666,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2665,"column":0},"generated":{"line":2667,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2666,"column":0},"generated":{"line":2668,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2667,"column":0},"generated":{"line":2669,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2668,"column":0},"generated":{"line":2670,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2669,"column":0},"generated":{"line":2671,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2670,"column":0},"generated":{"line":2672,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2671,"column":0},"generated":{"line":2673,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2672,"column":0},"generated":{"line":2674,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2673,"column":0},"generated":{"line":2675,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2674,"column":0},"generated":{"line":2676,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2675,"column":0},"generated":{"line":2677,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2676,"column":0},"generated":{"line":2678,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2677,"column":0},"generated":{"line":2679,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2678,"column":0},"generated":{"line":2680,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2679,"column":0},"generated":{"line":2681,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2680,"column":0},"generated":{"line":2682,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2681,"column":0},"generated":{"line":2683,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2682,"column":0},"generated":{"line":2684,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2683,"column":0},"generated":{"line":2685,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2684,"column":0},"generated":{"line":2686,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2685,"column":0},"generated":{"line":2687,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2686,"column":0},"generated":{"line":2688,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2687,"column":0},"generated":{"line":2689,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2688,"column":0},"generated":{"line":2690,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2689,"column":0},"generated":{"line":2691,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2690,"column":0},"generated":{"line":2692,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2691,"column":0},"generated":{"line":2693,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2692,"column":0},"generated":{"line":2694,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2693,"column":0},"generated":{"line":2695,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2694,"column":0},"generated":{"line":2696,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2695,"column":0},"generated":{"line":2697,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2696,"column":0},"generated":{"line":2698,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2697,"column":0},"generated":{"line":2699,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2698,"column":0},"generated":{"line":2700,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2699,"column":0},"generated":{"line":2701,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2700,"column":0},"generated":{"line":2702,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2701,"column":0},"generated":{"line":2703,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2702,"column":0},"generated":{"line":2704,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2703,"column":0},"generated":{"line":2705,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2704,"column":0},"generated":{"line":2706,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2705,"column":0},"generated":{"line":2707,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2706,"column":0},"generated":{"line":2708,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2707,"column":0},"generated":{"line":2709,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2708,"column":0},"generated":{"line":2710,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2709,"column":0},"generated":{"line":2711,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2710,"column":0},"generated":{"line":2712,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2711,"column":0},"generated":{"line":2713,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2712,"column":0},"generated":{"line":2714,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2713,"column":0},"generated":{"line":2715,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2714,"column":0},"generated":{"line":2716,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2715,"column":0},"generated":{"line":2717,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2716,"column":0},"generated":{"line":2718,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2717,"column":0},"generated":{"line":2719,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2718,"column":0},"generated":{"line":2720,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2719,"column":0},"generated":{"line":2721,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2720,"column":0},"generated":{"line":2722,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2721,"column":0},"generated":{"line":2723,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2722,"column":0},"generated":{"line":2724,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2723,"column":0},"generated":{"line":2725,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2724,"column":0},"generated":{"line":2726,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2725,"column":0},"generated":{"line":2727,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2726,"column":0},"generated":{"line":2728,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2727,"column":0},"generated":{"line":2729,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2728,"column":0},"generated":{"line":2730,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2729,"column":0},"generated":{"line":2731,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2730,"column":0},"generated":{"line":2732,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2731,"column":0},"generated":{"line":2733,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2732,"column":0},"generated":{"line":2734,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2733,"column":0},"generated":{"line":2735,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2734,"column":0},"generated":{"line":2736,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2735,"column":0},"generated":{"line":2737,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2736,"column":0},"generated":{"line":2738,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2737,"column":0},"generated":{"line":2739,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2738,"column":0},"generated":{"line":2740,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2739,"column":0},"generated":{"line":2741,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2740,"column":0},"generated":{"line":2742,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2741,"column":0},"generated":{"line":2743,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2742,"column":0},"generated":{"line":2744,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2743,"column":0},"generated":{"line":2745,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2744,"column":0},"generated":{"line":2746,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2745,"column":0},"generated":{"line":2747,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2746,"column":0},"generated":{"line":2748,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2747,"column":0},"generated":{"line":2749,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2748,"column":0},"generated":{"line":2750,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2749,"column":0},"generated":{"line":2751,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2750,"column":0},"generated":{"line":2752,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2751,"column":0},"generated":{"line":2753,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2752,"column":0},"generated":{"line":2754,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2753,"column":0},"generated":{"line":2755,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2754,"column":0},"generated":{"line":2756,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2755,"column":0},"generated":{"line":2757,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2756,"column":0},"generated":{"line":2758,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2757,"column":0},"generated":{"line":2759,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2758,"column":0},"generated":{"line":2760,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2759,"column":0},"generated":{"line":2761,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2760,"column":0},"generated":{"line":2762,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2761,"column":0},"generated":{"line":2763,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2762,"column":0},"generated":{"line":2764,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2763,"column":0},"generated":{"line":2765,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2764,"column":0},"generated":{"line":2766,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2765,"column":0},"generated":{"line":2767,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2766,"column":0},"generated":{"line":2768,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2767,"column":0},"generated":{"line":2769,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2768,"column":0},"generated":{"line":2770,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2769,"column":0},"generated":{"line":2771,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2770,"column":0},"generated":{"line":2772,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2771,"column":0},"generated":{"line":2773,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2772,"column":0},"generated":{"line":2774,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2773,"column":0},"generated":{"line":2775,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2774,"column":0},"generated":{"line":2776,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2775,"column":0},"generated":{"line":2777,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2776,"column":0},"generated":{"line":2778,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2777,"column":0},"generated":{"line":2779,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2778,"column":0},"generated":{"line":2780,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2779,"column":0},"generated":{"line":2781,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2780,"column":0},"generated":{"line":2782,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2781,"column":0},"generated":{"line":2783,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2782,"column":0},"generated":{"line":2784,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2783,"column":0},"generated":{"line":2785,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2784,"column":0},"generated":{"line":2786,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2785,"column":0},"generated":{"line":2787,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2786,"column":0},"generated":{"line":2788,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2787,"column":0},"generated":{"line":2789,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2788,"column":0},"generated":{"line":2790,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2789,"column":0},"generated":{"line":2791,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2790,"column":0},"generated":{"line":2792,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2791,"column":0},"generated":{"line":2793,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2792,"column":0},"generated":{"line":2794,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2793,"column":0},"generated":{"line":2795,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2794,"column":0},"generated":{"line":2796,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2795,"column":0},"generated":{"line":2797,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2796,"column":0},"generated":{"line":2798,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2797,"column":0},"generated":{"line":2799,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2798,"column":0},"generated":{"line":2800,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2799,"column":0},"generated":{"line":2801,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2800,"column":0},"generated":{"line":2802,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2801,"column":0},"generated":{"line":2803,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2802,"column":0},"generated":{"line":2804,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2803,"column":0},"generated":{"line":2805,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2804,"column":0},"generated":{"line":2806,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2805,"column":0},"generated":{"line":2807,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2806,"column":0},"generated":{"line":2808,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2807,"column":0},"generated":{"line":2809,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2808,"column":0},"generated":{"line":2810,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2809,"column":0},"generated":{"line":2811,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2810,"column":0},"generated":{"line":2812,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2811,"column":0},"generated":{"line":2813,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2812,"column":0},"generated":{"line":2814,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2813,"column":0},"generated":{"line":2815,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2814,"column":0},"generated":{"line":2816,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2815,"column":0},"generated":{"line":2817,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2816,"column":0},"generated":{"line":2818,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2817,"column":0},"generated":{"line":2819,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2818,"column":0},"generated":{"line":2820,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2819,"column":0},"generated":{"line":2821,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2820,"column":0},"generated":{"line":2822,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2821,"column":0},"generated":{"line":2823,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2822,"column":0},"generated":{"line":2824,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2823,"column":0},"generated":{"line":2825,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2824,"column":0},"generated":{"line":2826,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2825,"column":0},"generated":{"line":2827,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2826,"column":0},"generated":{"line":2828,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2827,"column":0},"generated":{"line":2829,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2828,"column":0},"generated":{"line":2830,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2829,"column":0},"generated":{"line":2831,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2830,"column":0},"generated":{"line":2832,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2831,"column":0},"generated":{"line":2833,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2832,"column":0},"generated":{"line":2834,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2833,"column":0},"generated":{"line":2835,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2834,"column":0},"generated":{"line":2836,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2835,"column":0},"generated":{"line":2837,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2836,"column":0},"generated":{"line":2838,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2837,"column":0},"generated":{"line":2839,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2838,"column":0},"generated":{"line":2840,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2839,"column":0},"generated":{"line":2841,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2840,"column":0},"generated":{"line":2842,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2841,"column":0},"generated":{"line":2843,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2842,"column":0},"generated":{"line":2844,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2843,"column":0},"generated":{"line":2845,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2844,"column":0},"generated":{"line":2846,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2845,"column":0},"generated":{"line":2847,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2846,"column":0},"generated":{"line":2848,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2847,"column":0},"generated":{"line":2849,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2848,"column":0},"generated":{"line":2850,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2849,"column":0},"generated":{"line":2851,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2850,"column":0},"generated":{"line":2852,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2851,"column":0},"generated":{"line":2853,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2852,"column":0},"generated":{"line":2854,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2853,"column":0},"generated":{"line":2855,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2854,"column":0},"generated":{"line":2856,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2855,"column":0},"generated":{"line":2857,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2856,"column":0},"generated":{"line":2858,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2857,"column":0},"generated":{"line":2859,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2858,"column":0},"generated":{"line":2860,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2859,"column":0},"generated":{"line":2861,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2860,"column":0},"generated":{"line":2862,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2861,"column":0},"generated":{"line":2863,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2862,"column":0},"generated":{"line":2864,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2863,"column":0},"generated":{"line":2865,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2864,"column":0},"generated":{"line":2866,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2865,"column":0},"generated":{"line":2867,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2866,"column":0},"generated":{"line":2868,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2867,"column":0},"generated":{"line":2869,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2868,"column":0},"generated":{"line":2870,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2869,"column":0},"generated":{"line":2871,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2870,"column":0},"generated":{"line":2872,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2871,"column":0},"generated":{"line":2873,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2872,"column":0},"generated":{"line":2874,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2873,"column":0},"generated":{"line":2875,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2874,"column":0},"generated":{"line":2876,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2875,"column":0},"generated":{"line":2877,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2876,"column":0},"generated":{"line":2878,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2877,"column":0},"generated":{"line":2879,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2878,"column":0},"generated":{"line":2880,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2879,"column":0},"generated":{"line":2881,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2880,"column":0},"generated":{"line":2882,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2881,"column":0},"generated":{"line":2883,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2882,"column":0},"generated":{"line":2884,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2883,"column":0},"generated":{"line":2885,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2884,"column":0},"generated":{"line":2886,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2885,"column":0},"generated":{"line":2887,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2886,"column":0},"generated":{"line":2888,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2887,"column":0},"generated":{"line":2889,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2888,"column":0},"generated":{"line":2890,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2889,"column":0},"generated":{"line":2891,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2890,"column":0},"generated":{"line":2892,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2891,"column":0},"generated":{"line":2893,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2892,"column":0},"generated":{"line":2894,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2893,"column":0},"generated":{"line":2895,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2894,"column":0},"generated":{"line":2896,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2895,"column":0},"generated":{"line":2897,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2896,"column":0},"generated":{"line":2898,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2897,"column":0},"generated":{"line":2899,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2898,"column":0},"generated":{"line":2900,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2899,"column":0},"generated":{"line":2901,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2900,"column":0},"generated":{"line":2902,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2901,"column":0},"generated":{"line":2903,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2902,"column":0},"generated":{"line":2904,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2903,"column":0},"generated":{"line":2905,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2904,"column":0},"generated":{"line":2906,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2905,"column":0},"generated":{"line":2907,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2906,"column":0},"generated":{"line":2908,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2907,"column":0},"generated":{"line":2909,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2908,"column":0},"generated":{"line":2910,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2909,"column":0},"generated":{"line":2911,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2910,"column":0},"generated":{"line":2912,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2911,"column":0},"generated":{"line":2913,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2912,"column":0},"generated":{"line":2914,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2913,"column":0},"generated":{"line":2915,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2914,"column":0},"generated":{"line":2916,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2915,"column":0},"generated":{"line":2917,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2916,"column":0},"generated":{"line":2918,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2917,"column":0},"generated":{"line":2919,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2918,"column":0},"generated":{"line":2920,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2919,"column":0},"generated":{"line":2921,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2920,"column":0},"generated":{"line":2922,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2921,"column":0},"generated":{"line":2923,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2922,"column":0},"generated":{"line":2924,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2923,"column":0},"generated":{"line":2925,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2924,"column":0},"generated":{"line":2926,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2925,"column":0},"generated":{"line":2927,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2926,"column":0},"generated":{"line":2928,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2927,"column":0},"generated":{"line":2929,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2928,"column":0},"generated":{"line":2930,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2929,"column":0},"generated":{"line":2931,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2930,"column":0},"generated":{"line":2932,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2931,"column":0},"generated":{"line":2933,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2932,"column":0},"generated":{"line":2934,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2933,"column":0},"generated":{"line":2935,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2934,"column":0},"generated":{"line":2936,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2935,"column":0},"generated":{"line":2937,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2936,"column":0},"generated":{"line":2938,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2937,"column":0},"generated":{"line":2939,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2938,"column":0},"generated":{"line":2940,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2939,"column":0},"generated":{"line":2941,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2940,"column":0},"generated":{"line":2942,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2941,"column":0},"generated":{"line":2943,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2942,"column":0},"generated":{"line":2944,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2943,"column":0},"generated":{"line":2945,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2944,"column":0},"generated":{"line":2946,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2945,"column":0},"generated":{"line":2947,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2946,"column":0},"generated":{"line":2948,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2947,"column":0},"generated":{"line":2949,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2948,"column":0},"generated":{"line":2950,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2949,"column":0},"generated":{"line":2951,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2950,"column":0},"generated":{"line":2952,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2951,"column":0},"generated":{"line":2953,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2952,"column":0},"generated":{"line":2954,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2953,"column":0},"generated":{"line":2955,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2954,"column":0},"generated":{"line":2956,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2955,"column":0},"generated":{"line":2957,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2956,"column":0},"generated":{"line":2958,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2957,"column":0},"generated":{"line":2959,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2958,"column":0},"generated":{"line":2960,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2959,"column":0},"generated":{"line":2961,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2960,"column":0},"generated":{"line":2962,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2961,"column":0},"generated":{"line":2963,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2962,"column":0},"generated":{"line":2964,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2963,"column":0},"generated":{"line":2965,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2964,"column":0},"generated":{"line":2966,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2965,"column":0},"generated":{"line":2967,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2966,"column":0},"generated":{"line":2968,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2967,"column":0},"generated":{"line":2969,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2968,"column":0},"generated":{"line":2970,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2969,"column":0},"generated":{"line":2971,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2970,"column":0},"generated":{"line":2972,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2971,"column":0},"generated":{"line":2973,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2972,"column":0},"generated":{"line":2974,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2973,"column":0},"generated":{"line":2975,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2974,"column":0},"generated":{"line":2976,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2975,"column":0},"generated":{"line":2977,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2976,"column":0},"generated":{"line":2978,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2977,"column":0},"generated":{"line":2979,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2978,"column":0},"generated":{"line":2980,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2979,"column":0},"generated":{"line":2981,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2980,"column":0},"generated":{"line":2982,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2981,"column":0},"generated":{"line":2983,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2982,"column":0},"generated":{"line":2984,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2983,"column":0},"generated":{"line":2985,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2984,"column":0},"generated":{"line":2986,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2985,"column":0},"generated":{"line":2987,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2986,"column":0},"generated":{"line":2988,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2987,"column":0},"generated":{"line":2989,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2988,"column":0},"generated":{"line":2990,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2989,"column":0},"generated":{"line":2991,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2990,"column":0},"generated":{"line":2992,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2991,"column":0},"generated":{"line":2993,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2992,"column":0},"generated":{"line":2994,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2993,"column":0},"generated":{"line":2995,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2994,"column":0},"generated":{"line":2996,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2995,"column":0},"generated":{"line":2997,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2996,"column":0},"generated":{"line":2998,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2997,"column":0},"generated":{"line":2999,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2998,"column":0},"generated":{"line":3000,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":2999,"column":0},"generated":{"line":3001,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3000,"column":0},"generated":{"line":3002,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3001,"column":0},"generated":{"line":3003,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3002,"column":0},"generated":{"line":3004,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3003,"column":0},"generated":{"line":3005,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3004,"column":0},"generated":{"line":3006,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3005,"column":0},"generated":{"line":3007,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3006,"column":0},"generated":{"line":3008,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3007,"column":0},"generated":{"line":3009,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3008,"column":0},"generated":{"line":3010,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3009,"column":0},"generated":{"line":3011,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3010,"column":0},"generated":{"line":3012,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3011,"column":0},"generated":{"line":3013,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3012,"column":0},"generated":{"line":3014,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3013,"column":0},"generated":{"line":3015,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3014,"column":0},"generated":{"line":3016,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3015,"column":0},"generated":{"line":3017,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3016,"column":0},"generated":{"line":3018,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3017,"column":0},"generated":{"line":3019,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3018,"column":0},"generated":{"line":3020,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3019,"column":0},"generated":{"line":3021,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3020,"column":0},"generated":{"line":3022,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3021,"column":0},"generated":{"line":3023,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3022,"column":0},"generated":{"line":3024,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3023,"column":0},"generated":{"line":3025,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3024,"column":0},"generated":{"line":3026,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3025,"column":0},"generated":{"line":3027,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3026,"column":0},"generated":{"line":3028,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3027,"column":0},"generated":{"line":3029,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3028,"column":0},"generated":{"line":3030,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3029,"column":0},"generated":{"line":3031,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3030,"column":0},"generated":{"line":3032,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3031,"column":0},"generated":{"line":3033,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3032,"column":0},"generated":{"line":3034,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3033,"column":0},"generated":{"line":3035,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3034,"column":0},"generated":{"line":3036,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3035,"column":0},"generated":{"line":3037,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3036,"column":0},"generated":{"line":3038,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3037,"column":0},"generated":{"line":3039,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3038,"column":0},"generated":{"line":3040,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3039,"column":0},"generated":{"line":3041,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3040,"column":0},"generated":{"line":3042,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3041,"column":0},"generated":{"line":3043,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3042,"column":0},"generated":{"line":3044,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3043,"column":0},"generated":{"line":3045,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3044,"column":0},"generated":{"line":3046,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3045,"column":0},"generated":{"line":3047,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3046,"column":0},"generated":{"line":3048,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3047,"column":0},"generated":{"line":3049,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3048,"column":0},"generated":{"line":3050,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3049,"column":0},"generated":{"line":3051,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3050,"column":0},"generated":{"line":3052,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3051,"column":0},"generated":{"line":3053,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3052,"column":0},"generated":{"line":3054,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3053,"column":0},"generated":{"line":3055,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3054,"column":0},"generated":{"line":3056,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3055,"column":0},"generated":{"line":3057,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3056,"column":0},"generated":{"line":3058,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3057,"column":0},"generated":{"line":3059,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3058,"column":0},"generated":{"line":3060,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3059,"column":0},"generated":{"line":3061,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3060,"column":0},"generated":{"line":3062,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3061,"column":0},"generated":{"line":3063,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3062,"column":0},"generated":{"line":3064,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3063,"column":0},"generated":{"line":3065,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3064,"column":0},"generated":{"line":3066,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3065,"column":0},"generated":{"line":3067,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3066,"column":0},"generated":{"line":3068,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3067,"column":0},"generated":{"line":3069,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3068,"column":0},"generated":{"line":3070,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3069,"column":0},"generated":{"line":3071,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3070,"column":0},"generated":{"line":3072,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3071,"column":0},"generated":{"line":3073,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3072,"column":0},"generated":{"line":3074,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3073,"column":0},"generated":{"line":3075,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3074,"column":0},"generated":{"line":3076,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3075,"column":0},"generated":{"line":3077,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3076,"column":0},"generated":{"line":3078,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3077,"column":0},"generated":{"line":3079,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3078,"column":0},"generated":{"line":3080,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3079,"column":0},"generated":{"line":3081,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3080,"column":0},"generated":{"line":3082,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3081,"column":0},"generated":{"line":3083,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3082,"column":0},"generated":{"line":3084,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3083,"column":0},"generated":{"line":3085,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3084,"column":0},"generated":{"line":3086,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3085,"column":0},"generated":{"line":3087,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3086,"column":0},"generated":{"line":3088,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3087,"column":0},"generated":{"line":3089,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3088,"column":0},"generated":{"line":3090,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3089,"column":0},"generated":{"line":3091,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3090,"column":0},"generated":{"line":3092,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3091,"column":0},"generated":{"line":3093,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3092,"column":0},"generated":{"line":3094,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3093,"column":0},"generated":{"line":3095,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3094,"column":0},"generated":{"line":3096,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3095,"column":0},"generated":{"line":3097,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3096,"column":0},"generated":{"line":3098,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3097,"column":0},"generated":{"line":3099,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3098,"column":0},"generated":{"line":3100,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3099,"column":0},"generated":{"line":3101,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3100,"column":0},"generated":{"line":3102,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3101,"column":0},"generated":{"line":3103,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3102,"column":0},"generated":{"line":3104,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3103,"column":0},"generated":{"line":3105,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3104,"column":0},"generated":{"line":3106,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3105,"column":0},"generated":{"line":3107,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3106,"column":0},"generated":{"line":3108,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3107,"column":0},"generated":{"line":3109,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3108,"column":0},"generated":{"line":3110,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3109,"column":0},"generated":{"line":3111,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3110,"column":0},"generated":{"line":3112,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3111,"column":0},"generated":{"line":3113,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3112,"column":0},"generated":{"line":3114,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3113,"column":0},"generated":{"line":3115,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3114,"column":0},"generated":{"line":3116,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3115,"column":0},"generated":{"line":3117,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3116,"column":0},"generated":{"line":3118,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3117,"column":0},"generated":{"line":3119,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3118,"column":0},"generated":{"line":3120,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3119,"column":0},"generated":{"line":3121,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3120,"column":0},"generated":{"line":3122,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3121,"column":0},"generated":{"line":3123,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3122,"column":0},"generated":{"line":3124,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3123,"column":0},"generated":{"line":3125,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3124,"column":0},"generated":{"line":3126,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3125,"column":0},"generated":{"line":3127,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3126,"column":0},"generated":{"line":3128,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3127,"column":0},"generated":{"line":3129,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3128,"column":0},"generated":{"line":3130,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3129,"column":0},"generated":{"line":3131,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3130,"column":0},"generated":{"line":3132,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3131,"column":0},"generated":{"line":3133,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3132,"column":0},"generated":{"line":3134,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3133,"column":0},"generated":{"line":3135,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3134,"column":0},"generated":{"line":3136,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3135,"column":0},"generated":{"line":3137,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3136,"column":0},"generated":{"line":3138,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3137,"column":0},"generated":{"line":3139,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3138,"column":0},"generated":{"line":3140,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3139,"column":0},"generated":{"line":3141,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3140,"column":0},"generated":{"line":3142,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3141,"column":0},"generated":{"line":3143,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3142,"column":0},"generated":{"line":3144,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3143,"column":0},"generated":{"line":3145,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3144,"column":0},"generated":{"line":3146,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3145,"column":0},"generated":{"line":3147,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3146,"column":0},"generated":{"line":3148,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3147,"column":0},"generated":{"line":3149,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3148,"column":0},"generated":{"line":3150,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3149,"column":0},"generated":{"line":3151,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3150,"column":0},"generated":{"line":3152,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3151,"column":0},"generated":{"line":3153,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3152,"column":0},"generated":{"line":3154,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3153,"column":0},"generated":{"line":3155,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3154,"column":0},"generated":{"line":3156,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3155,"column":0},"generated":{"line":3157,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3156,"column":0},"generated":{"line":3158,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3157,"column":0},"generated":{"line":3159,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3158,"column":0},"generated":{"line":3160,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3159,"column":0},"generated":{"line":3161,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3160,"column":0},"generated":{"line":3162,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3161,"column":0},"generated":{"line":3163,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3162,"column":0},"generated":{"line":3164,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3163,"column":0},"generated":{"line":3165,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3164,"column":0},"generated":{"line":3166,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3165,"column":0},"generated":{"line":3167,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3166,"column":0},"generated":{"line":3168,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3167,"column":0},"generated":{"line":3169,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3168,"column":0},"generated":{"line":3170,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3169,"column":0},"generated":{"line":3171,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3170,"column":0},"generated":{"line":3172,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3171,"column":0},"generated":{"line":3173,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3172,"column":0},"generated":{"line":3174,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3173,"column":0},"generated":{"line":3175,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3174,"column":0},"generated":{"line":3176,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3175,"column":0},"generated":{"line":3177,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3176,"column":0},"generated":{"line":3178,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3177,"column":0},"generated":{"line":3179,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3178,"column":0},"generated":{"line":3180,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3179,"column":0},"generated":{"line":3181,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3180,"column":0},"generated":{"line":3182,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3181,"column":0},"generated":{"line":3183,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3182,"column":0},"generated":{"line":3184,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3183,"column":0},"generated":{"line":3185,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3184,"column":0},"generated":{"line":3186,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3185,"column":0},"generated":{"line":3187,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3186,"column":0},"generated":{"line":3188,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3187,"column":0},"generated":{"line":3189,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3188,"column":0},"generated":{"line":3190,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3189,"column":0},"generated":{"line":3191,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3190,"column":0},"generated":{"line":3192,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3191,"column":0},"generated":{"line":3193,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3192,"column":0},"generated":{"line":3194,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3193,"column":0},"generated":{"line":3195,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3194,"column":0},"generated":{"line":3196,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3195,"column":0},"generated":{"line":3197,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3196,"column":0},"generated":{"line":3198,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3197,"column":0},"generated":{"line":3199,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3198,"column":0},"generated":{"line":3200,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3199,"column":0},"generated":{"line":3201,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3200,"column":0},"generated":{"line":3202,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3201,"column":0},"generated":{"line":3203,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3202,"column":0},"generated":{"line":3204,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3203,"column":0},"generated":{"line":3205,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3204,"column":0},"generated":{"line":3206,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3205,"column":0},"generated":{"line":3207,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3206,"column":0},"generated":{"line":3208,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3207,"column":0},"generated":{"line":3209,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3208,"column":0},"generated":{"line":3210,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3209,"column":0},"generated":{"line":3211,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3210,"column":0},"generated":{"line":3212,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3211,"column":0},"generated":{"line":3213,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3212,"column":0},"generated":{"line":3214,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3213,"column":0},"generated":{"line":3215,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3214,"column":0},"generated":{"line":3216,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3215,"column":0},"generated":{"line":3217,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3216,"column":0},"generated":{"line":3218,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3217,"column":0},"generated":{"line":3219,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3218,"column":0},"generated":{"line":3220,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3219,"column":0},"generated":{"line":3221,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3220,"column":0},"generated":{"line":3222,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3221,"column":0},"generated":{"line":3223,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3222,"column":0},"generated":{"line":3224,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3223,"column":0},"generated":{"line":3225,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3224,"column":0},"generated":{"line":3226,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3225,"column":0},"generated":{"line":3227,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3226,"column":0},"generated":{"line":3228,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3227,"column":0},"generated":{"line":3229,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3228,"column":0},"generated":{"line":3230,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3229,"column":0},"generated":{"line":3231,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3230,"column":0},"generated":{"line":3232,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3231,"column":0},"generated":{"line":3233,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3232,"column":0},"generated":{"line":3234,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3233,"column":0},"generated":{"line":3235,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3234,"column":0},"generated":{"line":3236,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3235,"column":0},"generated":{"line":3237,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3236,"column":0},"generated":{"line":3238,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3237,"column":0},"generated":{"line":3239,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3238,"column":0},"generated":{"line":3240,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3239,"column":0},"generated":{"line":3241,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3240,"column":0},"generated":{"line":3242,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3241,"column":0},"generated":{"line":3243,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3242,"column":0},"generated":{"line":3244,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3243,"column":0},"generated":{"line":3245,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3244,"column":0},"generated":{"line":3246,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3245,"column":0},"generated":{"line":3247,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3246,"column":0},"generated":{"line":3248,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3247,"column":0},"generated":{"line":3249,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3248,"column":0},"generated":{"line":3250,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3249,"column":0},"generated":{"line":3251,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3250,"column":0},"generated":{"line":3252,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3251,"column":0},"generated":{"line":3253,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3252,"column":0},"generated":{"line":3254,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3253,"column":0},"generated":{"line":3255,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3254,"column":0},"generated":{"line":3256,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3255,"column":0},"generated":{"line":3257,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3256,"column":0},"generated":{"line":3258,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3257,"column":0},"generated":{"line":3259,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3258,"column":0},"generated":{"line":3260,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3259,"column":0},"generated":{"line":3261,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3260,"column":0},"generated":{"line":3262,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3261,"column":0},"generated":{"line":3263,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3262,"column":0},"generated":{"line":3264,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3263,"column":0},"generated":{"line":3265,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3264,"column":0},"generated":{"line":3266,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3265,"column":0},"generated":{"line":3267,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3266,"column":0},"generated":{"line":3268,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3267,"column":0},"generated":{"line":3269,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3268,"column":0},"generated":{"line":3270,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3269,"column":0},"generated":{"line":3271,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3270,"column":0},"generated":{"line":3272,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3271,"column":0},"generated":{"line":3273,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3272,"column":0},"generated":{"line":3274,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3273,"column":0},"generated":{"line":3275,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3274,"column":0},"generated":{"line":3276,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3275,"column":0},"generated":{"line":3277,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3276,"column":0},"generated":{"line":3278,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3277,"column":0},"generated":{"line":3279,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3278,"column":0},"generated":{"line":3280,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3279,"column":0},"generated":{"line":3281,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3280,"column":0},"generated":{"line":3282,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3281,"column":0},"generated":{"line":3283,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3282,"column":0},"generated":{"line":3284,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3283,"column":0},"generated":{"line":3285,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3284,"column":0},"generated":{"line":3286,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3285,"column":0},"generated":{"line":3287,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3286,"column":0},"generated":{"line":3288,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3287,"column":0},"generated":{"line":3289,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3288,"column":0},"generated":{"line":3290,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3289,"column":0},"generated":{"line":3291,"column":0}},{"source":"node_modules/@colyseus/schema/build/umd/index.js","original":{"line":3290,"column":0},"generated":{"line":3292,"column":0}}],"sources":{"node_modules/@colyseus/schema/build/umd/index.js":"(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n    typeof define === 'function' && define.amd ? define(['exports'], factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.schema = {}));\n})(this, (function (exports) { 'use strict';\n\n    /******************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __spreadArray(to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    }\n\n    // export const SWITCH_TO_STRUCTURE = 193; (easily collides with DELETE_AND_ADD + fieldIndex = 2)\n    var SWITCH_TO_STRUCTURE = 255; // (decoding collides with DELETE_AND_ADD + fieldIndex = 63)\n    var TYPE_ID = 213;\n    /**\n     * Encoding Schema field operations.\n     */\n    exports.OPERATION = void 0;\n    (function (OPERATION) {\n        // add new structure/primitive\n        OPERATION[OPERATION[\"ADD\"] = 128] = \"ADD\";\n        // replace structure/primitive\n        OPERATION[OPERATION[\"REPLACE\"] = 0] = \"REPLACE\";\n        // delete field\n        OPERATION[OPERATION[\"DELETE\"] = 64] = \"DELETE\";\n        // DELETE field, followed by an ADD\n        OPERATION[OPERATION[\"DELETE_AND_ADD\"] = 192] = \"DELETE_AND_ADD\";\n        // TOUCH is used to determine hierarchy of nested Schema structures during serialization.\n        // touches are NOT encoded.\n        OPERATION[OPERATION[\"TOUCH\"] = 1] = \"TOUCH\";\n        // MapSchema Operations\n        OPERATION[OPERATION[\"CLEAR\"] = 10] = \"CLEAR\";\n    })(exports.OPERATION || (exports.OPERATION = {}));\n    // export enum OPERATION {\n    //     // add new structure/primitive\n    //     // (128)\n    //     ADD = 128, // 10000000,\n    //     // replace structure/primitive\n    //     REPLACE = 1,// 00000001\n    //     // delete field\n    //     DELETE = 192, // 11000000\n    //     // DELETE field, followed by an ADD\n    //     DELETE_AND_ADD = 224, // 11100000\n    //     // TOUCH is used to determine hierarchy of nested Schema structures during serialization.\n    //     // touches are NOT encoded.\n    //     TOUCH = 0, // 00000000\n    //     // MapSchema Operations\n    //     CLEAR = 10,\n    // }\n\n    //\n    // Root holds all schema references by unique id\n    //\n    var Root = /** @class */ (function () {\n        function Root() {\n            //\n            // Relation of refId => Schema structure\n            // For direct access of structures during decoding time.\n            //\n            this.refs = new Map();\n            this.refCounts = {};\n            this.deletedRefs = new Set();\n            this.nextUniqueId = 0;\n        }\n        Root.prototype.getNextUniqueId = function () {\n            return this.nextUniqueId++;\n        };\n        // for decoding\n        Root.prototype.addRef = function (refId, ref, incrementCount) {\n            if (incrementCount === void 0) { incrementCount = true; }\n            this.refs.set(refId, ref);\n            if (incrementCount) {\n                this.refCounts[refId] = (this.refCounts[refId] || 0) + 1;\n            }\n        };\n        // for decoding\n        Root.prototype.removeRef = function (refId) {\n            this.refCounts[refId] = this.refCounts[refId] - 1;\n            this.deletedRefs.add(refId);\n        };\n        Root.prototype.clearRefs = function () {\n            this.refs.clear();\n            this.deletedRefs.clear();\n            this.refCounts = {};\n        };\n        // for decoding\n        Root.prototype.garbageCollectDeletedRefs = function () {\n            var _this = this;\n            this.deletedRefs.forEach(function (refId) {\n                if (_this.refCounts[refId] <= 0) {\n                    var ref = _this.refs.get(refId);\n                    //\n                    // Ensure child schema instances have their references removed as well.\n                    //\n                    if (ref instanceof Schema) {\n                        for (var fieldName in ref['_definition'].schema) {\n                            if (typeof (ref['_definition'].schema[fieldName]) !== \"string\" &&\n                                ref[fieldName] &&\n                                ref[fieldName]['$changes']) {\n                                _this.removeRef(ref[fieldName]['$changes'].refId);\n                            }\n                        }\n                    }\n                    else {\n                        var definition = ref['$changes'].parent._definition;\n                        var type = definition.schema[definition.fieldsByIndex[ref['$changes'].parentIndex]];\n                        if (typeof (Object.values(type)[0]) === \"function\") {\n                            Array.from(ref.values())\n                                .forEach(function (child) { return _this.removeRef(child['$changes'].refId); });\n                        }\n                    }\n                    _this.refs.delete(refId);\n                    delete _this.refCounts[refId];\n                }\n            });\n            // clear deleted refs.\n            this.deletedRefs.clear();\n        };\n        return Root;\n    }());\n    var ChangeTree = /** @class */ (function () {\n        function ChangeTree(ref, parent, root) {\n            this.changed = false;\n            this.changes = new Map();\n            this.allChanges = new Set();\n            // cached indexes for filtering\n            this.caches = {};\n            this.currentCustomOperation = 0;\n            this.ref = ref;\n            this.setParent(parent, root);\n        }\n        ChangeTree.prototype.setParent = function (parent, root, parentIndex) {\n            var _this = this;\n            if (!this.indexes) {\n                this.indexes = (this.ref instanceof Schema)\n                    ? this.ref['_definition'].indexes\n                    : {};\n            }\n            this.parent = parent;\n            this.parentIndex = parentIndex;\n            // avoid setting parents with empty `root`\n            if (!root) {\n                return;\n            }\n            this.root = root;\n            //\n            // assign same parent on child structures\n            //\n            if (this.ref instanceof Schema) {\n                var definition = this.ref['_definition'];\n                for (var field in definition.schema) {\n                    var value = this.ref[field];\n                    if (value && value['$changes']) {\n                        var parentIndex_1 = definition.indexes[field];\n                        value['$changes'].setParent(this.ref, root, parentIndex_1);\n                    }\n                }\n            }\n            else if (typeof (this.ref) === \"object\") {\n                this.ref.forEach(function (value, key) {\n                    if (value instanceof Schema) {\n                        var changeTreee = value['$changes'];\n                        var parentIndex_2 = _this.ref['$changes'].indexes[key];\n                        changeTreee.setParent(_this.ref, _this.root, parentIndex_2);\n                    }\n                });\n            }\n        };\n        ChangeTree.prototype.operation = function (op) {\n            this.changes.set(--this.currentCustomOperation, op);\n        };\n        ChangeTree.prototype.change = function (fieldName, operation) {\n            if (operation === void 0) { operation = exports.OPERATION.ADD; }\n            var index = (typeof (fieldName) === \"number\")\n                ? fieldName\n                : this.indexes[fieldName];\n            this.assertValidIndex(index, fieldName);\n            var previousChange = this.changes.get(index);\n            if (!previousChange ||\n                previousChange.op === exports.OPERATION.DELETE ||\n                previousChange.op === exports.OPERATION.TOUCH // (mazmorra.io's BattleAction issue)\n            ) {\n                this.changes.set(index, {\n                    op: (!previousChange)\n                        ? operation\n                        : (previousChange.op === exports.OPERATION.DELETE)\n                            ? exports.OPERATION.DELETE_AND_ADD\n                            : operation,\n                    // : OPERATION.REPLACE,\n                    index: index\n                });\n            }\n            this.allChanges.add(index);\n            this.changed = true;\n            this.touchParents();\n        };\n        ChangeTree.prototype.touch = function (fieldName) {\n            var index = (typeof (fieldName) === \"number\")\n                ? fieldName\n                : this.indexes[fieldName];\n            this.assertValidIndex(index, fieldName);\n            if (!this.changes.has(index)) {\n                this.changes.set(index, { op: exports.OPERATION.TOUCH, index: index });\n            }\n            this.allChanges.add(index);\n            // ensure touch is placed until the $root is found.\n            this.touchParents();\n        };\n        ChangeTree.prototype.touchParents = function () {\n            if (this.parent) {\n                this.parent['$changes'].touch(this.parentIndex);\n            }\n        };\n        ChangeTree.prototype.getType = function (index) {\n            if (this.ref['_definition']) {\n                var definition = this.ref['_definition'];\n                return definition.schema[definition.fieldsByIndex[index]];\n            }\n            else {\n                var definition = this.parent['_definition'];\n                var parentType = definition.schema[definition.fieldsByIndex[this.parentIndex]];\n                //\n                // Get the child type from parent structure.\n                // - [\"string\"] => \"string\"\n                // - { map: \"string\" } => \"string\"\n                // - { set: \"string\" } => \"string\"\n                //\n                return Object.values(parentType)[0];\n            }\n        };\n        ChangeTree.prototype.getChildrenFilter = function () {\n            var childFilters = this.parent['_definition'].childFilters;\n            return childFilters && childFilters[this.parentIndex];\n        };\n        //\n        // used during `.encode()`\n        //\n        ChangeTree.prototype.getValue = function (index) {\n            return this.ref['getByIndex'](index);\n        };\n        ChangeTree.prototype.delete = function (fieldName) {\n            var index = (typeof (fieldName) === \"number\")\n                ? fieldName\n                : this.indexes[fieldName];\n            if (index === undefined) {\n                console.warn(\"@colyseus/schema \".concat(this.ref.constructor.name, \": trying to delete non-existing index: \").concat(fieldName, \" (\").concat(index, \")\"));\n                return;\n            }\n            var previousValue = this.getValue(index);\n            // console.log(\"$changes.delete =>\", { fieldName, index, previousValue });\n            this.changes.set(index, { op: exports.OPERATION.DELETE, index: index });\n            this.allChanges.delete(index);\n            // delete cache\n            delete this.caches[index];\n            // remove `root` reference\n            if (previousValue && previousValue['$changes']) {\n                previousValue['$changes'].parent = undefined;\n            }\n            this.changed = true;\n            this.touchParents();\n        };\n        ChangeTree.prototype.discard = function (changed, discardAll) {\n            var _this = this;\n            if (changed === void 0) { changed = false; }\n            if (discardAll === void 0) { discardAll = false; }\n            //\n            // Map, Array, etc:\n            // Remove cached key to ensure ADD operations is unsed instead of\n            // REPLACE in case same key is used on next patches.\n            //\n            // TODO: refactor this. this is not relevant for Collection and Set.\n            //\n            if (!(this.ref instanceof Schema)) {\n                this.changes.forEach(function (change) {\n                    if (change.op === exports.OPERATION.DELETE) {\n                        var index = _this.ref['getIndex'](change.index);\n                        delete _this.indexes[index];\n                    }\n                });\n            }\n            this.changes.clear();\n            this.changed = changed;\n            if (discardAll) {\n                this.allChanges.clear();\n            }\n            // re-set `currentCustomOperation`\n            this.currentCustomOperation = 0;\n        };\n        /**\n         * Recursively discard all changes from this, and child structures.\n         */\n        ChangeTree.prototype.discardAll = function () {\n            var _this = this;\n            this.changes.forEach(function (change) {\n                var value = _this.getValue(change.index);\n                if (value && value['$changes']) {\n                    value['$changes'].discardAll();\n                }\n            });\n            this.discard();\n        };\n        // cache(field: number, beginIndex: number, endIndex: number) {\n        ChangeTree.prototype.cache = function (field, cachedBytes) {\n            this.caches[field] = cachedBytes;\n        };\n        ChangeTree.prototype.clone = function () {\n            return new ChangeTree(this.ref, this.parent, this.root);\n        };\n        ChangeTree.prototype.ensureRefId = function () {\n            // skip if refId is already set.\n            if (this.refId !== undefined) {\n                return;\n            }\n            this.refId = this.root.getNextUniqueId();\n        };\n        ChangeTree.prototype.assertValidIndex = function (index, fieldName) {\n            if (index === undefined) {\n                throw new Error(\"ChangeTree: missing index for field \\\"\".concat(fieldName, \"\\\"\"));\n            }\n        };\n        return ChangeTree;\n    }());\n\n    //\n    // Notes:\n    // -----\n    //\n    // - The tsconfig.json of @colyseus/schema uses ES2018.\n    // - ES2019 introduces `flatMap` / `flat`, which is not currently relevant, and caused other issues.\n    //\n    var DEFAULT_SORT = function (a, b) {\n        var A = a.toString();\n        var B = b.toString();\n        if (A < B)\n            return -1;\n        else if (A > B)\n            return 1;\n        else\n            return 0;\n    };\n    function getArrayProxy(value) {\n        value['$proxy'] = true;\n        //\n        // compatibility with @colyseus/schema 0.5.x\n        // - allow `map[\"key\"]`\n        // - allow `map[\"key\"] = \"xxx\"`\n        // - allow `delete map[\"key\"]`\n        //\n        value = new Proxy(value, {\n            get: function (obj, prop) {\n                if (typeof (prop) !== \"symbol\" &&\n                    !isNaN(prop) // https://stackoverflow.com/a/175787/892698\n                ) {\n                    return obj.at(prop);\n                }\n                else {\n                    return obj[prop];\n                }\n            },\n            set: function (obj, prop, setValue) {\n                if (typeof (prop) !== \"symbol\" &&\n                    !isNaN(prop)) {\n                    var indexes = Array.from(obj['$items'].keys());\n                    var key = parseInt(indexes[prop] || prop);\n                    if (setValue === undefined || setValue === null) {\n                        obj.deleteAt(key);\n                    }\n                    else {\n                        obj.setAt(key, setValue);\n                    }\n                }\n                else {\n                    obj[prop] = setValue;\n                }\n                return true;\n            },\n            deleteProperty: function (obj, prop) {\n                if (typeof (prop) === \"number\") {\n                    obj.deleteAt(prop);\n                }\n                else {\n                    delete obj[prop];\n                }\n                return true;\n            },\n        });\n        return value;\n    }\n    var ArraySchema = /** @class */ (function () {\n        function ArraySchema() {\n            var items = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                items[_i] = arguments[_i];\n            }\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            this.push.apply(this, items);\n        }\n        ArraySchema.is = function (type) {\n            return (\n            // type format: [\"string\"]\n            Array.isArray(type) ||\n                // type format: { array: \"string\" }\n                (type['array'] !== undefined));\n        };\n        Object.defineProperty(ArraySchema.prototype, \"length\", {\n            get: function () {\n                return this.$items.size;\n            },\n            set: function (value) {\n                if (value === 0) {\n                    this.clear();\n                }\n                else {\n                    this.splice(value, this.length - value);\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        ArraySchema.prototype.push = function () {\n            var _this = this;\n            var values = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                values[_i] = arguments[_i];\n            }\n            var lastIndex;\n            values.forEach(function (value) {\n                // set \"index\" for reference.\n                lastIndex = _this.$refId++;\n                _this.setAt(lastIndex, value);\n            });\n            return lastIndex;\n        };\n        /**\n         * Removes the last element from an array and returns it.\n         */\n        ArraySchema.prototype.pop = function () {\n            var key = Array.from(this.$indexes.values()).pop();\n            if (key === undefined) {\n                return undefined;\n            }\n            this.$changes.delete(key);\n            this.$indexes.delete(key);\n            var value = this.$items.get(key);\n            this.$items.delete(key);\n            return value;\n        };\n        ArraySchema.prototype.at = function (index) {\n            //\n            // FIXME: this should be O(1)\n            //\n            var key = Array.from(this.$items.keys())[index];\n            return this.$items.get(key);\n        };\n        ArraySchema.prototype.setAt = function (index, value) {\n            var _a, _b;\n            if (value['$changes'] !== undefined) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            var operation = (_b = (_a = this.$changes.indexes[index]) === null || _a === void 0 ? void 0 : _a.op) !== null && _b !== void 0 ? _b : exports.OPERATION.ADD;\n            this.$changes.indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this.$changes.change(index, operation);\n        };\n        ArraySchema.prototype.deleteAt = function (index) {\n            var key = Array.from(this.$items.keys())[index];\n            if (key === undefined) {\n                return false;\n            }\n            return this.$deleteAt(key);\n        };\n        ArraySchema.prototype.$deleteAt = function (index) {\n            // delete at internal index\n            this.$changes.delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        };\n        ArraySchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        /**\n         * Combines two or more arrays.\n         * @param items Additional items to add to the end of array1.\n         */\n        ArraySchema.prototype.concat = function () {\n            var _a;\n            var items = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                items[_i] = arguments[_i];\n            }\n            return new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], (_a = Array.from(this.$items.values())).concat.apply(_a, items), false)))();\n        };\n        /**\n         * Adds all the elements of an array separated by the specified separator string.\n         * @param separator A string used to separate one element of an array from the next in the resulting String. If omitted, the array elements are separated with a comma.\n         */\n        ArraySchema.prototype.join = function (separator) {\n            return Array.from(this.$items.values()).join(separator);\n        };\n        /**\n         * Reverses the elements in an Array.\n         */\n        ArraySchema.prototype.reverse = function () {\n            var _this = this;\n            var indexes = Array.from(this.$items.keys());\n            var reversedItems = Array.from(this.$items.values()).reverse();\n            reversedItems.forEach(function (item, i) {\n                _this.setAt(indexes[i], item);\n            });\n            return this;\n        };\n        /**\n         * Removes the first element from an array and returns it.\n         */\n        ArraySchema.prototype.shift = function () {\n            var indexes = Array.from(this.$items.keys());\n            var shiftAt = indexes.shift();\n            if (shiftAt === undefined) {\n                return undefined;\n            }\n            var value = this.$items.get(shiftAt);\n            this.$deleteAt(shiftAt);\n            return value;\n        };\n        /**\n         * Returns a section of an array.\n         * @param start The beginning of the specified portion of the array.\n         * @param end The end of the specified portion of the array. This is exclusive of the element at the index 'end'.\n         */\n        ArraySchema.prototype.slice = function (start, end) {\n            return new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], Array.from(this.$items.values()).slice(start, end), false)))();\n        };\n        /**\n         * Sorts an array.\n         * @param compareFn Function used to determine the order of the elements. It is expected to return\n         * a negative value if first argument is less than second argument, zero if they're equal and a positive\n         * value otherwise. If omitted, the elements are sorted in ascending, ASCII character order.\n         * ```ts\n         * [11,2,22,1].sort((a, b) => a - b)\n         * ```\n         */\n        ArraySchema.prototype.sort = function (compareFn) {\n            var _this = this;\n            if (compareFn === void 0) { compareFn = DEFAULT_SORT; }\n            var indexes = Array.from(this.$items.keys());\n            var sortedItems = Array.from(this.$items.values()).sort(compareFn);\n            sortedItems.forEach(function (item, i) {\n                _this.setAt(indexes[i], item);\n            });\n            return this;\n        };\n        /**\n         * Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.\n         * @param start The zero-based location in the array from which to start removing elements.\n         * @param deleteCount The number of elements to remove.\n         * @param items Elements to insert into the array in place of the deleted elements.\n         */\n        ArraySchema.prototype.splice = function (start, deleteCount) {\n            if (deleteCount === void 0) { deleteCount = this.length - start; }\n            var indexes = Array.from(this.$items.keys());\n            var removedItems = [];\n            for (var i = start; i < start + deleteCount; i++) {\n                removedItems.push(this.$items.get(indexes[i]));\n                this.$deleteAt(indexes[i]);\n            }\n            return removedItems;\n        };\n        /**\n         * Inserts new elements at the start of an array.\n         * @param items  Elements to insert at the start of the Array.\n         */\n        ArraySchema.prototype.unshift = function () {\n            var _this = this;\n            var items = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                items[_i] = arguments[_i];\n            }\n            var length = this.length;\n            var addedLength = items.length;\n            // const indexes = Array.from(this.$items.keys());\n            var previousValues = Array.from(this.$items.values());\n            items.forEach(function (item, i) {\n                _this.setAt(i, item);\n            });\n            previousValues.forEach(function (previousValue, i) {\n                _this.setAt(addedLength + i, previousValue);\n            });\n            return length + addedLength;\n        };\n        /**\n         * Returns the index of the first occurrence of a value in an array.\n         * @param searchElement The value to locate in the array.\n         * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at index 0.\n         */\n        ArraySchema.prototype.indexOf = function (searchElement, fromIndex) {\n            return Array.from(this.$items.values()).indexOf(searchElement, fromIndex);\n        };\n        /**\n         * Returns the index of the last occurrence of a specified value in an array.\n         * @param searchElement The value to locate in the array.\n         * @param fromIndex The array index at which to begin the search. If fromIndex is omitted, the search starts at the last index in the array.\n         */\n        ArraySchema.prototype.lastIndexOf = function (searchElement, fromIndex) {\n            if (fromIndex === void 0) { fromIndex = this.length - 1; }\n            return Array.from(this.$items.values()).lastIndexOf(searchElement, fromIndex);\n        };\n        /**\n         * Determines whether all the members of an array satisfy the specified test.\n         * @param callbackfn A function that accepts up to three arguments. The every method calls\n         * the callbackfn function for each element in the array until the callbackfn returns a value\n         * which is coercible to the Boolean value false, or until the end of the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n         * If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.every = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).every(callbackfn, thisArg);\n        };\n        /**\n         * Determines whether the specified callback function returns true for any element of an array.\n         * @param callbackfn A function that accepts up to three arguments. The some method calls\n         * the callbackfn function for each element in the array until the callbackfn returns a value\n         * which is coercible to the Boolean value true, or until the end of the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function.\n         * If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.some = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).some(callbackfn, thisArg);\n        };\n        /**\n         * Performs the specified action for each element in an array.\n         * @param callbackfn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\n         * @param thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.forEach = function (callbackfn, thisArg) {\n            Array.from(this.$items.values()).forEach(callbackfn, thisArg);\n        };\n        /**\n         * Calls a defined callback function on each element of an array, and returns an array that contains the results.\n         * @param callbackfn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\n         * @param thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\n         */\n        ArraySchema.prototype.map = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).map(callbackfn, thisArg);\n        };\n        ArraySchema.prototype.filter = function (callbackfn, thisArg) {\n            return Array.from(this.$items.values()).filter(callbackfn, thisArg);\n        };\n        /**\n         * Calls the specified callback function for all the elements in an array. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to four arguments. The reduce method calls the callbackfn function one time for each element in the array.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n         */\n        ArraySchema.prototype.reduce = function (callbackfn, initialValue) {\n            return Array.prototype.reduce.apply(Array.from(this.$items.values()), arguments);\n        };\n        /**\n         * Calls the specified callback function for all the elements in an array, in descending order. The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.\n         * @param callbackfn A function that accepts up to four arguments. The reduceRight method calls the callbackfn function one time for each element in the array.\n         * @param initialValue If initialValue is specified, it is used as the initial value to start the accumulation. The first call to the callbackfn function provides this value as an argument instead of an array value.\n         */\n        ArraySchema.prototype.reduceRight = function (callbackfn, initialValue) {\n            return Array.prototype.reduceRight.apply(Array.from(this.$items.values()), arguments);\n        };\n        /**\n         * Returns the value of the first element in the array where predicate is true, and undefined\n         * otherwise.\n         * @param predicate find calls predicate once for each element of the array, in ascending\n         * order, until it finds one where predicate returns true. If such an element is found, find\n         * immediately returns that element value. Otherwise, find returns undefined.\n         * @param thisArg If provided, it will be used as the this value for each invocation of\n         * predicate. If it is not provided, undefined is used instead.\n         */\n        ArraySchema.prototype.find = function (predicate, thisArg) {\n            return Array.from(this.$items.values()).find(predicate, thisArg);\n        };\n        /**\n         * Returns the index of the first element in the array where predicate is true, and -1\n         * otherwise.\n         * @param predicate find calls predicate once for each element of the array, in ascending\n         * order, until it finds one where predicate returns true. If such an element is found,\n         * findIndex immediately returns that element index. Otherwise, findIndex returns -1.\n         * @param thisArg If provided, it will be used as the this value for each invocation of\n         * predicate. If it is not provided, undefined is used instead.\n         */\n        ArraySchema.prototype.findIndex = function (predicate, thisArg) {\n            return Array.from(this.$items.values()).findIndex(predicate, thisArg);\n        };\n        /**\n         * Returns the this object after filling the section identified by start and end with value\n         * @param value value to fill array section with\n         * @param start index to start filling the array at. If start is negative, it is treated as\n         * length+start where length is the length of the array.\n         * @param end index to stop filling the array at. If end is negative, it is treated as\n         * length+end.\n         */\n        ArraySchema.prototype.fill = function (value, start, end) {\n            //\n            // TODO\n            //\n            throw new Error(\"ArraySchema#fill() not implemented\");\n        };\n        /**\n         * Returns the this object after copying a section of the array identified by start and end\n         * to the same array starting at position target\n         * @param target If target is negative, it is treated as length+target where length is the\n         * length of the array.\n         * @param start If start is negative, it is treated as length+start. If end is negative, it\n         * is treated as length+end.\n         * @param end If not specified, length of the this object is used as its default value.\n         */\n        ArraySchema.prototype.copyWithin = function (target, start, end) {\n            //\n            // TODO\n            //\n            throw new Error(\"ArraySchema#copyWithin() not implemented\");\n        };\n        /**\n         * Returns a string representation of an array.\n         */\n        ArraySchema.prototype.toString = function () { return this.$items.toString(); };\n        /**\n         * Returns a string representation of an array. The elements are converted to string using their toLocalString methods.\n         */\n        ArraySchema.prototype.toLocaleString = function () { return this.$items.toLocaleString(); };\n        /** Iterator */\n        ArraySchema.prototype[Symbol.iterator] = function () {\n            return Array.from(this.$items.values())[Symbol.iterator]();\n        };\n        ArraySchema.prototype[Symbol.unscopables] = function () {\n            return this.$items[Symbol.unscopables]();\n        };\n        /**\n         * Returns an iterable of key, value pairs for every entry in the array\n         */\n        ArraySchema.prototype.entries = function () { return this.$items.entries(); };\n        /**\n         * Returns an iterable of keys in the array\n         */\n        ArraySchema.prototype.keys = function () { return this.$items.keys(); };\n        /**\n         * Returns an iterable of values in the array\n         */\n        ArraySchema.prototype.values = function () { return this.$items.values(); };\n        /**\n         * Determines whether an array includes a certain element, returning true or false as appropriate.\n         * @param searchElement The element to search for.\n         * @param fromIndex The position in this array at which to begin searching for searchElement.\n         */\n        ArraySchema.prototype.includes = function (searchElement, fromIndex) {\n            return Array.from(this.$items.values()).includes(searchElement, fromIndex);\n        };\n        /**\n         * Calls a defined callback function on each element of an array. Then, flattens the result into\n         * a new array.\n         * This is identical to a map followed by flat with depth 1.\n         *\n         * @param callback A function that accepts up to three arguments. The flatMap method calls the\n         * callback function one time for each element in the array.\n         * @param thisArg An object to which the this keyword can refer in the callback function. If\n         * thisArg is omitted, undefined is used as the this value.\n         */\n        // @ts-ignore\n        ArraySchema.prototype.flatMap = function (callback, thisArg) {\n            // @ts-ignore\n            throw new Error(\"ArraySchema#flatMap() is not supported.\");\n        };\n        /**\n         * Returns a new array with all sub-array elements concatenated into it recursively up to the\n         * specified depth.\n         *\n         * @param depth The maximum recursion depth\n         */\n        // @ts-ignore\n        ArraySchema.prototype.flat = function (depth) {\n            // @ts-ignore\n            throw new Error(\"ArraySchema#flat() is not supported.\");\n        };\n        // get size () {\n        //     return this.$items.size;\n        // }\n        ArraySchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        ArraySchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        ArraySchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        ArraySchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        ArraySchema.prototype.toArray = function () {\n            return Array.from(this.$items.values());\n        };\n        ArraySchema.prototype.toJSON = function () {\n            return this.toArray().map(function (value) {\n                return (typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value;\n            });\n        };\n        //\n        // Decoding utilities\n        //\n        ArraySchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                cloned = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], Array.from(this.$items.values()), false)))();\n            }\n            else {\n                cloned = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], this.map(function (item) { return ((item['$changes'])\n                    ? item.clone()\n                    : item); }), false)))();\n            }\n            return cloned;\n        };\n        ArraySchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return ArraySchema;\n    }());\n\n    function getMapProxy(value) {\n        value['$proxy'] = true;\n        value = new Proxy(value, {\n            get: function (obj, prop) {\n                if (typeof (prop) !== \"symbol\" && // accessing properties\n                    typeof (obj[prop]) === \"undefined\") {\n                    return obj.get(prop);\n                }\n                else {\n                    return obj[prop];\n                }\n            },\n            set: function (obj, prop, setValue) {\n                if (typeof (prop) !== \"symbol\" &&\n                    (prop.indexOf(\"$\") === -1 &&\n                        prop !== \"onAdd\" &&\n                        prop !== \"onRemove\" &&\n                        prop !== \"onChange\")) {\n                    obj.set(prop, setValue);\n                }\n                else {\n                    obj[prop] = setValue;\n                }\n                return true;\n            },\n            deleteProperty: function (obj, prop) {\n                obj.delete(prop);\n                return true;\n            },\n        });\n        return value;\n    }\n    var MapSchema = /** @class */ (function () {\n        function MapSchema(initialValues) {\n            var _this = this;\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            if (initialValues) {\n                if (initialValues instanceof Map ||\n                    initialValues instanceof MapSchema) {\n                    initialValues.forEach(function (v, k) { return _this.set(k, v); });\n                }\n                else {\n                    for (var k in initialValues) {\n                        this.set(k, initialValues[k]);\n                    }\n                }\n            }\n        }\n        MapSchema.is = function (type) {\n            return type['map'] !== undefined;\n        };\n        /** Iterator */\n        MapSchema.prototype[Symbol.iterator] = function () { return this.$items[Symbol.iterator](); };\n        Object.defineProperty(MapSchema.prototype, Symbol.toStringTag, {\n            get: function () { return this.$items[Symbol.toStringTag]; },\n            enumerable: false,\n            configurable: true\n        });\n        MapSchema.prototype.set = function (key, value) {\n            if (value === undefined || value === null) {\n                throw new Error(\"MapSchema#set('\".concat(key, \"', \").concat(value, \"): trying to set \").concat(value, \" value on '\").concat(key, \"'.\"));\n            }\n            // get \"index\" for this value.\n            var hasIndex = typeof (this.$changes.indexes[key]) !== \"undefined\";\n            var index = (hasIndex)\n                ? this.$changes.indexes[key]\n                : this.$refId++;\n            var operation = (hasIndex)\n                ? exports.OPERATION.REPLACE\n                : exports.OPERATION.ADD;\n            var isRef = (value['$changes']) !== undefined;\n            if (isRef) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            //\n            // (encoding)\n            // set a unique id to relate directly with this key/value.\n            //\n            if (!hasIndex) {\n                this.$changes.indexes[key] = index;\n                this.$indexes.set(index, key);\n            }\n            else if (isRef && // if is schema, force ADD operation if value differ from previous one.\n                this.$items.get(key) !== value) {\n                operation = exports.OPERATION.ADD;\n            }\n            this.$items.set(key, value);\n            this.$changes.change(key, operation);\n            return this;\n        };\n        MapSchema.prototype.get = function (key) {\n            return this.$items.get(key);\n        };\n        MapSchema.prototype.delete = function (key) {\n            //\n            // TODO: add a \"purge\" method after .encode() runs, to cleanup removed `$indexes`\n            //\n            // We don't remove $indexes to allow setting the same key in the same patch\n            // (See \"should allow to remove and set an item in the same place\" test)\n            //\n            // // const index = this.$changes.indexes[key];\n            // // this.$indexes.delete(index);\n            this.$changes.delete(key);\n            return this.$items.delete(key);\n        };\n        MapSchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        MapSchema.prototype.has = function (key) {\n            return this.$items.has(key);\n        };\n        MapSchema.prototype.forEach = function (callbackfn) {\n            this.$items.forEach(callbackfn);\n        };\n        MapSchema.prototype.entries = function () {\n            return this.$items.entries();\n        };\n        MapSchema.prototype.keys = function () {\n            return this.$items.keys();\n        };\n        MapSchema.prototype.values = function () {\n            return this.$items.values();\n        };\n        Object.defineProperty(MapSchema.prototype, \"size\", {\n            get: function () {\n                return this.$items.size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        MapSchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        MapSchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        MapSchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        MapSchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        MapSchema.prototype.toJSON = function () {\n            var map = {};\n            this.forEach(function (value, key) {\n                map[key] = (typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value;\n            });\n            return map;\n        };\n        //\n        // Decoding utilities\n        //\n        MapSchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new MapSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new MapSchema();\n                this.forEach(function (value, key) {\n                    if (value['$changes']) {\n                        cloned.set(key, value['clone']());\n                    }\n                    else {\n                        cloned.set(key, value);\n                    }\n                });\n            }\n            return cloned;\n        };\n        MapSchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return MapSchema;\n    }());\n\n    var registeredTypes = {};\n    function registerType(identifier, definition) {\n        registeredTypes[identifier] = definition;\n    }\n    function getType(identifier) {\n        return registeredTypes[identifier];\n    }\n\n    var SchemaDefinition = /** @class */ (function () {\n        function SchemaDefinition() {\n            //\n            // TODO: use a \"field\" structure combining all these properties per-field.\n            //\n            this.indexes = {};\n            this.fieldsByIndex = {};\n            this.deprecated = {};\n            this.descriptors = {};\n        }\n        SchemaDefinition.create = function (parent) {\n            var definition = new SchemaDefinition();\n            // support inheritance\n            definition.schema = Object.assign({}, parent && parent.schema || {});\n            definition.indexes = Object.assign({}, parent && parent.indexes || {});\n            definition.fieldsByIndex = Object.assign({}, parent && parent.fieldsByIndex || {});\n            definition.descriptors = Object.assign({}, parent && parent.descriptors || {});\n            definition.deprecated = Object.assign({}, parent && parent.deprecated || {});\n            return definition;\n        };\n        SchemaDefinition.prototype.addField = function (field, type) {\n            var index = this.getNextFieldIndex();\n            this.fieldsByIndex[index] = field;\n            this.indexes[field] = index;\n            this.schema[field] = (Array.isArray(type))\n                ? { array: type[0] }\n                : type;\n        };\n        SchemaDefinition.prototype.addFilter = function (field, cb) {\n            if (!this.filters) {\n                this.filters = {};\n                this.indexesWithFilters = [];\n            }\n            this.filters[this.indexes[field]] = cb;\n            this.indexesWithFilters.push(this.indexes[field]);\n            return true;\n        };\n        SchemaDefinition.prototype.addChildrenFilter = function (field, cb) {\n            var index = this.indexes[field];\n            var type = this.schema[field];\n            if (getType(Object.keys(type)[0])) {\n                if (!this.childFilters) {\n                    this.childFilters = {};\n                }\n                this.childFilters[index] = cb;\n                return true;\n            }\n            else {\n                console.warn(\"@filterChildren: field '\".concat(field, \"' can't have children. Ignoring filter.\"));\n            }\n        };\n        SchemaDefinition.prototype.getChildrenFilter = function (field) {\n            return this.childFilters && this.childFilters[this.indexes[field]];\n        };\n        SchemaDefinition.prototype.getNextFieldIndex = function () {\n            return Object.keys(this.schema || {}).length;\n        };\n        return SchemaDefinition;\n    }());\n    function hasFilter(klass) {\n        return klass._context && klass._context.useFilters;\n    }\n    var Context = /** @class */ (function () {\n        function Context() {\n            this.types = {};\n            this.schemas = new Map();\n            this.useFilters = false;\n        }\n        Context.prototype.has = function (schema) {\n            return this.schemas.has(schema);\n        };\n        Context.prototype.get = function (typeid) {\n            return this.types[typeid];\n        };\n        Context.prototype.add = function (schema, typeid) {\n            if (typeid === void 0) { typeid = this.schemas.size; }\n            // FIXME: move this to somewhere else?\n            // support inheritance\n            schema._definition = SchemaDefinition.create(schema._definition);\n            schema._typeid = typeid;\n            this.types[typeid] = schema;\n            this.schemas.set(schema, typeid);\n        };\n        Context.create = function (context) {\n            if (context === void 0) { context = new Context; }\n            return function (definition) {\n                return type(definition, context);\n            };\n        };\n        return Context;\n    }());\n    var globalContext = new Context();\n    /**\n     * `@type()` decorator for proxies\n     */\n    function type(type, context) {\n        if (context === void 0) { context = globalContext; }\n        return function (target, field) {\n            if (!type) {\n                throw new Error(\"Type not found. Ensure your `@type` annotations are correct and that you don't have any circular dependencies.\");\n            }\n            var constructor = target.constructor;\n            constructor._context = context;\n            /*\n             * static schema\n             */\n            if (!context.has(constructor)) {\n                context.add(constructor);\n            }\n            var definition = constructor._definition;\n            definition.addField(field, type);\n            /**\n             * skip if descriptor already exists for this field (`@deprecated()`)\n             */\n            if (definition.descriptors[field]) {\n                if (definition.deprecated[field]) {\n                    // do not create accessors for deprecated properties.\n                    return;\n                }\n                else {\n                    // trying to define same property multiple times across inheritance.\n                    // https://github.com/colyseus/colyseus-unity3d/issues/131#issuecomment-814308572\n                    try {\n                        throw new Error(\"@colyseus/schema: Duplicate '\".concat(field, \"' definition on '\").concat(constructor.name, \"'.\\nCheck @type() annotation\"));\n                    }\n                    catch (e) {\n                        var definitionAtLine = e.stack.split(\"\\n\")[4].trim();\n                        throw new Error(\"\".concat(e.message, \" \").concat(definitionAtLine));\n                    }\n                }\n            }\n            var isArray = ArraySchema.is(type);\n            var isMap = !isArray && MapSchema.is(type);\n            // TODO: refactor me.\n            // Allow abstract intermediary classes with no fields to be serialized\n            // (See \"should support an inheritance with a Schema type without fields\" test)\n            if (typeof (type) !== \"string\" && !Schema.is(type)) {\n                var childType = Object.values(type)[0];\n                if (typeof (childType) !== \"string\" && !context.has(childType)) {\n                    context.add(childType);\n                }\n            }\n            var fieldCached = \"_\".concat(field);\n            definition.descriptors[fieldCached] = {\n                enumerable: false,\n                configurable: false,\n                writable: true,\n            };\n            definition.descriptors[field] = {\n                get: function () {\n                    return this[fieldCached];\n                },\n                set: function (value) {\n                    /**\n                     * Create Proxy for array or map items\n                     */\n                    // skip if value is the same as cached.\n                    if (value === this[fieldCached]) {\n                        return;\n                    }\n                    if (value !== undefined &&\n                        value !== null) {\n                        // automaticallty transform Array into ArraySchema\n                        if (isArray && !(value instanceof ArraySchema)) {\n                            value = new (ArraySchema.bind.apply(ArraySchema, __spreadArray([void 0], value, false)))();\n                        }\n                        // automaticallty transform Map into MapSchema\n                        if (isMap && !(value instanceof MapSchema)) {\n                            value = new MapSchema(value);\n                        }\n                        // try to turn provided structure into a Proxy\n                        if (value['$proxy'] === undefined) {\n                            if (isMap) {\n                                value = getMapProxy(value);\n                            }\n                            else if (isArray) {\n                                value = getArrayProxy(value);\n                            }\n                        }\n                        // flag the change for encoding.\n                        this.$changes.change(field);\n                        //\n                        // call setParent() recursively for this and its child\n                        // structures.\n                        //\n                        if (value['$changes']) {\n                            value['$changes'].setParent(this, this.$changes.root, this._definition.indexes[field]);\n                        }\n                    }\n                    else if (this[fieldCached]) {\n                        //\n                        // Setting a field to `null` or `undefined` will delete it.\n                        //\n                        this.$changes.delete(field);\n                    }\n                    this[fieldCached] = value;\n                },\n                enumerable: true,\n                configurable: true\n            };\n        };\n    }\n    /**\n     * `@filter()` decorator for defining data filters per client\n     */\n    function filter(cb) {\n        return function (target, field) {\n            var constructor = target.constructor;\n            var definition = constructor._definition;\n            if (definition.addFilter(field, cb)) {\n                constructor._context.useFilters = true;\n            }\n        };\n    }\n    function filterChildren(cb) {\n        return function (target, field) {\n            var constructor = target.constructor;\n            var definition = constructor._definition;\n            if (definition.addChildrenFilter(field, cb)) {\n                constructor._context.useFilters = true;\n            }\n        };\n    }\n    /**\n     * `@deprecated()` flag a field as deprecated.\n     * The previous `@type()` annotation should remain along with this one.\n     */\n    function deprecated(throws, context) {\n        if (throws === void 0) { throws = true; }\n        return function (target, field) {\n            var constructor = target.constructor;\n            var definition = constructor._definition;\n            definition.deprecated[field] = true;\n            if (throws) {\n                definition.descriptors[field] = {\n                    get: function () { throw new Error(\"\".concat(field, \" is deprecated.\")); },\n                    set: function (value) { },\n                    enumerable: false,\n                    configurable: true\n                };\n            }\n        };\n    }\n    function defineTypes(target, fields, context) {\n        if (context === void 0) { context = target._context || globalContext; }\n        for (var field in fields) {\n            type(fields[field], context)(target.prototype, field);\n        }\n        return target;\n    }\n\n    /**\n     * Copyright (c) 2018 Endel Dreyer\n     * Copyright (c) 2014 Ion Drive Software Ltd.\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE\n     */\n    /**\n     * msgpack implementation highly based on notepack.io\n     * https://github.com/darrachequesne/notepack\n     */\n    function utf8Length(str) {\n        var c = 0, length = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                length += 1;\n            }\n            else if (c < 0x800) {\n                length += 2;\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                length += 3;\n            }\n            else {\n                i++;\n                length += 4;\n            }\n        }\n        return length;\n    }\n    function utf8Write(view, offset, str) {\n        var c = 0;\n        for (var i = 0, l = str.length; i < l; i++) {\n            c = str.charCodeAt(i);\n            if (c < 0x80) {\n                view[offset++] = c;\n            }\n            else if (c < 0x800) {\n                view[offset++] = 0xc0 | (c >> 6);\n                view[offset++] = 0x80 | (c & 0x3f);\n            }\n            else if (c < 0xd800 || c >= 0xe000) {\n                view[offset++] = 0xe0 | (c >> 12);\n                view[offset++] = 0x80 | (c >> 6 & 0x3f);\n                view[offset++] = 0x80 | (c & 0x3f);\n            }\n            else {\n                i++;\n                c = 0x10000 + (((c & 0x3ff) << 10) | (str.charCodeAt(i) & 0x3ff));\n                view[offset++] = 0xf0 | (c >> 18);\n                view[offset++] = 0x80 | (c >> 12 & 0x3f);\n                view[offset++] = 0x80 | (c >> 6 & 0x3f);\n                view[offset++] = 0x80 | (c & 0x3f);\n            }\n        }\n    }\n    function int8$1(bytes, value) {\n        bytes.push(value & 255);\n    }\n    function uint8$1(bytes, value) {\n        bytes.push(value & 255);\n    }\n    function int16$1(bytes, value) {\n        bytes.push(value & 255);\n        bytes.push((value >> 8) & 255);\n    }\n    function uint16$1(bytes, value) {\n        bytes.push(value & 255);\n        bytes.push((value >> 8) & 255);\n    }\n    function int32$1(bytes, value) {\n        bytes.push(value & 255);\n        bytes.push((value >> 8) & 255);\n        bytes.push((value >> 16) & 255);\n        bytes.push((value >> 24) & 255);\n    }\n    function uint32$1(bytes, value) {\n        var b4 = value >> 24;\n        var b3 = value >> 16;\n        var b2 = value >> 8;\n        var b1 = value;\n        bytes.push(b1 & 255);\n        bytes.push(b2 & 255);\n        bytes.push(b3 & 255);\n        bytes.push(b4 & 255);\n    }\n    function int64$1(bytes, value) {\n        var high = Math.floor(value / Math.pow(2, 32));\n        var low = value >>> 0;\n        uint32$1(bytes, low);\n        uint32$1(bytes, high);\n    }\n    function uint64$1(bytes, value) {\n        var high = (value / Math.pow(2, 32)) >> 0;\n        var low = value >>> 0;\n        uint32$1(bytes, low);\n        uint32$1(bytes, high);\n    }\n    function float32$1(bytes, value) {\n        writeFloat32(bytes, value);\n    }\n    function float64$1(bytes, value) {\n        writeFloat64(bytes, value);\n    }\n    var _int32$1 = new Int32Array(2);\n    var _float32$1 = new Float32Array(_int32$1.buffer);\n    var _float64$1 = new Float64Array(_int32$1.buffer);\n    function writeFloat32(bytes, value) {\n        _float32$1[0] = value;\n        int32$1(bytes, _int32$1[0]);\n    }\n    function writeFloat64(bytes, value) {\n        _float64$1[0] = value;\n        int32$1(bytes, _int32$1[0 ]);\n        int32$1(bytes, _int32$1[1 ]);\n    }\n    function boolean$1(bytes, value) {\n        return uint8$1(bytes, value ? 1 : 0);\n    }\n    function string$1(bytes, value) {\n        // encode `null` strings as empty.\n        if (!value) {\n            value = \"\";\n        }\n        var length = utf8Length(value);\n        var size = 0;\n        // fixstr\n        if (length < 0x20) {\n            bytes.push(length | 0xa0);\n            size = 1;\n        }\n        // str 8\n        else if (length < 0x100) {\n            bytes.push(0xd9);\n            uint8$1(bytes, length);\n            size = 2;\n        }\n        // str 16\n        else if (length < 0x10000) {\n            bytes.push(0xda);\n            uint16$1(bytes, length);\n            size = 3;\n        }\n        // str 32\n        else if (length < 0x100000000) {\n            bytes.push(0xdb);\n            uint32$1(bytes, length);\n            size = 5;\n        }\n        else {\n            throw new Error('String too long');\n        }\n        utf8Write(bytes, bytes.length, value);\n        return size + length;\n    }\n    function number$1(bytes, value) {\n        if (isNaN(value)) {\n            return number$1(bytes, 0);\n        }\n        else if (!isFinite(value)) {\n            return number$1(bytes, (value > 0) ? Number.MAX_SAFE_INTEGER : -Number.MAX_SAFE_INTEGER);\n        }\n        else if (value !== (value | 0)) {\n            bytes.push(0xcb);\n            writeFloat64(bytes, value);\n            return 9;\n            // TODO: encode float 32?\n            // is it possible to differentiate between float32 / float64 here?\n            // // float 32\n            // bytes.push(0xca);\n            // writeFloat32(bytes, value);\n            // return 5;\n        }\n        if (value >= 0) {\n            // positive fixnum\n            if (value < 0x80) {\n                uint8$1(bytes, value);\n                return 1;\n            }\n            // uint 8\n            if (value < 0x100) {\n                bytes.push(0xcc);\n                uint8$1(bytes, value);\n                return 2;\n            }\n            // uint 16\n            if (value < 0x10000) {\n                bytes.push(0xcd);\n                uint16$1(bytes, value);\n                return 3;\n            }\n            // uint 32\n            if (value < 0x100000000) {\n                bytes.push(0xce);\n                uint32$1(bytes, value);\n                return 5;\n            }\n            // uint 64\n            bytes.push(0xcf);\n            uint64$1(bytes, value);\n            return 9;\n        }\n        else {\n            // negative fixnum\n            if (value >= -0x20) {\n                bytes.push(0xe0 | (value + 0x20));\n                return 1;\n            }\n            // int 8\n            if (value >= -0x80) {\n                bytes.push(0xd0);\n                int8$1(bytes, value);\n                return 2;\n            }\n            // int 16\n            if (value >= -0x8000) {\n                bytes.push(0xd1);\n                int16$1(bytes, value);\n                return 3;\n            }\n            // int 32\n            if (value >= -0x80000000) {\n                bytes.push(0xd2);\n                int32$1(bytes, value);\n                return 5;\n            }\n            // int 64\n            bytes.push(0xd3);\n            int64$1(bytes, value);\n            return 9;\n        }\n    }\n\n    var encode = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        utf8Write: utf8Write,\n        int8: int8$1,\n        uint8: uint8$1,\n        int16: int16$1,\n        uint16: uint16$1,\n        int32: int32$1,\n        uint32: uint32$1,\n        int64: int64$1,\n        uint64: uint64$1,\n        float32: float32$1,\n        float64: float64$1,\n        writeFloat32: writeFloat32,\n        writeFloat64: writeFloat64,\n        boolean: boolean$1,\n        string: string$1,\n        number: number$1\n    });\n\n    /**\n     * Copyright (c) 2018 Endel Dreyer\n     * Copyright (c) 2014 Ion Drive Software Ltd.\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE\n     */\n    function utf8Read(bytes, offset, length) {\n        var string = '', chr = 0;\n        for (var i = offset, end = offset + length; i < end; i++) {\n            var byte = bytes[i];\n            if ((byte & 0x80) === 0x00) {\n                string += String.fromCharCode(byte);\n                continue;\n            }\n            if ((byte & 0xe0) === 0xc0) {\n                string += String.fromCharCode(((byte & 0x1f) << 6) |\n                    (bytes[++i] & 0x3f));\n                continue;\n            }\n            if ((byte & 0xf0) === 0xe0) {\n                string += String.fromCharCode(((byte & 0x0f) << 12) |\n                    ((bytes[++i] & 0x3f) << 6) |\n                    ((bytes[++i] & 0x3f) << 0));\n                continue;\n            }\n            if ((byte & 0xf8) === 0xf0) {\n                chr = ((byte & 0x07) << 18) |\n                    ((bytes[++i] & 0x3f) << 12) |\n                    ((bytes[++i] & 0x3f) << 6) |\n                    ((bytes[++i] & 0x3f) << 0);\n                if (chr >= 0x010000) { // surrogate pair\n                    chr -= 0x010000;\n                    string += String.fromCharCode((chr >>> 10) + 0xD800, (chr & 0x3FF) + 0xDC00);\n                }\n                else {\n                    string += String.fromCharCode(chr);\n                }\n                continue;\n            }\n            console.error('Invalid byte ' + byte.toString(16));\n            // (do not throw error to avoid server/client from crashing due to hack attemps)\n            // throw new Error('Invalid byte ' + byte.toString(16));\n        }\n        return string;\n    }\n    function int8(bytes, it) {\n        return uint8(bytes, it) << 24 >> 24;\n    }\n    function uint8(bytes, it) {\n        return bytes[it.offset++];\n    }\n    function int16(bytes, it) {\n        return uint16(bytes, it) << 16 >> 16;\n    }\n    function uint16(bytes, it) {\n        return bytes[it.offset++] | bytes[it.offset++] << 8;\n    }\n    function int32(bytes, it) {\n        return bytes[it.offset++] | bytes[it.offset++] << 8 | bytes[it.offset++] << 16 | bytes[it.offset++] << 24;\n    }\n    function uint32(bytes, it) {\n        return int32(bytes, it) >>> 0;\n    }\n    function float32(bytes, it) {\n        return readFloat32(bytes, it);\n    }\n    function float64(bytes, it) {\n        return readFloat64(bytes, it);\n    }\n    function int64(bytes, it) {\n        var low = uint32(bytes, it);\n        var high = int32(bytes, it) * Math.pow(2, 32);\n        return high + low;\n    }\n    function uint64(bytes, it) {\n        var low = uint32(bytes, it);\n        var high = uint32(bytes, it) * Math.pow(2, 32);\n        return high + low;\n    }\n    var _int32 = new Int32Array(2);\n    var _float32 = new Float32Array(_int32.buffer);\n    var _float64 = new Float64Array(_int32.buffer);\n    function readFloat32(bytes, it) {\n        _int32[0] = int32(bytes, it);\n        return _float32[0];\n    }\n    function readFloat64(bytes, it) {\n        _int32[0 ] = int32(bytes, it);\n        _int32[1 ] = int32(bytes, it);\n        return _float64[0];\n    }\n    function boolean(bytes, it) {\n        return uint8(bytes, it) > 0;\n    }\n    function string(bytes, it) {\n        var prefix = bytes[it.offset++];\n        var length;\n        if (prefix < 0xc0) {\n            // fixstr\n            length = prefix & 0x1f;\n        }\n        else if (prefix === 0xd9) {\n            length = uint8(bytes, it);\n        }\n        else if (prefix === 0xda) {\n            length = uint16(bytes, it);\n        }\n        else if (prefix === 0xdb) {\n            length = uint32(bytes, it);\n        }\n        var value = utf8Read(bytes, it.offset, length);\n        it.offset += length;\n        return value;\n    }\n    function stringCheck(bytes, it) {\n        var prefix = bytes[it.offset];\n        return (\n        // fixstr\n        (prefix < 0xc0 && prefix > 0xa0) ||\n            // str 8\n            prefix === 0xd9 ||\n            // str 16\n            prefix === 0xda ||\n            // str 32\n            prefix === 0xdb);\n    }\n    function number(bytes, it) {\n        var prefix = bytes[it.offset++];\n        if (prefix < 0x80) {\n            // positive fixint\n            return prefix;\n        }\n        else if (prefix === 0xca) {\n            // float 32\n            return readFloat32(bytes, it);\n        }\n        else if (prefix === 0xcb) {\n            // float 64\n            return readFloat64(bytes, it);\n        }\n        else if (prefix === 0xcc) {\n            // uint 8\n            return uint8(bytes, it);\n        }\n        else if (prefix === 0xcd) {\n            // uint 16\n            return uint16(bytes, it);\n        }\n        else if (prefix === 0xce) {\n            // uint 32\n            return uint32(bytes, it);\n        }\n        else if (prefix === 0xcf) {\n            // uint 64\n            return uint64(bytes, it);\n        }\n        else if (prefix === 0xd0) {\n            // int 8\n            return int8(bytes, it);\n        }\n        else if (prefix === 0xd1) {\n            // int 16\n            return int16(bytes, it);\n        }\n        else if (prefix === 0xd2) {\n            // int 32\n            return int32(bytes, it);\n        }\n        else if (prefix === 0xd3) {\n            // int 64\n            return int64(bytes, it);\n        }\n        else if (prefix > 0xdf) {\n            // negative fixint\n            return (0xff - prefix + 1) * -1;\n        }\n    }\n    function numberCheck(bytes, it) {\n        var prefix = bytes[it.offset];\n        // positive fixint - 0x00 - 0x7f\n        // float 32        - 0xca\n        // float 64        - 0xcb\n        // uint 8          - 0xcc\n        // uint 16         - 0xcd\n        // uint 32         - 0xce\n        // uint 64         - 0xcf\n        // int 8           - 0xd0\n        // int 16          - 0xd1\n        // int 32          - 0xd2\n        // int 64          - 0xd3\n        return (prefix < 0x80 ||\n            (prefix >= 0xca && prefix <= 0xd3));\n    }\n    function arrayCheck(bytes, it) {\n        return bytes[it.offset] < 0xa0;\n        // const prefix = bytes[it.offset] ;\n        // if (prefix < 0xa0) {\n        //   return prefix;\n        // // array\n        // } else if (prefix === 0xdc) {\n        //   it.offset += 2;\n        // } else if (0xdd) {\n        //   it.offset += 4;\n        // }\n        // return prefix;\n    }\n    function switchStructureCheck(bytes, it) {\n        return (\n        // previous byte should be `SWITCH_TO_STRUCTURE`\n        bytes[it.offset - 1] === SWITCH_TO_STRUCTURE &&\n            // next byte should be a number\n            (bytes[it.offset] < 0x80 || (bytes[it.offset] >= 0xca && bytes[it.offset] <= 0xd3)));\n    }\n\n    var decode = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        int8: int8,\n        uint8: uint8,\n        int16: int16,\n        uint16: uint16,\n        int32: int32,\n        uint32: uint32,\n        float32: float32,\n        float64: float64,\n        int64: int64,\n        uint64: uint64,\n        readFloat32: readFloat32,\n        readFloat64: readFloat64,\n        boolean: boolean,\n        string: string,\n        stringCheck: stringCheck,\n        number: number,\n        numberCheck: numberCheck,\n        arrayCheck: arrayCheck,\n        switchStructureCheck: switchStructureCheck\n    });\n\n    var CollectionSchema = /** @class */ (function () {\n        function CollectionSchema(initialValues) {\n            var _this = this;\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            if (initialValues) {\n                initialValues.forEach(function (v) { return _this.add(v); });\n            }\n        }\n        CollectionSchema.is = function (type) {\n            return type['collection'] !== undefined;\n        };\n        CollectionSchema.prototype.add = function (value) {\n            // set \"index\" for reference.\n            var index = this.$refId++;\n            var isRef = (value['$changes']) !== undefined;\n            if (isRef) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            this.$changes.indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this.$changes.change(index);\n            return index;\n        };\n        CollectionSchema.prototype.at = function (index) {\n            var key = Array.from(this.$items.keys())[index];\n            return this.$items.get(key);\n        };\n        CollectionSchema.prototype.entries = function () {\n            return this.$items.entries();\n        };\n        CollectionSchema.prototype.delete = function (item) {\n            var entries = this.$items.entries();\n            var index;\n            var entry;\n            while (entry = entries.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (item === entry.value[1]) {\n                    index = entry.value[0];\n                    break;\n                }\n            }\n            if (index === undefined) {\n                return false;\n            }\n            this.$changes.delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        };\n        CollectionSchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        CollectionSchema.prototype.has = function (value) {\n            return Array.from(this.$items.values()).some(function (v) { return v === value; });\n        };\n        CollectionSchema.prototype.forEach = function (callbackfn) {\n            var _this = this;\n            this.$items.forEach(function (value, key, _) { return callbackfn(value, key, _this); });\n        };\n        CollectionSchema.prototype.values = function () {\n            return this.$items.values();\n        };\n        Object.defineProperty(CollectionSchema.prototype, \"size\", {\n            get: function () {\n                return this.$items.size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        CollectionSchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        CollectionSchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        CollectionSchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        CollectionSchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        CollectionSchema.prototype.toArray = function () {\n            return Array.from(this.$items.values());\n        };\n        CollectionSchema.prototype.toJSON = function () {\n            var values = [];\n            this.forEach(function (value, key) {\n                values.push((typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value);\n            });\n            return values;\n        };\n        //\n        // Decoding utilities\n        //\n        CollectionSchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new CollectionSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new CollectionSchema();\n                this.forEach(function (value) {\n                    if (value['$changes']) {\n                        cloned.add(value['clone']());\n                    }\n                    else {\n                        cloned.add(value);\n                    }\n                });\n            }\n            return cloned;\n        };\n        CollectionSchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return CollectionSchema;\n    }());\n\n    var SetSchema = /** @class */ (function () {\n        function SetSchema(initialValues) {\n            var _this = this;\n            this.$changes = new ChangeTree(this);\n            this.$items = new Map();\n            this.$indexes = new Map();\n            this.$refId = 0;\n            if (initialValues) {\n                initialValues.forEach(function (v) { return _this.add(v); });\n            }\n        }\n        SetSchema.is = function (type) {\n            return type['set'] !== undefined;\n        };\n        SetSchema.prototype.add = function (value) {\n            var _a, _b;\n            // immediatelly return false if value already added.\n            if (this.has(value)) {\n                return false;\n            }\n            // set \"index\" for reference.\n            var index = this.$refId++;\n            if ((value['$changes']) !== undefined) {\n                value['$changes'].setParent(this, this.$changes.root, index);\n            }\n            var operation = (_b = (_a = this.$changes.indexes[index]) === null || _a === void 0 ? void 0 : _a.op) !== null && _b !== void 0 ? _b : exports.OPERATION.ADD;\n            this.$changes.indexes[index] = index;\n            this.$indexes.set(index, index);\n            this.$items.set(index, value);\n            this.$changes.change(index, operation);\n            return index;\n        };\n        SetSchema.prototype.entries = function () {\n            return this.$items.entries();\n        };\n        SetSchema.prototype.delete = function (item) {\n            var entries = this.$items.entries();\n            var index;\n            var entry;\n            while (entry = entries.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (item === entry.value[1]) {\n                    index = entry.value[0];\n                    break;\n                }\n            }\n            if (index === undefined) {\n                return false;\n            }\n            this.$changes.delete(index);\n            this.$indexes.delete(index);\n            return this.$items.delete(index);\n        };\n        SetSchema.prototype.clear = function (isDecoding) {\n            var _this = this;\n            // discard previous operations.\n            this.$changes.discard(true, true);\n            this.$changes.indexes = {};\n            // clear previous indexes\n            this.$indexes.clear();\n            // flag child items for garbage collection.\n            if (isDecoding && typeof (this.$changes.getType()) !== \"string\") {\n                this.$items.forEach(function (item) {\n                    _this.$changes.root.removeRef(item['$changes'].refId);\n                });\n            }\n            // clear items\n            this.$items.clear();\n            this.$changes.operation({ index: 0, op: exports.OPERATION.CLEAR });\n            // touch all structures until reach root\n            this.$changes.touchParents();\n        };\n        SetSchema.prototype.has = function (value) {\n            var values = this.$items.values();\n            var has = false;\n            var entry;\n            while (entry = values.next()) {\n                if (entry.done) {\n                    break;\n                }\n                if (value === entry.value) {\n                    has = true;\n                    break;\n                }\n            }\n            return has;\n        };\n        SetSchema.prototype.forEach = function (callbackfn) {\n            var _this = this;\n            this.$items.forEach(function (value, key, _) { return callbackfn(value, key, _this); });\n        };\n        SetSchema.prototype.values = function () {\n            return this.$items.values();\n        };\n        Object.defineProperty(SetSchema.prototype, \"size\", {\n            get: function () {\n                return this.$items.size;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        SetSchema.prototype.setIndex = function (index, key) {\n            this.$indexes.set(index, key);\n        };\n        SetSchema.prototype.getIndex = function (index) {\n            return this.$indexes.get(index);\n        };\n        SetSchema.prototype.getByIndex = function (index) {\n            return this.$items.get(this.$indexes.get(index));\n        };\n        SetSchema.prototype.deleteByIndex = function (index) {\n            var key = this.$indexes.get(index);\n            this.$items.delete(key);\n            this.$indexes.delete(index);\n        };\n        SetSchema.prototype.toArray = function () {\n            return Array.from(this.$items.values());\n        };\n        SetSchema.prototype.toJSON = function () {\n            var values = [];\n            this.forEach(function (value, key) {\n                values.push((typeof (value['toJSON']) === \"function\")\n                    ? value['toJSON']()\n                    : value);\n            });\n            return values;\n        };\n        //\n        // Decoding utilities\n        //\n        SetSchema.prototype.clone = function (isDecoding) {\n            var cloned;\n            if (isDecoding) {\n                // client-side\n                cloned = Object.assign(new SetSchema(), this);\n            }\n            else {\n                // server-side\n                cloned = new SetSchema();\n                this.forEach(function (value) {\n                    if (value['$changes']) {\n                        cloned.add(value['clone']());\n                    }\n                    else {\n                        cloned.add(value);\n                    }\n                });\n            }\n            return cloned;\n        };\n        SetSchema.prototype.triggerAll = function () {\n            Schema.prototype.triggerAll.apply(this);\n        };\n        return SetSchema;\n    }());\n\n    /**\n     * Extracted from https://www.npmjs.com/package/strong-events\n     */\n    var EventEmitter_ = /** @class */ (function () {\n        function EventEmitter_() {\n            this.handlers = [];\n        }\n        EventEmitter_.prototype.register = function (cb, once) {\n            this.handlers.push(cb);\n            return this;\n        };\n        EventEmitter_.prototype.invoke = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            this.handlers.forEach(function (handler) { return handler.apply(void 0, args); });\n        };\n        EventEmitter_.prototype.invokeAsync = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return Promise.all(this.handlers.map(function (handler) { return handler.apply(void 0, args); }));\n        };\n        EventEmitter_.prototype.remove = function (cb) {\n            var index = this.handlers.indexOf(cb);\n            this.handlers[index] = this.handlers[this.handlers.length - 1];\n            this.handlers.pop();\n        };\n        EventEmitter_.prototype.clear = function () {\n            this.handlers = [];\n        };\n        return EventEmitter_;\n    }());\n\n    var ClientState = /** @class */ (function () {\n        function ClientState() {\n            this.refIds = new WeakSet();\n            this.containerIndexes = new WeakMap();\n        }\n        // containerIndexes = new Map<ChangeTree, Set<number>>();\n        ClientState.prototype.addRefId = function (changeTree) {\n            if (!this.refIds.has(changeTree)) {\n                this.refIds.add(changeTree);\n                this.containerIndexes.set(changeTree, new Set());\n            }\n        };\n        ClientState.get = function (client) {\n            if (client.$filterState === undefined) {\n                client.$filterState = new ClientState();\n            }\n            return client.$filterState;\n        };\n        return ClientState;\n    }());\n\n    var EncodeSchemaError = /** @class */ (function (_super) {\n        __extends(EncodeSchemaError, _super);\n        function EncodeSchemaError() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EncodeSchemaError;\n    }(Error));\n    function assertType(value, type, klass, field) {\n        var typeofTarget;\n        var allowNull = false;\n        switch (type) {\n            case \"number\":\n            case \"int8\":\n            case \"uint8\":\n            case \"int16\":\n            case \"uint16\":\n            case \"int32\":\n            case \"uint32\":\n            case \"int64\":\n            case \"uint64\":\n            case \"float32\":\n            case \"float64\":\n                typeofTarget = \"number\";\n                if (isNaN(value)) {\n                    console.log(\"trying to encode \\\"NaN\\\" in \".concat(klass.constructor.name, \"#\").concat(field));\n                }\n                break;\n            case \"string\":\n                typeofTarget = \"string\";\n                allowNull = true;\n                break;\n            case \"boolean\":\n                // boolean is always encoded as true/false based on truthiness\n                return;\n        }\n        if (typeof (value) !== typeofTarget && (!allowNull || (allowNull && value !== null))) {\n            var foundValue = \"'\".concat(JSON.stringify(value), \"'\").concat((value && value.constructor && \" (\".concat(value.constructor.name, \")\")) || '');\n            throw new EncodeSchemaError(\"a '\".concat(typeofTarget, \"' was expected, but \").concat(foundValue, \" was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n        }\n    }\n    function assertInstanceType(value, type, klass, field) {\n        if (!(value instanceof type)) {\n            throw new EncodeSchemaError(\"a '\".concat(type.name, \"' was expected, but '\").concat(value.constructor.name, \"' was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n        }\n    }\n    function encodePrimitiveType(type, bytes, value, klass, field) {\n        assertType(value, type, klass, field);\n        var encodeFunc = encode[type];\n        if (encodeFunc) {\n            encodeFunc(bytes, value);\n        }\n        else {\n            throw new EncodeSchemaError(\"a '\".concat(type, \"' was expected, but \").concat(value, \" was provided in \").concat(klass.constructor.name, \"#\").concat(field));\n        }\n    }\n    function decodePrimitiveType(type, bytes, it) {\n        return decode[type](bytes, it);\n    }\n    /**\n     * Schema encoder / decoder\n     */\n    var Schema = /** @class */ (function () {\n        // allow inherited classes to have a constructor\n        function Schema() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // fix enumerability of fields for end-user\n            Object.defineProperties(this, {\n                $changes: {\n                    value: new ChangeTree(this, undefined, new Root()),\n                    enumerable: false,\n                    writable: true\n                },\n                $listeners: {\n                    value: {},\n                    enumerable: false,\n                    writable: true\n                },\n            });\n            var descriptors = this._definition.descriptors;\n            if (descriptors) {\n                Object.defineProperties(this, descriptors);\n            }\n            //\n            // Assign initial values\n            //\n            if (args[0]) {\n                this.assign(args[0]);\n            }\n        }\n        Schema.onError = function (e) {\n            console.error(e);\n        };\n        Schema.is = function (type) {\n            return (type['_definition'] &&\n                type['_definition'].schema !== undefined);\n        };\n        Schema.prototype.assign = function (props) {\n            Object.assign(this, props);\n            return this;\n        };\n        Object.defineProperty(Schema.prototype, \"_definition\", {\n            get: function () { return this.constructor._definition; },\n            enumerable: false,\n            configurable: true\n        });\n        Schema.prototype.listen = function (attr, callback) {\n            var _this = this;\n            if (!this.$listeners[attr]) {\n                this.$listeners[attr] = new EventEmitter_();\n            }\n            this.$listeners[attr].register(callback);\n            // return un-register callback.\n            return function () {\n                return _this.$listeners[attr].remove(callback);\n            };\n        };\n        Schema.prototype.decode = function (bytes, it, ref, allChanges) {\n            if (it === void 0) { it = { offset: 0 }; }\n            if (ref === void 0) { ref = this; }\n            if (allChanges === void 0) { allChanges = new Map(); }\n            var $root = this.$changes.root;\n            var totalBytes = bytes.length;\n            var refId = 0;\n            var changes = [];\n            $root.refs.set(refId, this);\n            allChanges.set(refId, changes);\n            while (it.offset < totalBytes) {\n                var byte = bytes[it.offset++];\n                if (byte == SWITCH_TO_STRUCTURE) {\n                    refId = number(bytes, it);\n                    var nextRef = $root.refs.get(refId);\n                    //\n                    // Trying to access a reference that haven't been decoded yet.\n                    //\n                    if (!nextRef) {\n                        throw new Error(\"\\\"refId\\\" not found: \".concat(refId));\n                    }\n                    ref = nextRef;\n                    // create empty list of changes for this refId.\n                    changes = [];\n                    allChanges.set(refId, changes);\n                    continue;\n                }\n                var changeTree = ref['$changes'];\n                var isSchema = (ref['_definition'] !== undefined);\n                var operation = (isSchema)\n                    ? (byte >> 6) << 6 // \"compressed\" index + operation\n                    : byte; // \"uncompressed\" index + operation (array/map items)\n                if (operation === exports.OPERATION.CLEAR) {\n                    //\n                    // TODO: refactor me!\n                    // The `.clear()` method is calling `$root.removeRef(refId)` for\n                    // each item inside this collection\n                    //\n                    ref.clear(true);\n                    continue;\n                }\n                var fieldIndex = (isSchema)\n                    ? byte % (operation || 255) // if \"REPLACE\" operation (0), use 255\n                    : number(bytes, it);\n                var fieldName = (isSchema)\n                    ? (ref['_definition'].fieldsByIndex[fieldIndex])\n                    : \"\";\n                var type = changeTree.getType(fieldIndex);\n                var value = void 0;\n                var previousValue = void 0;\n                var dynamicIndex = void 0;\n                if (!isSchema) {\n                    previousValue = ref['getByIndex'](fieldIndex);\n                    if ((operation & exports.OPERATION.ADD) === exports.OPERATION.ADD) { // ADD or DELETE_AND_ADD\n                        dynamicIndex = (ref instanceof MapSchema)\n                            ? string(bytes, it)\n                            : fieldIndex;\n                        ref['setIndex'](fieldIndex, dynamicIndex);\n                    }\n                    else {\n                        // here\n                        dynamicIndex = ref['getIndex'](fieldIndex);\n                    }\n                }\n                else {\n                    previousValue = ref[\"_\".concat(fieldName)];\n                }\n                //\n                // Delete operations\n                //\n                if ((operation & exports.OPERATION.DELETE) === exports.OPERATION.DELETE) {\n                    if (operation !== exports.OPERATION.DELETE_AND_ADD) {\n                        ref['deleteByIndex'](fieldIndex);\n                    }\n                    // Flag `refId` for garbage collection.\n                    if (previousValue && previousValue['$changes']) {\n                        $root.removeRef(previousValue['$changes'].refId);\n                    }\n                    value = null;\n                }\n                if (fieldName === undefined) {\n                    console.warn(\"@colyseus/schema: definition mismatch\");\n                    //\n                    // keep skipping next bytes until reaches a known structure\n                    // by local decoder.\n                    //\n                    var nextIterator = { offset: it.offset };\n                    while (it.offset < totalBytes) {\n                        if (switchStructureCheck(bytes, it)) {\n                            nextIterator.offset = it.offset + 1;\n                            if ($root.refs.has(number(bytes, nextIterator))) {\n                                break;\n                            }\n                        }\n                        it.offset++;\n                    }\n                    continue;\n                }\n                else if (operation === exports.OPERATION.DELETE) ;\n                else if (Schema.is(type)) {\n                    var refId_1 = number(bytes, it);\n                    value = $root.refs.get(refId_1);\n                    if (operation !== exports.OPERATION.REPLACE) {\n                        var childType = this.getSchemaType(bytes, it, type);\n                        if (!value) {\n                            value = this.createTypeInstance(childType);\n                            value.$changes.refId = refId_1;\n                            if (previousValue) {\n                                value.onChange = previousValue.onChange;\n                                value.onRemove = previousValue.onRemove;\n                                value.$listeners = previousValue.$listeners;\n                                if (previousValue['$changes'].refId &&\n                                    refId_1 !== previousValue['$changes'].refId) {\n                                    $root.removeRef(previousValue['$changes'].refId);\n                                }\n                            }\n                        }\n                        $root.addRef(refId_1, value, (value !== previousValue));\n                    }\n                }\n                else if (typeof (type) === \"string\") {\n                    //\n                    // primitive value (number, string, boolean, etc)\n                    //\n                    value = decodePrimitiveType(type, bytes, it);\n                }\n                else {\n                    var typeDef = getType(Object.keys(type)[0]);\n                    var refId_2 = number(bytes, it);\n                    var valueRef = ($root.refs.has(refId_2))\n                        ? previousValue || $root.refs.get(refId_2)\n                        : new typeDef.constructor();\n                    value = valueRef.clone(true);\n                    value.$changes.refId = refId_2;\n                    // preserve schema callbacks\n                    if (previousValue) {\n                        value.onAdd = previousValue.onAdd;\n                        value.onRemove = previousValue.onRemove;\n                        value.onChange = previousValue.onChange;\n                        if (previousValue['$changes'].refId &&\n                            refId_2 !== previousValue['$changes'].refId) {\n                            $root.removeRef(previousValue['$changes'].refId);\n                            //\n                            // Trigger onRemove if structure has been replaced.\n                            //\n                            var deletes = [];\n                            var entries = previousValue.entries();\n                            var iter = void 0;\n                            while ((iter = entries.next()) && !iter.done) {\n                                var _a = iter.value, key = _a[0], value_1 = _a[1];\n                                deletes.push({\n                                    op: exports.OPERATION.DELETE,\n                                    field: key,\n                                    value: undefined,\n                                    previousValue: value_1,\n                                });\n                            }\n                            allChanges.set(previousValue['$changes'].refId, deletes);\n                        }\n                    }\n                    $root.addRef(refId_2, value, (valueRef !== previousValue));\n                    //\n                    // TODO: deprecate proxies on next version.\n                    // get proxy to target value.\n                    //\n                    if (typeDef.getProxy) {\n                        value = typeDef.getProxy(value);\n                    }\n                }\n                var hasChange = (previousValue !== value);\n                if (value !== null &&\n                    value !== undefined) {\n                    if (value['$changes']) {\n                        value['$changes'].setParent(changeTree.ref, changeTree.root, fieldIndex);\n                    }\n                    if (ref instanceof Schema) {\n                        ref[fieldName] = value;\n                        //\n                        // FIXME: use `_field` instead of `field`.\n                        //\n                        // `field` is going to use the setter of the PropertyDescriptor\n                        // and create a proxy for array/map. This is only useful for\n                        // backwards-compatibility with @colyseus/schema@0.5.x\n                        //\n                        // // ref[_field] = value;\n                    }\n                    else if (ref instanceof MapSchema) {\n                        // const key = ref['$indexes'].get(field);\n                        var key = dynamicIndex;\n                        // ref.set(key, value);\n                        ref['$items'].set(key, value);\n                        ref['$changes'].allChanges.add(fieldIndex);\n                    }\n                    else if (ref instanceof ArraySchema) {\n                        // const key = ref['$indexes'][field];\n                        // console.log(\"SETTING FOR ArraySchema =>\", { field, key, value });\n                        // ref[key] = value;\n                        ref.setAt(fieldIndex, value);\n                    }\n                    else if (ref instanceof CollectionSchema) {\n                        var index = ref.add(value);\n                        ref['setIndex'](fieldIndex, index);\n                    }\n                    else if (ref instanceof SetSchema) {\n                        var index = ref.add(value);\n                        if (index !== false) {\n                            ref['setIndex'](fieldIndex, index);\n                        }\n                    }\n                }\n                if (hasChange\n                // &&\n                // (\n                //     this.onChange || ref.$listeners[field]\n                // )\n                ) {\n                    changes.push({\n                        op: operation,\n                        field: fieldName,\n                        dynamicIndex: dynamicIndex,\n                        value: value,\n                        previousValue: previousValue,\n                    });\n                }\n            }\n            this._triggerChanges(allChanges);\n            // drop references of unused schemas\n            $root.garbageCollectDeletedRefs();\n            return allChanges;\n        };\n        Schema.prototype.encode = function (encodeAll, bytes, useFilters) {\n            if (encodeAll === void 0) { encodeAll = false; }\n            if (bytes === void 0) { bytes = []; }\n            if (useFilters === void 0) { useFilters = false; }\n            var rootChangeTree = this.$changes;\n            var refIdsVisited = new WeakSet();\n            var changeTrees = [rootChangeTree];\n            var numChangeTrees = 1;\n            for (var i = 0; i < numChangeTrees; i++) {\n                var changeTree = changeTrees[i];\n                var ref = changeTree.ref;\n                var isSchema = (ref instanceof Schema);\n                // Generate unique refId for the ChangeTree.\n                changeTree.ensureRefId();\n                // mark this ChangeTree as visited.\n                refIdsVisited.add(changeTree);\n                // root `refId` is skipped.\n                if (changeTree !== rootChangeTree &&\n                    (changeTree.changed || encodeAll)) {\n                    uint8$1(bytes, SWITCH_TO_STRUCTURE);\n                    number$1(bytes, changeTree.refId);\n                }\n                var changes = (encodeAll)\n                    ? Array.from(changeTree.allChanges)\n                    : Array.from(changeTree.changes.values());\n                for (var j = 0, cl = changes.length; j < cl; j++) {\n                    var operation = (encodeAll)\n                        ? { op: exports.OPERATION.ADD, index: changes[j] }\n                        : changes[j];\n                    var fieldIndex = operation.index;\n                    var field = (isSchema)\n                        ? ref['_definition'].fieldsByIndex && ref['_definition'].fieldsByIndex[fieldIndex]\n                        : fieldIndex;\n                    // cache begin index if `useFilters`\n                    var beginIndex = bytes.length;\n                    // encode field index + operation\n                    if (operation.op !== exports.OPERATION.TOUCH) {\n                        if (isSchema) {\n                            //\n                            // Compress `fieldIndex` + `operation` into a single byte.\n                            // This adds a limitaion of 64 fields per Schema structure\n                            //\n                            uint8$1(bytes, (fieldIndex | operation.op));\n                        }\n                        else {\n                            uint8$1(bytes, operation.op);\n                            // custom operations\n                            if (operation.op === exports.OPERATION.CLEAR) {\n                                continue;\n                            }\n                            // indexed operations\n                            number$1(bytes, fieldIndex);\n                        }\n                    }\n                    //\n                    // encode \"alias\" for dynamic fields (maps)\n                    //\n                    if (!isSchema &&\n                        (operation.op & exports.OPERATION.ADD) == exports.OPERATION.ADD // ADD or DELETE_AND_ADD\n                    ) {\n                        if (ref instanceof MapSchema) {\n                            //\n                            // MapSchema dynamic key\n                            //\n                            var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                            string$1(bytes, dynamicIndex);\n                        }\n                    }\n                    if (operation.op === exports.OPERATION.DELETE) {\n                        //\n                        // TODO: delete from filter cache data.\n                        //\n                        // if (useFilters) {\n                        //     delete changeTree.caches[fieldIndex];\n                        // }\n                        continue;\n                    }\n                    // const type = changeTree.childType || ref._schema[field];\n                    var type = changeTree.getType(fieldIndex);\n                    // const type = changeTree.getType(fieldIndex);\n                    var value = changeTree.getValue(fieldIndex);\n                    // Enqueue ChangeTree to be visited\n                    if (value &&\n                        value['$changes'] &&\n                        !refIdsVisited.has(value['$changes'])) {\n                        changeTrees.push(value['$changes']);\n                        value['$changes'].ensureRefId();\n                        numChangeTrees++;\n                    }\n                    if (operation.op === exports.OPERATION.TOUCH) {\n                        continue;\n                    }\n                    if (Schema.is(type)) {\n                        assertInstanceType(value, type, ref, field);\n                        //\n                        // Encode refId for this instance.\n                        // The actual instance is going to be encoded on next `changeTree` iteration.\n                        //\n                        number$1(bytes, value.$changes.refId);\n                        // Try to encode inherited TYPE_ID if it's an ADD operation.\n                        if ((operation.op & exports.OPERATION.ADD) === exports.OPERATION.ADD) {\n                            this.tryEncodeTypeId(bytes, type, value.constructor);\n                        }\n                    }\n                    else if (typeof (type) === \"string\") {\n                        //\n                        // Primitive values\n                        //\n                        encodePrimitiveType(type, bytes, value, ref, field);\n                    }\n                    else {\n                        //\n                        // Custom type (MapSchema, ArraySchema, etc)\n                        //\n                        var definition = getType(Object.keys(type)[0]);\n                        //\n                        // ensure a ArraySchema has been provided\n                        //\n                        assertInstanceType(ref[\"_\".concat(field)], definition.constructor, ref, field);\n                        //\n                        // Encode refId for this instance.\n                        // The actual instance is going to be encoded on next `changeTree` iteration.\n                        //\n                        number$1(bytes, value.$changes.refId);\n                    }\n                    if (useFilters) {\n                        // cache begin / end index\n                        changeTree.cache(fieldIndex, bytes.slice(beginIndex));\n                    }\n                }\n                if (!encodeAll && !useFilters) {\n                    changeTree.discard();\n                }\n            }\n            return bytes;\n        };\n        Schema.prototype.encodeAll = function (useFilters) {\n            return this.encode(true, [], useFilters);\n        };\n        Schema.prototype.applyFilters = function (client, encodeAll) {\n            var _a, _b;\n            if (encodeAll === void 0) { encodeAll = false; }\n            var root = this;\n            var refIdsDissallowed = new Set();\n            var $filterState = ClientState.get(client);\n            var changeTrees = [this.$changes];\n            var numChangeTrees = 1;\n            var filteredBytes = [];\n            var _loop_1 = function (i) {\n                var changeTree = changeTrees[i];\n                if (refIdsDissallowed.has(changeTree.refId)) {\n                    return \"continue\";\n                }\n                var ref = changeTree.ref;\n                var isSchema = ref instanceof Schema;\n                uint8$1(filteredBytes, SWITCH_TO_STRUCTURE);\n                number$1(filteredBytes, changeTree.refId);\n                var clientHasRefId = $filterState.refIds.has(changeTree);\n                var isEncodeAll = (encodeAll || !clientHasRefId);\n                // console.log(\"REF:\", ref.constructor.name);\n                // console.log(\"Encode all?\", isEncodeAll);\n                //\n                // include `changeTree` on list of known refIds by this client.\n                //\n                $filterState.addRefId(changeTree);\n                var containerIndexes = $filterState.containerIndexes.get(changeTree);\n                var changes = (isEncodeAll)\n                    ? Array.from(changeTree.allChanges)\n                    : Array.from(changeTree.changes.values());\n                //\n                // WORKAROUND: tries to re-evaluate previously not included @filter() attributes\n                // - see \"DELETE a field of Schema\" test case.\n                //\n                if (!encodeAll &&\n                    isSchema &&\n                    ref._definition.indexesWithFilters) {\n                    var indexesWithFilters = ref._definition.indexesWithFilters;\n                    indexesWithFilters.forEach(function (indexWithFilter) {\n                        if (!containerIndexes.has(indexWithFilter) &&\n                            changeTree.allChanges.has(indexWithFilter)) {\n                            if (isEncodeAll) {\n                                changes.push(indexWithFilter);\n                            }\n                            else {\n                                changes.push({ op: exports.OPERATION.ADD, index: indexWithFilter, });\n                            }\n                        }\n                    });\n                }\n                for (var j = 0, cl = changes.length; j < cl; j++) {\n                    var change = (isEncodeAll)\n                        ? { op: exports.OPERATION.ADD, index: changes[j] }\n                        : changes[j];\n                    // custom operations\n                    if (change.op === exports.OPERATION.CLEAR) {\n                        uint8$1(filteredBytes, change.op);\n                        continue;\n                    }\n                    var fieldIndex = change.index;\n                    //\n                    // Deleting fields: encode the operation + field index\n                    //\n                    if (change.op === exports.OPERATION.DELETE) {\n                        //\n                        // DELETE operations also need to go through filtering.\n                        //\n                        // TODO: cache the previous value so we can access the value (primitive or `refId`)\n                        // (check against `$filterState.refIds`)\n                        //\n                        if (isSchema) {\n                            uint8$1(filteredBytes, change.op | fieldIndex);\n                        }\n                        else {\n                            uint8$1(filteredBytes, change.op);\n                            number$1(filteredBytes, fieldIndex);\n                        }\n                        continue;\n                    }\n                    // indexed operation\n                    var value = changeTree.getValue(fieldIndex);\n                    var type = changeTree.getType(fieldIndex);\n                    if (isSchema) {\n                        // Is a Schema!\n                        var filter = (ref._definition.filters &&\n                            ref._definition.filters[fieldIndex]);\n                        if (filter && !filter.call(ref, client, value, root)) {\n                            if (value && value['$changes']) {\n                                refIdsDissallowed.add(value['$changes'].refId);\n                            }\n                            continue;\n                        }\n                    }\n                    else {\n                        // Is a collection! (map, array, etc.)\n                        var parent = changeTree.parent;\n                        var filter = changeTree.getChildrenFilter();\n                        if (filter && !filter.call(parent, client, ref['$indexes'].get(fieldIndex), value, root)) {\n                            if (value && value['$changes']) {\n                                refIdsDissallowed.add(value['$changes'].refId);\n                            }\n                            continue;\n                        }\n                    }\n                    // visit child ChangeTree on further iteration.\n                    if (value['$changes']) {\n                        changeTrees.push(value['$changes']);\n                        numChangeTrees++;\n                    }\n                    //\n                    // Copy cached bytes\n                    //\n                    if (change.op !== exports.OPERATION.TOUCH) {\n                        //\n                        // TODO: refactor me!\n                        //\n                        if (change.op === exports.OPERATION.ADD || isSchema) {\n                            //\n                            // use cached bytes directly if is from Schema type.\n                            //\n                            filteredBytes.push.apply(filteredBytes, (_a = changeTree.caches[fieldIndex]) !== null && _a !== void 0 ? _a : []);\n                            containerIndexes.add(fieldIndex);\n                        }\n                        else {\n                            if (containerIndexes.has(fieldIndex)) {\n                                //\n                                // use cached bytes if already has the field\n                                //\n                                filteredBytes.push.apply(filteredBytes, (_b = changeTree.caches[fieldIndex]) !== null && _b !== void 0 ? _b : []);\n                            }\n                            else {\n                                //\n                                // force ADD operation if field is not known by this client.\n                                //\n                                containerIndexes.add(fieldIndex);\n                                uint8$1(filteredBytes, exports.OPERATION.ADD);\n                                number$1(filteredBytes, fieldIndex);\n                                if (ref instanceof MapSchema) {\n                                    //\n                                    // MapSchema dynamic key\n                                    //\n                                    var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                                    string$1(filteredBytes, dynamicIndex);\n                                }\n                                if (value['$changes']) {\n                                    number$1(filteredBytes, value['$changes'].refId);\n                                }\n                                else {\n                                    // \"encodePrimitiveType\" without type checking.\n                                    // the type checking has been done on the first .encode() call.\n                                    encode[type](filteredBytes, value);\n                                }\n                            }\n                        }\n                    }\n                    else if (value['$changes'] && !isSchema) {\n                        //\n                        // TODO:\n                        // - track ADD/REPLACE/DELETE instances on `$filterState`\n                        // - do NOT always encode dynamicIndex for MapSchema.\n                        //   (If client already has that key, only the first index is necessary.)\n                        //\n                        uint8$1(filteredBytes, exports.OPERATION.ADD);\n                        number$1(filteredBytes, fieldIndex);\n                        if (ref instanceof MapSchema) {\n                            //\n                            // MapSchema dynamic key\n                            //\n                            var dynamicIndex = changeTree.ref['$indexes'].get(fieldIndex);\n                            string$1(filteredBytes, dynamicIndex);\n                        }\n                        number$1(filteredBytes, value['$changes'].refId);\n                    }\n                }\n            };\n            for (var i = 0; i < numChangeTrees; i++) {\n                _loop_1(i);\n            }\n            return filteredBytes;\n        };\n        Schema.prototype.clone = function () {\n            var _a;\n            var cloned = new (this.constructor);\n            var schema = this._definition.schema;\n            for (var field in schema) {\n                if (typeof (this[field]) === \"object\" &&\n                    typeof ((_a = this[field]) === null || _a === void 0 ? void 0 : _a.clone) === \"function\") {\n                    // deep clone\n                    cloned[field] = this[field].clone();\n                }\n                else {\n                    // primitive values\n                    cloned[field] = this[field];\n                }\n            }\n            return cloned;\n        };\n        Schema.prototype.triggerAll = function () {\n            // skip if haven't received any remote refs yet.\n            if (this.$changes.root.refs.size === 0) {\n                return;\n            }\n            var allChanges = new Map();\n            Schema.prototype._triggerAllFillChanges.call(this, this, allChanges);\n            try {\n                Schema.prototype._triggerChanges.call(this, allChanges);\n            }\n            catch (e) {\n                Schema.onError(e);\n            }\n        };\n        Schema.prototype.toJSON = function () {\n            var schema = this._definition.schema;\n            var deprecated = this._definition.deprecated;\n            var obj = {};\n            for (var field in schema) {\n                if (!deprecated[field] && this[field] !== null && typeof (this[field]) !== \"undefined\") {\n                    obj[field] = (typeof (this[field]['toJSON']) === \"function\")\n                        ? this[field]['toJSON']()\n                        : this[\"_\".concat(field)];\n                }\n            }\n            return obj;\n        };\n        Schema.prototype.discardAllChanges = function () {\n            this.$changes.discardAll();\n        };\n        Schema.prototype.getByIndex = function (index) {\n            return this[this._definition.fieldsByIndex[index]];\n        };\n        Schema.prototype.deleteByIndex = function (index) {\n            this[this._definition.fieldsByIndex[index]] = undefined;\n        };\n        Schema.prototype.tryEncodeTypeId = function (bytes, type, targetType) {\n            if (type._typeid !== targetType._typeid) {\n                uint8$1(bytes, TYPE_ID);\n                number$1(bytes, targetType._typeid);\n            }\n        };\n        Schema.prototype.getSchemaType = function (bytes, it, defaultType) {\n            var type;\n            if (bytes[it.offset] === TYPE_ID) {\n                it.offset++;\n                type = this.constructor._context.get(number(bytes, it));\n            }\n            return type || defaultType;\n        };\n        Schema.prototype.createTypeInstance = function (type) {\n            var instance = new type();\n            // assign root on $changes\n            instance.$changes.root = this.$changes.root;\n            return instance;\n        };\n        Schema.prototype._triggerAllFillChanges = function (ref, allChanges) {\n            if (allChanges.has(ref['$changes'].refId)) {\n                return;\n            }\n            var changes = [];\n            allChanges.set(ref['$changes'].refId || 0, changes);\n            if (ref instanceof Schema) {\n                var schema = ref._definition.schema;\n                for (var fieldName in schema) {\n                    var _field = \"_\".concat(fieldName);\n                    var value = ref[_field];\n                    if (value !== undefined) {\n                        changes.push({\n                            op: exports.OPERATION.ADD,\n                            field: fieldName,\n                            value: value,\n                            previousValue: undefined\n                        });\n                        if (value['$changes'] !== undefined) {\n                            Schema.prototype._triggerAllFillChanges.call(this, value, allChanges);\n                        }\n                    }\n                }\n            }\n            else {\n                var entries = ref.entries();\n                var iter = void 0;\n                while ((iter = entries.next()) && !iter.done) {\n                    var _a = iter.value, key = _a[0], value = _a[1];\n                    changes.push({\n                        op: exports.OPERATION.ADD,\n                        field: key,\n                        dynamicIndex: key,\n                        value: value,\n                        previousValue: undefined,\n                    });\n                    if (value['$changes'] !== undefined) {\n                        Schema.prototype._triggerAllFillChanges.call(this, value, allChanges);\n                    }\n                }\n            }\n        };\n        Schema.prototype._triggerChanges = function (allChanges) {\n            var _this = this;\n            allChanges.forEach(function (changes, refId) {\n                var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n                if (changes.length > 0) {\n                    var ref = _this.$changes.root.refs.get(refId);\n                    var isSchema = ref instanceof Schema;\n                    for (var i = 0; i < changes.length; i++) {\n                        var change = changes[i];\n                        var listener = ref['$listeners'] && ref['$listeners'][change.field];\n                        if (!isSchema) {\n                            if (change.op === exports.OPERATION.ADD && change.previousValue === undefined) {\n                                (_b = (_a = ref).onAdd) === null || _b === void 0 ? void 0 : _b.call(_a, change.value, (_c = change.dynamicIndex) !== null && _c !== void 0 ? _c : change.field);\n                            }\n                            else if (change.op === exports.OPERATION.DELETE) {\n                                //\n                                // FIXME: `previousValue` should always be avaiiable.\n                                // ADD + DELETE operations are still encoding DELETE operation.\n                                //\n                                if (change.previousValue !== undefined) {\n                                    (_e = (_d = ref).onRemove) === null || _e === void 0 ? void 0 : _e.call(_d, change.previousValue, (_f = change.dynamicIndex) !== null && _f !== void 0 ? _f : change.field);\n                                }\n                            }\n                            else if (change.op === exports.OPERATION.DELETE_AND_ADD) {\n                                if (change.previousValue !== undefined) {\n                                    (_h = (_g = ref).onRemove) === null || _h === void 0 ? void 0 : _h.call(_g, change.previousValue, change.dynamicIndex);\n                                }\n                                (_k = (_j = ref).onAdd) === null || _k === void 0 ? void 0 : _k.call(_j, change.value, change.dynamicIndex);\n                            }\n                            else if (change.op === exports.OPERATION.REPLACE ||\n                                change.value !== change.previousValue) {\n                                (_m = (_l = ref).onChange) === null || _m === void 0 ? void 0 : _m.call(_l, change.value, change.dynamicIndex);\n                            }\n                        }\n                        //\n                        // trigger onRemove on child structure.\n                        //\n                        if ((change.op & exports.OPERATION.DELETE) === exports.OPERATION.DELETE &&\n                            change.previousValue instanceof Schema &&\n                            change.previousValue.onRemove) {\n                            change.previousValue.onRemove();\n                        }\n                        if (listener) {\n                            try {\n                                listener.invoke(change.value, change.previousValue);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                    }\n                    if (isSchema) {\n                        if (ref.onChange) {\n                            try {\n                                ref.onChange(changes);\n                            }\n                            catch (e) {\n                                Schema.onError(e);\n                            }\n                        }\n                    }\n                }\n            });\n        };\n        Schema._definition = SchemaDefinition.create();\n        return Schema;\n    }());\n\n    function dumpChanges(schema) {\n        var changeTrees = [schema['$changes']];\n        var numChangeTrees = 1;\n        var dump = {};\n        var currentStructure = dump;\n        var _loop_1 = function (i) {\n            var changeTree = changeTrees[i];\n            changeTree.changes.forEach(function (change) {\n                var ref = changeTree.ref;\n                var fieldIndex = change.index;\n                var field = (ref['_definition'])\n                    ? ref['_definition'].fieldsByIndex[fieldIndex]\n                    : ref['$indexes'].get(fieldIndex);\n                currentStructure[field] = changeTree.getValue(fieldIndex);\n            });\n        };\n        for (var i = 0; i < numChangeTrees; i++) {\n            _loop_1(i);\n        }\n        return dump;\n    }\n\n    var reflectionContext = new Context();\n    /**\n     * Reflection\n     */\n    var ReflectionField = /** @class */ (function (_super) {\n        __extends(ReflectionField, _super);\n        function ReflectionField() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        __decorate([\n            type(\"string\", reflectionContext)\n        ], ReflectionField.prototype, \"name\", void 0);\n        __decorate([\n            type(\"string\", reflectionContext)\n        ], ReflectionField.prototype, \"type\", void 0);\n        __decorate([\n            type(\"number\", reflectionContext)\n        ], ReflectionField.prototype, \"referencedType\", void 0);\n        return ReflectionField;\n    }(Schema));\n    var ReflectionType = /** @class */ (function (_super) {\n        __extends(ReflectionType, _super);\n        function ReflectionType() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.fields = new ArraySchema();\n            return _this;\n        }\n        __decorate([\n            type(\"number\", reflectionContext)\n        ], ReflectionType.prototype, \"id\", void 0);\n        __decorate([\n            type([ReflectionField], reflectionContext)\n        ], ReflectionType.prototype, \"fields\", void 0);\n        return ReflectionType;\n    }(Schema));\n    var Reflection = /** @class */ (function (_super) {\n        __extends(Reflection, _super);\n        function Reflection() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.types = new ArraySchema();\n            return _this;\n        }\n        Reflection.encode = function (instance) {\n            var rootSchemaType = instance.constructor;\n            var reflection = new Reflection();\n            reflection.rootType = rootSchemaType._typeid;\n            var buildType = function (currentType, schema) {\n                for (var fieldName in schema) {\n                    var field = new ReflectionField();\n                    field.name = fieldName;\n                    var fieldType = void 0;\n                    if (typeof (schema[fieldName]) === \"string\") {\n                        fieldType = schema[fieldName];\n                    }\n                    else {\n                        var type_1 = schema[fieldName];\n                        var childTypeSchema = void 0;\n                        //\n                        // TODO: refactor below.\n                        //\n                        if (Schema.is(type_1)) {\n                            fieldType = \"ref\";\n                            childTypeSchema = schema[fieldName];\n                        }\n                        else {\n                            fieldType = Object.keys(type_1)[0];\n                            if (typeof (type_1[fieldType]) === \"string\") {\n                                fieldType += \":\" + type_1[fieldType]; // array:string\n                            }\n                            else {\n                                childTypeSchema = type_1[fieldType];\n                            }\n                        }\n                        field.referencedType = (childTypeSchema)\n                            ? childTypeSchema._typeid\n                            : -1;\n                    }\n                    field.type = fieldType;\n                    currentType.fields.push(field);\n                }\n                reflection.types.push(currentType);\n            };\n            var types = rootSchemaType._context.types;\n            for (var typeid in types) {\n                var type_2 = new ReflectionType();\n                type_2.id = Number(typeid);\n                buildType(type_2, types[typeid]._definition.schema);\n            }\n            return reflection.encodeAll();\n        };\n        Reflection.decode = function (bytes, it) {\n            var context = new Context();\n            var reflection = new Reflection();\n            reflection.decode(bytes, it);\n            var schemaTypes = reflection.types.reduce(function (types, reflectionType) {\n                var schema = /** @class */ (function (_super) {\n                    __extends(_, _super);\n                    function _() {\n                        return _super !== null && _super.apply(this, arguments) || this;\n                    }\n                    return _;\n                }(Schema));\n                var typeid = reflectionType.id;\n                types[typeid] = schema;\n                context.add(schema, typeid);\n                return types;\n            }, {});\n            reflection.types.forEach(function (reflectionType) {\n                var schemaType = schemaTypes[reflectionType.id];\n                reflectionType.fields.forEach(function (field) {\n                    var _a;\n                    if (field.referencedType !== undefined) {\n                        var fieldType = field.type;\n                        var refType = schemaTypes[field.referencedType];\n                        // map or array of primitive type (-1)\n                        if (!refType) {\n                            var typeInfo = field.type.split(\":\");\n                            fieldType = typeInfo[0];\n                            refType = typeInfo[1];\n                        }\n                        if (fieldType === \"ref\") {\n                            type(refType, context)(schemaType.prototype, field.name);\n                        }\n                        else {\n                            type((_a = {}, _a[fieldType] = refType, _a), context)(schemaType.prototype, field.name);\n                        }\n                    }\n                    else {\n                        type(field.type, context)(schemaType.prototype, field.name);\n                    }\n                });\n            });\n            var rootType = schemaTypes[reflection.rootType];\n            var rootInstance = new rootType();\n            /**\n             * auto-initialize referenced types on root type\n             * to allow registering listeners immediatelly on client-side\n             */\n            for (var fieldName in rootType._definition.schema) {\n                var fieldType = rootType._definition.schema[fieldName];\n                if (typeof (fieldType) !== \"string\") {\n                    rootInstance[fieldName] = (typeof (fieldType) === \"function\")\n                        ? new fieldType() // is a schema reference\n                        : new (getType(Object.keys(fieldType)[0])).constructor(); // is a \"collection\"\n                }\n            }\n            return rootInstance;\n        };\n        __decorate([\n            type([ReflectionType], reflectionContext)\n        ], Reflection.prototype, \"types\", void 0);\n        __decorate([\n            type(\"number\", reflectionContext)\n        ], Reflection.prototype, \"rootType\", void 0);\n        return Reflection;\n    }(Schema));\n\n    registerType(\"map\", { constructor: MapSchema, getProxy: getMapProxy });\n    registerType(\"array\", { constructor: ArraySchema, getProxy: getArrayProxy });\n    registerType(\"set\", { constructor: SetSchema });\n    registerType(\"collection\", { constructor: CollectionSchema, });\n\n    exports.ArraySchema = ArraySchema;\n    exports.CollectionSchema = CollectionSchema;\n    exports.Context = Context;\n    exports.MapSchema = MapSchema;\n    exports.Reflection = Reflection;\n    exports.ReflectionField = ReflectionField;\n    exports.ReflectionType = ReflectionType;\n    exports.Schema = Schema;\n    exports.SchemaDefinition = SchemaDefinition;\n    exports.SetSchema = SetSchema;\n    exports.decode = decode;\n    exports.defineTypes = defineTypes;\n    exports.deprecated = deprecated;\n    exports.dumpChanges = dumpChanges;\n    exports.encode = encode;\n    exports.filter = filter;\n    exports.filterChildren = filterChildren;\n    exports.hasFilter = hasFilter;\n    exports.registerType = registerType;\n    exports.type = type;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"},"lineCount":3292}},"error":null,"hash":"f567740f28583264311abac729714e0c","cacheData":{"env":{}}}